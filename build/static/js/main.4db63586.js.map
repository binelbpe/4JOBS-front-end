{"version":3,"file":"static/js/main.4db63586.js","mappings":"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","sources":["../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","api/authapi.ts","redux/slices/authSlice.ts","api/adminApi.ts","redux/slices/adminSlice.ts","api/recruiterApi.ts","redux/slices/recruiterSlice.ts","redux/slices/jobPostSlice.ts","redux/slices/contestantSlice.ts","redux/slices/postSlice.ts","redux/slices/adminJobPostSlice.ts","redux/slices/connectionSlice.ts","redux/slices/notificationSlice.ts","redux/slices/userMessageSlice.ts","redux/slices/recruiterMessageSlice.ts","redux/slices/userRecruiterMessageSlice.ts","redux/slices/adminSubscriptionSlice.ts","redux/slices/adminUserPostSlice.ts","redux/slices/userSearchSlice.ts","redux/slices/recruiterSearchSlice.ts","redux/slices/resumeSlice.ts","redux/store.ts","services/socketService.ts","contexts/CallContext.tsx","components/user/Login.tsx","components/user/SignupForm.tsx","components/user/OtpVerification.tsx","components/user/Signup.tsx","utils/socketUtils.ts","components/user/Header.tsx","components/user/Sidebar.tsx","components/user/posts/CreatePostButton.tsx","components/user/posts/Post.tsx","components/user/Main.tsx","components/user/RecommendationCard.tsx","components/user/RecommendationsPanel.tsx","components/user/Dashboard.tsx","components/user/PrivateRoute.tsx","components/admin/AdminLogin.tsx","components/admin/AdminSidebar.tsx","components/admin/AdminHeader.tsx","components/admin/AdminDashboard.tsx","components/admin/AdminPrivateRoute.tsx","components/recruiter/RecruiterLogin.tsx","components/recruiter/RecruiterRegister.tsx","components/recruiter/RecruiterSearchResults.tsx","components/recruiter/RecruiterHeader.tsx","components/recruiter/RecruiterSidebar.tsx","components/recruiter/RecruiterJobList.tsx","components/recruiter/RecruiterMain.tsx","components/recruiter/RecruiterHome.tsx","components/recruiter/RecruiterPrivateRoute.tsx","components/recruiter/RecruiterVerifyOtp.tsx","components/admin/AdminRecruiterList.tsx","components/LoadingSpinner.tsx","components/user/UserProfile.tsx","components/user/Profile.tsx","components/user/Resume.tsx","components/user/Project.tsx","components/user/Certificates.tsx","components/user/Experiences.tsx","components/user/UpdateProfile.tsx","components/admin/AdminProfile.tsx","components/recruiter/RecruiterProfile.tsx","components/recruiter/RecruiterProfileUpdate.tsx","components/recruiter/jobPost/JobPost.tsx","components/recruiter/jobPost/ConfirmationModal.tsx","components/recruiter/jobPost/JobPostWrapper.tsx","components/recruiter/jobPost/formValidation.ts","components/recruiter/jobPost/JobPostForm.tsx","components/recruiter/subscription/SubscriptionPlans.tsx","components/recruiter/subscription/RazorpayPayment.tsx","components/recruiter/jobPost/CreateJobPost.tsx","components/recruiter/jobPost/Toast.tsx","components/recruiter/jobPost/EditJobPost.tsx","components/user/JobList.tsx","components/user/JobDetail.tsx","components/recruiter/jobPost/common/agination.tsx","components/recruiter/jobPost/common/ErrorMessage.tsx","components/recruiter/jobPost/common/LoadingSpinner.tsx","components/recruiter/jobPost/JobContestantsList.tsx","components/recruiter/jobPost/ContestantDetails.tsx","components/admin/AdminUserList.tsx","components/user/posts/PostList.tsx","utils/fileUtils.ts","components/common/CompressionLoader.tsx","components/common/FullScreenLoader.tsx","components/user/posts/CreatePost.tsx","components/common/ConfirmationModal.tsx","components/user/posts/EditPost.tsx","components/admin/AdminJobPost.tsx","components/user/ConnectionProfile.tsx","components/user/Connections.tsx","components/user/ConversationList.tsx","services/userVideoCallService.ts","components/user/UserVideoCall.tsx","components/user/Conversation.tsx","hooks/useSocket.ts","components/user/MessageConnectionSearch.tsx","components/user/Messages.tsx","services/userRecruiterSocketService.ts","components/recruiter/RecruiterMessageList.tsx","components/shared/ConversationHeader.tsx","services/RecruiterUservideoCallService.ts","components/shared/VideoCall.tsx","components/recruiter/RecruiterConversation.tsx","components/recruiter/RecruiterMessaging.tsx","components/user/UserConversationList.tsx","components/user/UserConversation.tsx","components/user/UserMessaging.tsx","components/admin/AdminSubscriptionManagement.tsx","components/admin/AdminUserPostManagement.tsx","components/user/SearchResults.tsx","utils/inputValidation.ts","components/user/ResumeBuilder.tsx","components/recruiter/RecruiterJobDetails.tsx","components/user/ForgotPassword.tsx","App.tsx","index.tsx","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/get javascript chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import axios from \"axios\";\r\nimport {\r\n  LoginCredentials,\r\n  SignupCredentials,\r\n  OtpVerificationCredentials,\r\n  Certificate,\r\n} from \"../types/auth\";\r\nimport { BasicJobPost } from \"../types/jobPostTypes\";\r\nimport {\r\n  CreatePostData,\r\n  LikePostData,\r\n  CommentPostData,\r\n  Post,\r\n  PostsApiResponse,\r\n} from \"../types/postTypes\";\r\nimport { Message } from \"../types/messageType\";\r\nimport { User, UserConnection } from \"../types/auth\";\r\nimport { URMessage, URConversation } from \"../types/userRecruiterMessage\";\r\nimport { ResumeData } from '../types/resumeTypes';\r\nimport  store  from '../redux/store';\r\nimport { logout } from '../redux/slices/authSlice';\r\n\r\nexport interface FetchJobPostsParams {\r\n  page?: number;\r\n  limit?: number;\r\n  sortBy?: string;\r\n  sortOrder?: string;\r\n  filter?: any;\r\n}\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconsole.log(\"API_BASE_URL\",API_BASE_URL,\"  process.env.REACT_APP_API_BASE_URL \",process.env.REACT_APP_API_BASE_URL)\r\n\r\n\r\n\r\nconst apiRequest = async (\r\n  method: \"POST\" | \"GET\" | \"PUT\" | \"DELETE\",\r\n  endpoint: string,\r\n  data: any = {},\r\n  headers: Record<string, string> = {}\r\n) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const defaultHeaders: Record<string, string> = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  if (token) {\r\n    defaultHeaders.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  const mergedHeaders = { ...defaultHeaders, ...headers };\r\n\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      url: `${API_BASE_URL}${endpoint}`,\r\n      data,\r\n      headers: mergedHeaders,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      if (error.response.status === 401) {\r\n        // Token is invalid or expired\r\n        store.dispatch(logout());\r\n        throw new Error('Authentication failed. Please log in again.');\r\n      }\r\n      console.error(\"API Error:\", error.response.data);\r\n      throw new Error(error.response.data.error || \"Server Error\");\r\n    } else if (axios.isAxiosError(error) && error.request) {\r\n      console.error(\"No response received:\", error.request);\r\n      throw new Error(\"No response from the server\");\r\n    }\r\n    console.error(\"Unexpected error:\", error);\r\n    throw new Error(\"An unknown error occurred\");\r\n  }\r\n};\r\n\r\nconst apiUploadRequest = async (\r\n  method: \"POST\" | \"PUT\",\r\n  endpoint: string,\r\n  formData: FormData\r\n) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const headers: Record<string, string> = {};\r\n\r\n  if (token) {\r\n    headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      url: `${API_BASE_URL}${endpoint}`,\r\n      data: formData,\r\n      headers: headers,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        console.error(\"API Error:\", error.response.data);\r\n        throw new Error(error.response.data.error || \"Server Error\");\r\n      } else if (error.request) {\r\n        console.error(\"No response received:\", error.request);\r\n        throw new Error(\"No response from the server\");\r\n      }\r\n    }\r\n    console.error(\"Unexpected error:\", error);\r\n    throw new Error(\"An unknown error occurred\");\r\n  }\r\n};\r\n\r\nexport const sendOtpApi = async (email: string) => {\r\n  return apiRequest(\"POST\", \"/send-otp\", { email });\r\n};\r\n\r\nexport const verifyOtpApi = async (credentials: OtpVerificationCredentials) => {\r\n  return apiRequest(\"POST\", \"/verify-otp\", credentials);\r\n};\r\n\r\nexport const loginUserApi = async (credentials: LoginCredentials) => {\r\n  return apiRequest(\"POST\", \"/login\", credentials);\r\n};\r\n\r\nexport const signupUserApi = async (credentials: SignupCredentials) => {\r\n  return apiRequest(\"POST\", \"/signup\", credentials);\r\n};\r\n\r\nexport const googleLoginApi = async (googleToken: string) => {\r\n  return apiRequest(\"POST\", \"/auth/google/callback\", { googleToken });\r\n};\r\n\r\nexport const fetchUserProfileApi = async (userId: string, token: string) => {\r\n  return apiRequest(\r\n    \"GET\",\r\n    `/profile/${userId}`,\r\n    {},\r\n    {\r\n      Authorization: `Bearer ${token}`,\r\n    }\r\n  );\r\n};\r\n\r\nexport const updateUserProfileApi = async (\r\n  userId: string,\r\n  formData: FormData\r\n) => {\r\n  return apiRequest(\"PUT\", `/edit-profile/${userId}`, formData, {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  });\r\n};\r\n\r\nexport const updateUserProjectsApi = async (\r\n  userId: string,\r\n  projects: any[]\r\n) => {\r\n  return apiRequest(\"PUT\", `/edit-projects/${userId}`, { projects });\r\n};\r\n\r\nexport const updateUserCertificatesApi = async (\r\n  userId: string,\r\n  certificates: { file: File | null; details: Omit<Certificate, \"file\"> }[]\r\n) => {\r\n  const formData = new FormData();\r\n\r\n  formData.append(\r\n    \"certificateDetails\",\r\n    JSON.stringify(certificates.map((cert) => cert.details))\r\n  );\r\n\r\n  certificates.forEach((cert, index) => {\r\n    if (cert.file) {\r\n      formData.append(`certificateImage`, cert.file, cert.file.name);\r\n    }\r\n  });\r\n\r\n  return apiRequest(\"PUT\", `/edit-certificates/${userId}`, formData, {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  });\r\n};\r\n\r\nexport const updateUserExperiencesApi = async (\r\n  userId: string,\r\n  experiences: any[]\r\n) => {\r\n  return apiRequest(\"PUT\", `/edit-experiences/${userId}`, { experiences });\r\n};\r\n\r\nexport const updateUserResumeApi = async (userId: string, resume: File) => {\r\n  const formData = new FormData();\r\n  formData.append(\"resume\", resume);\r\n  return apiRequest(\"PUT\", `/edit-resume/${userId}`, formData, {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  });\r\n};\r\n\r\nexport const fetchJobPostsuser = async (\r\n  params: FetchJobPostsParams = {}\r\n): Promise<{\r\n  jobPosts: BasicJobPost[];\r\n  currentPage: number;\r\n  totalPages: number;\r\n  totalCount: number;\r\n}> => {\r\n  const {\r\n    page = 1,\r\n    limit = 10,\r\n    sortBy = \"createdAt\",\r\n    sortOrder = \"desc\",\r\n    filter = {},\r\n  } = params;\r\n\r\n  const queryParams = new URLSearchParams({\r\n    page: page.toString(),\r\n    limit: limit.toString(),\r\n    sortBy,\r\n    sortOrder,\r\n    filter: JSON.stringify(filter),\r\n  });\r\n\r\n  return apiRequest(\"GET\", `/jobs?${queryParams.toString()}`);\r\n};\r\n\r\nexport const applyForJob = async (\r\n  userId: string,\r\n  jobId: string\r\n): Promise<void> => {\r\n  return apiRequest(\"POST\", `/jobs/${jobId}/apply`, { userId });\r\n};\r\n\r\nexport const fetchJobPostApi = async (jobId: string): Promise<BasicJobPost> => {\r\n  return apiRequest(\"GET\", `/jobs/${jobId}`);\r\n};\r\n\r\nexport const fetchPostsAPI = async (\r\n  page: number,\r\n  limit: number = 10\r\n): Promise<Post[]> => {\r\n  return apiRequest(\"GET\", `/posts?page=${page}&limit=${limit}`);\r\n};\r\n\r\nexport const fetchPostsByUserIdAPI = async (\r\n  userId: string,\r\n  page: number,\r\n  limit: number\r\n): Promise<PostsApiResponse> => {\r\n  const response = await apiRequest(\r\n    \"GET\",\r\n    `/posts/user/${userId}?page=${page}&limit=${limit}`\r\n  );\r\n  return {\r\n    posts: Array.isArray(response.posts) ? response.posts : [],\r\n    totalPages: response.totalPages || 1,\r\n    currentPage: response.currentPage || page,\r\n  };\r\n};\r\n\r\nexport const createPostAPI = async (\r\n  postData: CreatePostData,\r\n  userId: string\r\n): Promise<Post> => {\r\n  const formData = new FormData();\r\n\r\n  if (postData.content) {\r\n    formData.append(\"content\", postData.content);\r\n  }\r\n\r\n  if (postData.image instanceof File) {\r\n    formData.append(\"image\", postData.image, postData.image.name);\r\n  }\r\n\r\n  if (postData.video instanceof File) {\r\n    formData.append(\"video\", postData.video, postData.video.name);\r\n  }\r\n \r\n\r\n  return apiUploadRequest(\"POST\", `/posts/${userId}`, formData);\r\n};\r\n\r\nexport const likePostAPI = async (likeData: LikePostData): Promise<Post> => {\r\n  const response = await apiRequest(\"POST\", `/posts/${likeData.postId}/like`, {\r\n    userId: likeData.userId,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const dislikePostAPI = async (\r\n  dislikeData: LikePostData\r\n): Promise<Post> => {\r\n  const response = await apiRequest(\r\n    \"POST\",\r\n    `/posts/${dislikeData.postId}/dislike`,\r\n    { userId: dislikeData.userId }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const commentOnPostAPI = async (\r\n  commentData: CommentPostData\r\n): Promise<Post> => {\r\n  const response = await apiRequest(\r\n    \"POST\",\r\n    `/posts/${commentData.postId}/comment`,\r\n    {\r\n      userId: commentData.userId,\r\n      content: commentData.content,\r\n      userName: commentData.userName,\r\n      userProfileImage: commentData.userProfileImage,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const deletePostAPI = async (postId: string): Promise<void> => {\r\n  return apiRequest(\"DELETE\", `/posts/delete/${postId}`);\r\n};\r\n\r\nexport const editPostAPI = async (\r\n  postId: string,\r\n  userId: string,\r\n  postData: Partial<CreatePostData>\r\n): Promise<Post> => {\r\n  const formData = new FormData();\r\n\r\n  if (postData.content) {\r\n    formData.append(\"content\", postData.content);\r\n  }\r\n\r\n  if (postData.image instanceof File) {\r\n    formData.append(\"image\", postData.image, postData.image.name);\r\n  }\r\n\r\n  if (postData.video instanceof File) {\r\n    formData.append(\"video\", postData.video, postData.video.name);\r\n  }\r\n\r\n  return apiUploadRequest(\"PUT\", `/posts/edit/${postId}/${userId}`, formData);\r\n};\r\n\r\nexport const reportJobApi = async (\r\n  userId: string,\r\n  jobId: string,\r\n  reason: string\r\n): Promise<void> => {\r\n  return apiRequest(\"POST\", `/jobs/${jobId}/report`, { userId, reason });\r\n};\r\n\r\nexport const fetchNotificationsApi = async (userId: string) => {\r\n  return apiRequest(\"GET\", `/notifications/${userId}`);\r\n};\r\n\r\nexport const fetchRecommendationsApi = async (userId: string) => {\r\n  return apiRequest(\"GET\", `/connections/recommendations/${userId}`);\r\n};\r\n\r\nexport const sendConnectionRequestApi = async (\r\n  senderId: string,\r\n  recipientId: string\r\n) => {\r\n  return apiRequest(\"POST\", \"/connections/request\", { senderId, recipientId });\r\n};\r\n\r\nexport const fetchConnectionProfileApi = async (userId: string) => {\r\n  return apiRequest(\"GET\", `/connections/profile/${userId}`);\r\n};\r\nexport const fetchConnectionRequestsApi = async (userId: string) => {\r\n  const response = await apiRequest(\"GET\", `/connections/requests/${userId}`);\r\n  return response;\r\n};\r\n\r\nexport const acceptConnectionRequestApi = async (\r\n  requestId: string,\r\n  userId: string\r\n) => {\r\n  return apiRequest(\"POST\", `/connections/accept/${requestId}`, { userId });\r\n};\r\n\r\nexport const rejectConnectionRequestApi = async (\r\n  requestId: string,\r\n  userId: string\r\n) => {\r\n  return apiRequest(\"POST\", `/connections/reject/${requestId}`, { userId });\r\n};\r\n\r\nexport const fetchConnectionsApi = async (userId: string) => {\r\n  return apiRequest(\"GET\", `/connections/${userId}`);\r\n};\r\n\r\nexport const searchConnectionsApi = async (userId: string, query: string) => {\r\n  return apiRequest(\"GET\", `/connections/${userId}/search?query=${query}`);\r\n};\r\n\r\nexport const getConversationApi = async (\r\n  userId1: string,\r\n  userId2: string\r\n): Promise<Message[]> => {\r\n  return apiRequest(\"GET\", `/messages/${userId1}/${userId2}`);\r\n};\r\n\r\nexport const markMessageAsReadApi = async (\r\n  messageId: string\r\n): Promise<string> => {\r\n  return apiRequest(\"PUT\", `/messages/${messageId}/read`);\r\n};\r\n\r\nexport const getUnreadMessageCountApi = async (\r\n  userId: string\r\n): Promise<number> => {\r\n  return apiRequest(\"GET\", `/messages/unread/${userId}`);\r\n};\r\n\r\nexport const fetchConnectionsMessageApi = async (\r\n  userId: string\r\n): Promise<{ user: User; lastMessage: Message; isOnline: boolean }[]> => {\r\n  return apiRequest(\"GET\", `/connections/message/${userId}`);\r\n};\r\n\r\nexport const searchConnectionsMessageApi = async (\r\n  userId: string,\r\n  query: string\r\n): Promise<UserConnection[]> => {\r\n  return apiRequest(\"GET\", `/connections/${userId}/search?query=${query}`);\r\n};\r\n\r\nexport const fetchUserConversationsApi = async (\r\n  userId: string\r\n): Promise<URConversation[]> => {\r\n  return apiRequest(\"GET\", `/user-conversations/${userId}`);\r\n};\r\n\r\nexport const fetchUserMessagesApi = async (\r\n  conversationId: string\r\n): Promise<URMessage[]> => {\r\n  return apiRequest(\"GET\", `/user-messages/${conversationId}`);\r\n};\r\n\r\nexport const sendUserMessageApi = async (\r\n  conversationId: string,\r\n  content: string,\r\n  senderId: string\r\n): Promise<URMessage> => {\r\n  return apiRequest(\"POST\", `/user-messages/${conversationId}`, {\r\n    content,\r\n    senderId,\r\n  });\r\n};\r\n\r\nexport const searchUsersAndJobsApi = async (query: string, userId: string) => {\r\n  return apiRequest(\r\n    \"GET\",\r\n    `/search?query=${encodeURIComponent(query)}&userId=${userId}`\r\n  );\r\n};\r\n\r\nexport const deleteCommentAPI = async (\r\n  postId: string,\r\n  commentId: string\r\n): Promise<Post> => {\r\n  return apiRequest(\"DELETE\", `/posts/${postId}/comments/${commentId}`);\r\n};\r\n\r\nexport const generateResumeApi = async (resumeData: ResumeData): Promise<string> => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/generate-resume`, resumeData, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    });\r\n\r\n    if (response.data && response.data.pdfData) {\r\n      // Convert base64 to blob\r\n      const byteCharacters = atob(response.data.pdfData);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n      \r\n      // Create a URL for the blob\r\n      const fileURL = URL.createObjectURL(blob);\r\n      return fileURL;\r\n    } else {\r\n      throw new Error('Invalid response format from server');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error generating resume:\", error);\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response) {\r\n        console.error('Error response:', error.response.data);\r\n        throw new Error(`Server error: ${JSON.stringify(error.response.data)}`);\r\n      } else if (error.request) {\r\n        console.error('No response received:', error.request);\r\n        throw new Error('No response from the server');\r\n      } else {\r\n        console.error('Error setting up request:', error.message);\r\n        throw new Error('Error setting up request');\r\n      }\r\n    } else if (error instanceof Error) {\r\n      throw error;\r\n    } else {\r\n      throw new Error('An unexpected error occurred');\r\n    }\r\n  }\r\n};\r\n\r\n// Add these new functions to the existing file\r\n\r\nexport const sendForgotPasswordOtpApi = async (email: string) => {\r\n  return apiRequest(\"POST\", \"/forgot-password\", { email });\r\n};\r\n\r\nexport const verifyForgotPasswordOtpApi = async (email: string, otp: string) => {\r\n  return apiRequest(\"POST\", \"/verify-forgot-password-otp\", { email, otp });\r\n};\r\n\r\n// Add this new function\r\nexport const resetPasswordApi = async (email: string, newPassword: string, otp: string) => {\r\n  return apiRequest(\"POST\", \"/reset-password\", { email, newPassword, otp });\r\n};\r\n\r\nexport const refreshTokenApi = async () => {\r\n  const refreshToken = localStorage.getItem(\"refreshToken\");\r\n  if (!refreshToken) {\r\n    throw new Error(\"No refresh token available\");\r\n  }\r\n  const response = await axios.post(`${API_BASE_URL}/refresh-token`, { refreshToken });\r\n  return response.data.token;\r\n};\r\n\r\nexport const removeConnectionApi = async (userId: string, connectionId: string) => {\r\n  return apiRequest(\"DELETE\", `/connections/${userId}/remove/${connectionId}`);\r\n};\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { AuthState,LoginCredentials, SignupCredentials, OtpVerificationCredentials, Certificate } from '../../types/auth';\nimport axios from 'axios';\nimport { \n  loginUserApi, \n  signupUserApi, \n  verifyOtpApi, \n  googleLoginApi, \n  fetchUserProfileApi, \n  updateUserProfileApi,\n  updateUserProjectsApi,\n  updateUserCertificatesApi,\n  updateUserExperiencesApi,\n  updateUserResumeApi,\n  fetchJobPostsuser,\n  FetchJobPostsParams,\n  applyForJob,\n  fetchJobPostApi,\n  reportJobApi,\n  sendForgotPasswordOtpApi,\n  verifyForgotPasswordOtpApi,\n  resetPasswordApi,\n  refreshTokenApi\n} from '../../api/authapi';\n\n\n\n\n\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n  otpStep: false,\n  jobPosts: {\n    posts: [],\n    loading: false,\n    error: null,\n    totalPages: 0,\n    totalCount: 0,\n    currentPage: 1,\n    updatedAt: new Date().toISOString()\n  },\n  selectedPost: null,\n};\n\nexport const fetchUserProfile = createAsyncThunk(\n  'auth/fetchUserProfile',\n  async (userId: string, thunkAPI) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return thunkAPI.rejectWithValue('No token found');\n      }\n      const response = await fetchUserProfileApi(userId, token);\n      return response;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message :'Failed to fetch user profile');\n    }\n  }\n);\n\nexport const login = createAsyncThunk('auth/login', async (credentials: LoginCredentials, thunkAPI) => {\n  try {\n    const userData = await loginUserApi(credentials);\n    console.log(\"userdarta\",userData)\n    return userData;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n  }\n});\n\nexport const googleLogin = createAsyncThunk('auth/google-login', async (googleToken: string, thunkAPI) => {\n  try {\n    const userData = await googleLoginApi(googleToken);\n    return userData;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n  }\n});\n\nexport const signup = createAsyncThunk('auth/signup', async (credentials: SignupCredentials, thunkAPI) => {\n  try {\n    const userData = await signupUserApi(credentials);\n    return userData;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n  }\n});\n\nexport const verifyOtp = createAsyncThunk('auth/verifyOtp', async (otpCredentials: OtpVerificationCredentials, thunkAPI) => {\n  try {\n    const verificationResponse = await verifyOtpApi(otpCredentials);\n    return verificationResponse;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n  }\n});\n\nexport const updateUserProfile = createAsyncThunk(\n  'auth/updateUserProfile',\n  async ({ userId, formData }: { userId: string; formData: FormData }, thunkAPI) => {\n    try {\n      const updatedUserData = await updateUserProfileApi(userId, formData);\n      return updatedUserData;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const updateUserProjects = createAsyncThunk(\n  'auth/updateUserProjects',\n  async ({ userId, projects }: { userId: string; projects: any[] }, thunkAPI) => {\n    try {\n      const updatedProjects = await updateUserProjectsApi(userId, projects);\n      return updatedProjects;  // Assuming this returns the updated project list\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const updateUserCertificates = createAsyncThunk(\n  'auth/updateUserCertificates',\n  async ({ userId, certificates }: { \n    userId: string; \n    certificates: { file: File | null; details: Omit<Certificate, 'file'> }[] \n  }, thunkAPI) => {\n    try {\n      const updatedCertificatesData = await updateUserCertificatesApi(userId, certificates);\n      console.log(\"updatedCertificatesData\",updatedCertificatesData)\n      return updatedCertificatesData;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const updateUserExperiences = createAsyncThunk(\n  'auth/updateUserExperiences',\n  async ({ userId, experiences }: { userId: string; experiences: any[] }, thunkAPI) => {\n    try {\n      const updatedExperiences = await updateUserExperiencesApi(userId, experiences);\n      console.log(\"exp\",updatedExperiences)\n      return updatedExperiences;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const updateUserResume = createAsyncThunk(\n  'auth/updateUserResume',\n  async ({ userId, resume }: { userId: string; resume: File }, thunkAPI) => {\n    try {\n      const updatedResumeData = await updateUserResumeApi(userId, resume);\n      return updatedResumeData;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const fetchJobPostsAsync = createAsyncThunk(\n  'auth/fetchJobPosts',\n  async (params: FetchJobPostsParams = {}, { rejectWithValue }) => {\n    try {\n      console.log(\"params\",params)\n      const response = await fetchJobPostsuser(params);\n      console.log(\"apply\",response)\n      return response;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch job posts');\n    }\n  }\n);\n\nexport const applyForJobAsync = createAsyncThunk(\n  'auth/applyForJob',\n  async ({ userId, jobId }: { userId: string; jobId: string }, { dispatch, rejectWithValue }) => {\n    try {\n     await applyForJob(userId, jobId);\n      \n      // Fetch updated job posts after applying\n      await dispatch(fetchJobPostsAsync({}));\n      \n      return jobId;\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error) && error.response) {\n        // Return the error message from the backend\n        return rejectWithValue(error.response.data.error || 'Failed to apply for job');\n      }\n      return rejectWithValue('Failed to apply for job');\n    }\n  }\n);\n\nexport const fetchJobPost = createAsyncThunk(\n  'auth/fetchJobPost',\n  async (jobId: string, { rejectWithValue }) => {\n    try {\n      const response = await fetchJobPostApi(jobId);\n      console.log(response)\n      return response;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch job post');\n    }\n  }\n);\n\nexport const reportJobAsync = createAsyncThunk(\n  'auth/reportJob',\n  async ({ userId, jobId, reason }: { userId: string; jobId: string; reason: string }, { rejectWithValue }) => {\n    try {\n      await reportJobApi(userId, jobId, reason);\n      return jobId;\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error) && error.response) {\n        return rejectWithValue(error.response.data.error || 'Failed to report job');\n      }\n      return rejectWithValue('Failed to report job');\n    }\n  }\n);\n\nexport const sendForgotPasswordOtp = createAsyncThunk(\n  'auth/sendForgotPasswordOtp',\n  async (email: string, thunkAPI) => {\n    try {\n      const response = await sendForgotPasswordOtpApi(email);\n      return response;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const verifyForgotPasswordOtp = createAsyncThunk(\n  'auth/verifyForgotPasswordOtp',\n  async ({ email, otp }: { email: string; otp: string }, thunkAPI) => {\n    try {\n      const response = await verifyForgotPasswordOtpApi(email, otp);\n      return response;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const resetPassword = createAsyncThunk(\n  'auth/resetPassword',\n  async ({ email, newPassword, otp }: { email: string; newPassword: string; otp: string }, thunkAPI) => {\n    try {\n      const response = await resetPasswordApi(email, newPassword, otp);\n      return response;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nexport const refreshToken = createAsyncThunk(\n  'auth/refreshToken',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await refreshTokenApi();\n      return response;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\n\nexport const updateUserAppliedJobs = (jobId: string) => ({\n  type: 'auth/updateAppliedJobs',\n  payload: jobId,\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n    setOtpStep: (state, action) => {\n      state.otpStep = action.payload;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        state.user = {\n          id: action.payload.user.id,\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          role: action.payload.user.role,\n          profileImage: action.payload.user.profileImage,\n          appliedJobs: action.payload.user.appliedJobs,\n          bio:action.payload.user.bio,\n        };\n        localStorage.setItem('token', action.payload.token);\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        console.log(action.payload)\n        state.error = action.payload as string;\n      })\n      .addCase(googleLogin.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(googleLogin.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        state.user = {\n          id: action.payload.user.id,\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          role: action.payload.user.role,\n          profileImage: action.payload.user.profileImage,\n          appliedJobs: action.payload.user.appliedJobs,\n        };\n        localStorage.setItem('token', action.payload.token);\n      })\n      .addCase(googleLogin.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(signup.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n        state.otpStep = true;\n      })\n      .addCase(signup.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = false;\n        state.user = action.payload;\n      })\n      .addCase(signup.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(verifyOtp.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(verifyOtp.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        localStorage.setItem('token', action.payload.token);\n        state.user = {\n          id: action.payload.user.id,\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          role: action.payload.user.role,\n          profileImage: action.payload.user.profileImage,\n          appliedJobs: action.payload.user.appliedJobs,\n        };\n      })\n      .addCase(verifyOtp.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = {\n          ...state.user,\n          ...action.payload,\n        };\n      })\n      .addCase(updateUserProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(updateUserProjects.fulfilled, (state, action) => {\n        if (state.user) {\n          state.user.projects = action.payload;\n        }\n      })\n      .addCase(updateUserProjects.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(updateUserCertificates.fulfilled, (state, action) => {\n        state.loading = false;\n        if (state.user) {\n          state.user.certificates = action.payload;\n        }\n      })\n      .addCase(updateUserCertificates.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(updateUserExperiences.fulfilled, (state, action) => {\n        state.loading = false;\n        if (state.user) {\n          state.user = action.payload;\n        }\n      })\n      .addCase(updateUserExperiences.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(updateUserResume.fulfilled, (state, action) => {\n        state.loading = false;\n        if (state.user) {\n          state.user.resume = action.payload;\n        }\n      })\n      .addCase(updateUserResume.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(fetchJobPostsAsync.pending, (state) => {\n        state.jobPosts.loading = true;\n        state.jobPosts.error = null;\n      })\n      .addCase(fetchJobPostsAsync.fulfilled, (state, action) => {\n        state.jobPosts.loading = false;\n        state.jobPosts.posts = action.payload.jobPosts;\n        state.jobPosts.currentPage = action.payload.currentPage;\n        state.jobPosts.totalPages = action.payload.totalPages;\n        state.jobPosts.totalCount = action.payload.totalCount;\n      })\n      .addCase(fetchJobPostsAsync.rejected, (state, action) => {\n        state.jobPosts.loading = false;\n        state.jobPosts.error = action.payload as string;\n      })\n      .addCase(applyForJobAsync.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(applyForJobAsync.fulfilled, (state, action) => {\n        state.loading = false;\n        if (state.user) {\n          state.user.appliedJobs = [...(state.user.appliedJobs || []), action.payload];\n        }\n      })\n      .addCase(applyForJobAsync.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(fetchJobPost.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchJobPost.fulfilled, (state, action) => {\n        state.loading = false;\n      })\n      .addCase(fetchJobPost.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(reportJobAsync.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(reportJobAsync.fulfilled, (state, action) => {\n        state.loading = false;\n      })\n      .addCase(reportJobAsync.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(sendForgotPasswordOtp.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(sendForgotPasswordOtp.fulfilled, (state) => {\n        state.loading = false;\n      })\n      .addCase(sendForgotPasswordOtp.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(verifyForgotPasswordOtp.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(verifyForgotPasswordOtp.fulfilled, (state) => {\n        state.loading = false;\n      })\n      .addCase(verifyForgotPasswordOtp.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(resetPassword.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(resetPassword.fulfilled, (state) => {\n        state.loading = false;\n      })\n      .addCase(resetPassword.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(refreshToken.fulfilled, (state, action) => {\n        state.isAuthenticated = true;\n        state.user = action.payload.user;\n        localStorage.setItem('token', action.payload.token);\n      });\n  },\n});\n\nexport const { logout, setOtpStep, clearError  } = authSlice.actions;\nexport default authSlice.reducer;\n","import axios from 'axios';\nimport  store  from '../redux/store';\nimport { setLogoutAdmin } from '../redux/slices/adminSlice';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL_ADMIN ;\n\nconst apiRequest = async (method: 'POST' | 'GET' | 'DELETE' | 'PATCH', endpoint: string, data: any = {}) => {\n  const token = localStorage.getItem('adminToken'); \n  const headers: Record<string, string> = {\n    'Content-Type': 'application/json',\n  };\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n  if(!token){\n    console.error(\"no token\")\n  }\n\n  try {\n    const response = await axios({\n      method,\n      url: `${API_BASE_URL}${endpoint}`,\n      data,\n      headers,\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      if (error.response) {\n        if (error.response.status === 401) {\n          // Token is invalid or expired\n          store.dispatch(setLogoutAdmin());\n          throw new Error('Authentication failed. Please log in again.');\n        }\n        console.error('API Error:', error.response.data.error || 'Unknown error from API');\n        throw new Error(error.response.data.error || 'Server Error');\n      } else if (error.request) {\n        console.error('No response received from API:', error.request);\n        throw new Error('No response from the server');\n      }\n    } else {\n      console.error('Unknown error:', error);\n      throw new Error('An unknown error occurred');\n    }\n  }\n};\n// API for admin login\nexport const adminLoginApi = async (email: string, password: string) => {\n  return apiRequest('POST', '/login', { email, password });\n};\n\n// API for fetching admin dashboard data\nexport const fetchAdminDashboardDataApi = async () => {\n  return apiRequest('GET', '/dashboard');\n};\n\n// API for fetching recruiters\nexport const fetchRecruitersApi = async () => {\n   const response=apiRequest('GET', '/recruiters');\n   return response\n};\n\n// API for approving a recruiter\nexport const approveRecruiterApi = async (recruiterId: string) => {\n  return apiRequest('PATCH', `/recruiters/${recruiterId}/approve`);\n};\n\nexport const fetchUsersApi = async () => {\n  return apiRequest('GET',`/users`)\n};\n\nexport const blockUserApi = async (userId: string) => {\nreturn apiRequest('PATCH',`/users/${userId}/block`)\n};\n\nexport const unblockUserApi = async (userId: string) => {\n  return apiRequest('PATCH',`/users/${userId}/unblock`)\n};\n\nexport const fetchJobPostsApi = async () => {\n  return apiRequest('GET', '/job-posts');\n};\n\nexport const blockJobPostApi = async (postId: string) => {\n  return apiRequest('PATCH', `/job-posts/${postId}/block`);\n};\n\nexport const unblockJobPostApi = async (postId: string) => {\n  return apiRequest('PATCH', `/job-posts/${postId}/unblock`);\n};\n\n// Add this new function to fetch dashboard data\nexport const fetchDashboardDataApi = async () => {\n  return apiRequest('GET', '/dashboard');\n};\n\n\n// Add this new function to fetch subscription data\nexport const fetchSubscriptionsApi = async (page: number, limit: number) => {\n  const response = await apiRequest('GET', `/subscriptions?page=${page}&limit=${limit}`);\n  return {\n    subscriptions: response.subscriptions,\n    totalPages: response.totalPages,\n    currentPage: response.currentPage\n  };\n};\n\n// Add this function to cancel a subscription\nexport const cancelSubscriptionApi = async (subscriptionId: string) => {\n  return apiRequest('POST', `/subscriptions/${subscriptionId}/cancel`);\n};\n\nexport const fetchUserPostsApi = async (page: number, limit: number) => {\n  const response = await apiRequest('GET', `/user-posts?page=${page}&limit=${limit}`);\n  return {\n    userPosts: response.userPosts,\n    totalPages: response.totalPages,\n    currentPage: response.currentPage\n  };\n};\n\nexport const blockUserPostApi = async (postId: string) => {\n  return apiRequest('POST', `/user-posts/${postId}/toggle-block`);\n};\n\nexport const refreshAdminTokenApi = async () => {\n  return apiRequest('POST', '/refresh-token');\n};\n","// src/redux/slices/adminSlice.ts\nimport { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  adminLoginApi,\n  fetchRecruitersApi,\n  approveRecruiterApi,\n  fetchUsersApi,\n  blockUserApi,\n  unblockUserApi,\n  fetchDashboardDataApi,\n  refreshAdminTokenApi,\n} from \"../../api/adminApi\";\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  isBlocked: boolean;\n}\n\ninterface AdminState {\n  isAuthenticatedAdmin: boolean;\n  loading: boolean;\n  error: string | null;\n  dashboardData: {\n    userCount: number;\n    recruiterCount: number;\n    companyCount: number;\n    totalRevenue: number;\n    jobPostCount: number;\n    userPostCount: number;\n    revenueData: { month: string; amount: number }[];\n  } | null;\n  recruiters: any[];\n  users: User[];\n  token: string | null;\n  email: string;\n  name: string;\n  role: string;\n}\n\nconst initialState: AdminState = {\n  isAuthenticatedAdmin: false,\n  loading: false,\n  error: null,\n  dashboardData: null,\n  recruiters: [],\n  users: [],\n  token: localStorage.getItem(\"adminToken\"),\n  email: \"\",\n  name: \"\",\n  role: \"\",\n};\n\n// Thunks\nexport const loginAdmin = createAsyncThunk(\n  \"admin/login\",\n  async (\n    { email, password }: { email: string; password: string },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await adminLoginApi(email, password);\n      localStorage.setItem(\"adminToken\", response.token);\n      return response;\n    } catch (err: any) {\n      return rejectWithValue(err.message || \"Login failed\");\n    }\n  }\n);\n\nexport const logoutAdmin = createAsyncThunk(\n  \"admin/logout\",\n  async (_, { dispatch }) => {\n    localStorage.removeItem(\"adminToken\");\n    // Add any other cleanup actions here\n  }\n);\n\nexport const fetchRecruiters = createAsyncThunk(\n  \"admin/fetchRecruiters\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await fetchRecruitersApi();\n      return response;\n    } catch (err: any) {\n      return rejectWithValue(err.message || \"Failed to fetch recruiters\");\n    }\n  }\n);\n\nexport const approveRecruiter = createAsyncThunk(\n  \"admin/approveRecruiter\",\n  async (recruiterId: string, { rejectWithValue }) => {\n    try {\n      const response = await approveRecruiterApi(recruiterId);\n      return response;\n    } catch (err: any) {\n      return rejectWithValue(err.message || \"Failed to approve recruiter\");\n    }\n  }\n);\n\n// New User Thunks\nexport const fetchUsers = createAsyncThunk(\n  \"admin/fetchUsers\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await fetchUsersApi();\n      console.log(\"fetchusers\", response);\n      return response;\n    } catch (err: any) {\n      return rejectWithValue(err.message || \"Failed to fetch users\");\n    }\n  }\n);\n\nexport const blockUser = createAsyncThunk(\n  \"admin/blockUser\",\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      const response = await blockUserApi(userId);\n      console.log(response);\n      return response.id;\n    } catch (err: any) {\n      return rejectWithValue(err.message || \"Failed to block user\");\n    }\n  }\n);\n\nexport const unblockUser = createAsyncThunk(\n  \"admin/unblockUser\",\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      await unblockUserApi(userId);\n      return userId;\n    } catch (err: any) {\n      return rejectWithValue(err.message || \"Failed to unblock user\");\n    }\n  }\n);\n\nexport const fetchDashboardData = createAsyncThunk(\n  \"admin/fetchDashboardData\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await fetchDashboardDataApi();\n      return response;\n    } catch (err: any) {\n      return rejectWithValue(err.message || \"Failed to fetch dashboard data\");\n    }\n  }\n);\n\nexport const initializeAdminState = createAsyncThunk(\n  \"admin/initializeState\",\n  async (_, { dispatch }) => {\n    const token = localStorage.getItem(\"adminToken\");\n    if (token) {\n      dispatch(\n        loginAdmin.fulfilled({ token }, \"\", { email: \"\", password: \"\" })\n      );\n    }\n  }\n);\n\nexport const refreshAdminToken = createAsyncThunk(\n  'admin/refreshAdminToken',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await refreshAdminTokenApi();\n      return response;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nconst adminSlice = createSlice({\n  name: \"admin\",\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setLogoutAdmin: (state) => {\n      state.isAuthenticatedAdmin = false;\n      state.token = null;\n      state.dashboardData = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginAdmin.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(loginAdmin.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticatedAdmin = true;\n        state.token = action.payload.token;\n        state.name = action.payload.user.name;\n        state.email = action.payload.user.email;\n        state.role = action.payload.user.role;\n        state.error = null;\n      })\n      .addCase(loginAdmin.rejected, (state, action: PayloadAction<any>) => {\n        state.loading = false;\n        state.isAuthenticatedAdmin = false;\n        state.error = action.payload || \"Login failed\";\n      })\n      .addCase(logoutAdmin.fulfilled, (state) => {\n        state.isAuthenticatedAdmin = false;\n        state.token = null;\n        state.dashboardData = null;\n      })\n      .addCase(fetchRecruiters.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(\n        fetchRecruiters.fulfilled,\n        (state, action: PayloadAction<any[]>) => {\n          state.loading = false;\n          state.recruiters = action.payload;\n          state.error = null;\n        }\n      )\n      .addCase(\n        fetchRecruiters.rejected,\n        (state, action: PayloadAction<any>) => {\n          state.loading = false;\n          state.error = action.payload || \"Failed to fetch recruiters\";\n        }\n      )\n      // User-related cases\n      .addCase(fetchUsers.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchUsers.fulfilled, (state, action: PayloadAction<User[]>) => {\n        state.loading = false;\n        state.users = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchUsers.rejected, (state, action: PayloadAction<any>) => {\n        state.loading = false;\n        state.error = action.payload || \"Failed to fetch users\";\n      })\n      .addCase(blockUser.fulfilled, (state, action: PayloadAction<string>) => {\n        const user = state.users.find((user) => user.id === action.payload);\n        if (user) {\n          console.log(\" in block\", user);\n          user.isBlocked = true;\n        }\n      })\n      .addCase(\n        unblockUser.fulfilled,\n        (state, action: PayloadAction<string>) => {\n          const user = state.users.find((user) => user.id === action.payload);\n          if (user) {\n            user.isBlocked = false;\n          }\n        }\n      )\n      .addCase(approveRecruiter.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(\n        approveRecruiter.fulfilled,\n        (state, action: PayloadAction<any>) => {\n          state.loading = false;\n          state.error = null;\n        }\n      )\n      .addCase(\n        approveRecruiter.rejected,\n        (state, action: PayloadAction<any>) => {\n          state.loading = false;\n          state.error = action.payload || \"Failed to approve recruiter\";\n        }\n      )\n      .addCase(fetchDashboardData.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(\n        fetchDashboardData.fulfilled,\n        (state, action: PayloadAction<any>) => {\n          state.loading = false;\n          state.dashboardData = action.payload;\n          state.error = null;\n        }\n      )\n      .addCase(\n        fetchDashboardData.rejected,\n        (state, action: PayloadAction<any>) => {\n          state.loading = false;\n          state.error = action.payload || \"Failed to fetch dashboard data\";\n        }\n      )\n      .addCase(refreshAdminToken.fulfilled, (state, action) => {\n        state.isAuthenticatedAdmin = true;\n        state.token = action.payload.token;\n      });\n  },\n});\n\nexport const { clearError, setLogoutAdmin } = adminSlice.actions;\nexport default adminSlice.reducer;\n","import axios from 'axios';\nimport { BasicJobPost, CreateBasicJobPostParams, UpdateBasicJobPostParams } from '../types/jobPostTypes';\nimport { FetchUsersResponse, FetchUserDetailsResponse } from '../types/auth';\nimport { Conversation, Message } from '../types/recruiterMessageType';\nimport  store  from '../redux/store';\nimport { logout } from '../redux/slices/recruiterSlice';\n\nconst API_BASE_URL =process.env.REACT_APP_API_BASE_URL_RECRUITER ;\n\n\nconst apiRequest = async (method: 'POST' | 'GET' | 'DELETE' | 'PUT', endpoint: string, data: any = {}) => {\n  const token = localStorage.getItem('token');\n  const headers: Record<string, string> = {};\n\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  try {\n    const response = await axios({\n      method,\n      url: `${API_BASE_URL}${endpoint}`,\n      data,\n      headers,\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      if (error.response) {\n        if (error.response.status === 401) {\n          // Token is invalid or expired\n          store.dispatch(logout());\n          throw new Error('Authentication failed. Please log in again.');\n        }\n        console.error('API Error:', error.response.data);\n        throw new Error(error.response.data.error || 'Server Error');\n      } else if (error.request) {\n        console.error('No response received:', error.request);\n        throw new Error('No response from the server');\n      }\n    }\n    console.error('Unexpected error:', error);\n    throw new Error('An unknown error occurred');\n  }\n};\n\n\nexport const registerRecruiterApi = async (recruiterData: FormData) => {\n  return apiRequest('POST', '/register', recruiterData);\n};\n\nexport const loginRecruiterApi = async (loginData: any) => {\n  return apiRequest('POST', '/login', loginData);\n};\n\nexport const verifyOtpApi = async (otpData: any) => {\n  return apiRequest('POST', '/verify-otp', otpData);\n};\n\nexport const sendOtpApi = async (email: string) => {\n  return apiRequest('POST', '/send-otp', { email });\n};\n\nexport const fetchRecruiterProfileApi = async (recruiterId: string) => {\n  return apiRequest('GET', `/profile/${recruiterId}`);\n};\n\nexport const updateRecruiterProfileApi = async (recruiterId: string, profileData: any) => {\n  return apiRequest('PUT', `/update-profile/${recruiterId}`, profileData);\n};\nexport const getJobPosts = async (recruiterId: string) => {\n  if (!recruiterId) {\n    throw new Error('Recruiter ID is required to fetch job posts');\n  }\n  try {\n    const response = await apiRequest('GET', `/recruiters/${recruiterId}/job-posts`);\n    return response;\n  } catch (error) {\n    console.error('Error fetching job posts:', error);\n    throw error;\n  }\n};\n\nexport const createJobPost = async (params: CreateBasicJobPostParams) => {\n  const { recruiterId, postData } = params;\n  return apiRequest('POST', `/create-jobpost/${recruiterId}`, postData);\n};\n\nexport const updateJobPost = async (params: UpdateBasicJobPostParams) => {\n  if (!params.id) {\n    throw new Error('Job post ID is required to update the job post');\n  }\n\n  try {\n    const result = await apiRequest('PUT', `/update-jobpost/${params.id}`, params.postData);\n    return result;\n  } catch (error) {\n    console.error('Error updating job post:', error);\n    throw error;\n  }\n};\n\nexport const deleteJobPost = async (id: string) => {\n  if (!id) {\n    throw new Error('Job post ID is required to delete the job post');\n  }\n  return apiRequest('DELETE', `/jobpost-delete/${id}`);\n};\n\nexport const fetchJobApplicants = async (jobId: string, page: number = 1): Promise<FetchUsersResponse> => {\n  return apiRequest('GET', `/job-applicants/${jobId}?page=${page}`);\n};\n\nexport const fetchUserDetails = async (userId: string): Promise<FetchUserDetailsResponse> => {\n  return apiRequest('GET', `/applicants/${userId}`);\n};\n\n\nexport const fetchConversationsApi = async (recruiterId:string): Promise<{ data: Conversation[] }> => {\n  return apiRequest('GET', `/conversations/${recruiterId}`);\n};\n\nexport const fetchMessagesApi = async (conversationId: string): Promise<{ data: Message[] }> => {\n  const response = await apiRequest('GET', `/conversations/${conversationId}/messages`);\n  return { data: Array.isArray(response.data) ? response.data : response };\n};\n\nexport const sendMessageApi = async (conversationId: string, content: string): Promise<Message> => {\n  try {\n    const response = await apiRequest('POST', `/conversations/${conversationId}/messages`, { content });\n    if (response && typeof response === 'object' && 'id' in response) {\n      return response as Message;\n    } else if (response && typeof response === 'object' && 'data' in response && typeof response.data === 'object' && 'id' in response.data) {\n      return response.data as Message;\n    } else {\n      console.error('Invalid response structure from sendMessageApi:', response);\n      throw new Error('Invalid response structure from server');\n    }\n  } catch (error) {\n    console.error('Error in sendMessageApi:', error);\n    throw error;\n  }\n};\n\n\nexport const startConversationApi = async (applicantId: string,recruiterId: string): Promise<{ data: Conversation }> => {\n  return apiRequest('POST', '/conversations', { applicantId,recruiterId });\n};\n\nexport const updateSubscriptionApi = async (recruiterId: string, subscriptionData: any) => {\n  return apiRequest('PUT', `/update-subscription/${recruiterId}`, subscriptionData);\n};\n\nexport const searchUsers = async (query: string) => {\n  const response = await apiRequest('GET', `/search-users?query=${query}`);\n  return response;\n};\n\nexport const fetchJobDetails = async (jobId: string): Promise<BasicJobPost> => {\n  return apiRequest('GET', `/job-details/${jobId}`);\n};\n\nexport const getAllJobPosts = async () => {\n  try {\n    const response = await apiRequest('GET', '/all-job-posts');\n    return response;\n  } catch (error) {\n    console.error('Error fetching all job posts:', error);\n    throw error;\n  }\n};\n\nexport const fetchFilteredApplicants = async (jobId: string): Promise<FetchUsersResponse> => {\n const response = await apiRequest('GET', `/filtered-applicants/${jobId}`);\n return response\n};\n\nexport const refreshRecruiterTokenApi = async () => {\n  return apiRequest('POST', '/refresh-token');\n};\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../redux/store\";\nimport { REHYDRATE } from 'redux-persist';\nimport {\n  registerRecruiterApi,\n  loginRecruiterApi,\n  verifyOtpApi,\n  sendOtpApi,\n  fetchRecruiterProfileApi,\n  updateRecruiterProfileApi,\n  refreshRecruiterTokenApi,\n} from \"../../api/recruiterApi\";\n\ninterface RecruiterState {\n  recruiter: any | null;\n  isAuthenticatedRecruiter: boolean;\n  isApproved: boolean;\n  loading: boolean;\n  error: string | null;\n  otpStep: boolean;\n  profile: any | null;\n  subscribed: boolean;\n  planDuration: string | null;\n  expiryDate: string | null;\n}\n\nconst initialState: RecruiterState = {\n  recruiter: null,\n  isAuthenticatedRecruiter: false,\n  isApproved: false,\n  loading: false,\n  error: null,\n  otpStep: false,\n  profile: null,\n  subscribed: false,\n  planDuration: null,\n  expiryDate: null,\n};\n\n// Async thunks\nexport const register = createAsyncThunk(\n  \"recruiter/register\",\n  async (recruiterData: any, { rejectWithValue }) => {\n    try {\n      return await registerRecruiterApi(recruiterData);\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : \"An unknown error occurred\");\n    }\n  }\n);\n\nexport const login = createAsyncThunk(\n  \"recruiter/login\",\n  async (loginData: any, { rejectWithValue }) => {\n    try {\n       const response =await loginRecruiterApi(loginData);\n       return response\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : \"An unknown error occurred\");\n    }\n  }\n);\n\nexport const verifyOtp = createAsyncThunk(\n  \"recruiter/verifyOtp\",\n  async (otpData: any, { rejectWithValue }) => {\n    try {\n      return await verifyOtpApi(otpData);\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : \"An unknown error occurred\");\n    }\n  }\n);\n\nexport const sendOtp = createAsyncThunk(\n  \"recruiter/sendOtp\",\n  async (email: string, { rejectWithValue }) => {\n    try {\n      return await sendOtpApi(email);\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : \"An unknown error occurred\");\n    }\n  }\n);\n\nexport const fetchProfile = createAsyncThunk(\n  \"recruiter/fetchProfile\",\n  async (recruiterId: string, { rejectWithValue }) => {\n    try {\n      return await fetchRecruiterProfileApi(recruiterId);\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : \"An unknown error occurred\");\n    }\n  }\n);\n\nexport const updateProfile = createAsyncThunk(\n  \"recruiter/updateProfile\",\n  async ({ recruiterId, profileData }: { recruiterId: string; profileData: FormData }, { rejectWithValue }) => {\n    try {\n      return await updateRecruiterProfileApi(recruiterId, profileData);\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : \"An unknown error occurred\");\n    }\n  }\n);\n\nexport const updateSubscription = createAsyncThunk(\n  \"recruiter/updateSubscription\",\n  async (subscriptionData: { subscribed: boolean; planDuration: string; expiryDate: string }, { rejectWithValue }) => {\n    try {\n      \n      return subscriptionData;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : \"An unknown error occurred\");\n    }\n  }\n);\n\nexport const refreshRecruiterToken = createAsyncThunk(\n  'recruiter/refreshRecruiterToken',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await refreshRecruiterTokenApi();\n      return response;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  }\n);\n\nconst recruiterSlice = createSlice({\n  name: \"recruiter\",\n  initialState,\n  reducers: {\n    logout: (state) => {\n      Object.assign(state, initialState);\n      localStorage.removeItem(\"recruiterToken\");\n      localStorage.removeItem('recruiterState');\n    },\n    setOtpStep: (state, action: PayloadAction<boolean>) => {\n      state.otpStep = action.payload;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(REHYDRATE, (state, action: any) => {\n        if (action.payload && action.key === 'recruiter') {\n          return {\n            ...state,\n            ...action.payload,\n            isAuthenticatedRecruiter: !!localStorage.getItem(\"recruiterToken\"),\n          };\n        }\n        return state;\n      })\n   \n      .addCase(register.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.loading = false;\n        state.recruiter = action.payload;\n        state.otpStep = true;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n  \n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticatedRecruiter = true;\n        state.recruiter = action.payload.recruiter;\n        state.isApproved = action.payload.recruiter.isApproved;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n     \n      .addCase(verifyOtp.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(verifyOtp.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticatedRecruiter = true;\n        state.isApproved = action.payload.isApproved;\n        localStorage.setItem(\"recruiterToken\", action.payload.token);\n      })\n      .addCase(verifyOtp.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n  \n      .addCase(sendOtp.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(sendOtp.fulfilled, (state) => {\n        state.loading = false;\n      })\n      .addCase(sendOtp.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n    \n      .addCase(fetchProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.profile = action.payload;\n      })\n      .addCase(fetchProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n     \n      .addCase(updateProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.profile = action.payload;\n      })\n      .addCase(updateProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(updateSubscription.fulfilled, (state, action) => {\n        state.subscribed = action.payload.subscribed;\n        state.planDuration = action.payload.planDuration;\n        state.expiryDate = action.payload.expiryDate; \n      \n        if (state.recruiter) {\n          state.recruiter = {\n            ...state.recruiter,\n            subscribed: action.payload.subscribed,\n            planDuration: action.payload.planDuration,\n            expiryDate: action.payload.expiryDate,\n          };\n        }\n      })\n      .addCase(refreshRecruiterToken.fulfilled, (state, action) => {\n        state.isAuthenticatedRecruiter = true;\n        state.recruiter = action.payload.recruiter;\n        localStorage.setItem('recruiterToken', action.payload.token);\n      });\n  },\n});\n\nexport const { logout, setOtpStep, clearError } = recruiterSlice.actions;\nexport default recruiterSlice.reducer;\nexport const selectRecruiter = (state: RootState) => state.recruiter;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { BasicJobPost, CreateBasicJobPostParams, UpdateBasicJobPostParams } from '../../types/jobPostTypes';\nimport * as jobPostApi from '../../api/recruiterApi';\n\ninterface JobPostState {\n  posts: BasicJobPost[];\n  loading: boolean;\n  error: string | null;\n  totalPages: number;\n  totalCount: number;\n  currentPage: number;\n  selectedPost:BasicJobPost|null;\n}\n\nconst initialState: JobPostState = {\n  posts: [],\n  loading: false,\n  error: null,\n  totalPages: 0,\n  totalCount: 0,\n  currentPage: 1,\n  selectedPost: null, \n};\n\nexport const fetchJobPosts = createAsyncThunk(\n  'jobPosts/fetchJobPosts',\n  async (recruiterId: string, { rejectWithValue }) => {\n    try {\n      const response = await jobPostApi.getJobPosts(recruiterId);\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch job posts');\n    }\n  }\n);\n\nexport const createJobPost = createAsyncThunk(\n  'jobPosts/createJobPost', \n  async (params: CreateBasicJobPostParams, { rejectWithValue }) => {\n    try {\n      const response = await jobPostApi.createJobPost(params);\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to create job post');\n    }\n  }\n);\n\nexport const updateJobPost = createAsyncThunk(\n  'jobPosts/updateJobPost', \n  async (params: UpdateBasicJobPostParams, { rejectWithValue }) => {\n    try {\n      const response = await jobPostApi.updateJobPost(params);\n      return response;\n    } catch (error: any) {\n      console.error('Error in updateJobPost thunk:', error);\n      return rejectWithValue(error instanceof Error ? error :'Failed to update job post');\n    }\n  }\n);\n\nexport const deleteJobPost = createAsyncThunk(\n  'jobPosts/deleteJobPost', \n  async (id: string, { rejectWithValue }) => {\n    try {\n      await jobPostApi.deleteJobPost(id);\n      return id;\n    } catch (error: any) {\n      return rejectWithValue(error instanceof Error ? error :'Failed to delete job post');\n    }\n  }\n);\n\nexport const fetchJobDetails = createAsyncThunk(\n  'jobPosts/fetchJobDetails',\n  async (jobId: string, { rejectWithValue }) => {\n    try {\n      const response = await jobPostApi.fetchJobDetails(jobId);\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch job details');\n    }\n  }\n);\n\nexport const fetchAllJobPosts = createAsyncThunk(\n  'jobPosts/fetchAllJobPosts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await jobPostApi.getAllJobPosts();\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to fetch all job posts');\n    }\n  }\n);\n\nconst jobPostSlice = createSlice({\n  name: 'jobPosts',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchJobPosts.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchJobPosts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.posts = action.payload;\n      })\n      .addCase(fetchJobPosts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string || 'Failed to fetch job posts';\n      })\n      .addCase(createJobPost.pending, (state) => {\n        state.error = null;\n      })\n      .addCase(createJobPost.fulfilled, (state, action) => {\n        state.posts.push(action.payload);\n      })\n      .addCase(createJobPost.rejected, (state, action) => {\n        state.error = action.payload as string || 'Failed to create job post';\n      })\n      .addCase(updateJobPost.pending, (state) => {\n        state.error = null;\n      })\n      .addCase(updateJobPost.fulfilled, (state, action) => {\n        const index = state.posts.findIndex(post => post._id === action.payload._id);\n        if (index !== -1) {\n          state.posts[index] = action.payload;\n        }\n      })\n      .addCase(updateJobPost.rejected, (state, action) => {\n        console.error('Update rejected:', action.payload);\n        state.error = action.payload as string || 'Failed to update job post';\n      })\n      .addCase(deleteJobPost.pending, (state) => {\n        state.error = null;\n      })\n      .addCase(deleteJobPost.fulfilled, (state, action) => {\n        state.posts = state.posts.filter(post => post._id !== action.payload);\n      })\n      .addCase(deleteJobPost.rejected, (state, action) => {\n        state.error = action.payload as string || 'Failed to delete job post';\n      })\n      .addCase(fetchJobDetails.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchJobDetails.fulfilled, (state, action) => {\n        state.loading = false;\n        state.selectedPost = action.payload;\n      })\n      .addCase(fetchJobDetails.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string || 'Failed to fetch job details';\n      })\n      .addCase(fetchAllJobPosts.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchAllJobPosts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.posts = action.payload;\n      })\n      .addCase(fetchAllJobPosts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string || 'Failed to fetch all job posts';\n      });\n  },\n});\n\n\nexport default jobPostSlice.reducer;\n","// slices/contestantSlice.ts\r\n\r\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User, UserDetails, FetchUsersResponse, FetchUserDetailsResponse, ApiError } from '../../types/auth';\r\nimport { fetchJobApplicants, fetchUserDetails, fetchFilteredApplicants } from '../../api/recruiterApi';\r\n\r\ninterface ContestantState {\r\n  contestants: User[];\r\n  filteredContestants: (User & { matchPercentage?: number })[];\r\n  selectedContestant: UserDetails | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\nconst initialState: ContestantState = {\r\n  contestants: [],\r\n  filteredContestants: [],\r\n  selectedContestant: null,\r\n  loading: false,\r\n  error: null,\r\n  totalPages: 0,\r\n  currentPage: 1,\r\n};\r\n\r\nexport const fetchContestantsForJob = createAsyncThunk<\r\n  FetchUsersResponse,\r\n  { jobId: string; page?: number },\r\n  { rejectValue: ApiError }\r\n>('contestants/fetchForJob', async ({ jobId, page = 1 }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await fetchJobApplicants(jobId, page);\r\n    console.log(response)\r\n    return response;\r\n  } catch (error: any) {\r\n    return rejectWithValue({ message: error.message || 'Failed to fetch applicants' });\r\n  }\r\n});\r\n\r\nexport const fetchContestantDetailsAsync = createAsyncThunk<\r\n  FetchUserDetailsResponse,\r\n  string,\r\n  { rejectValue: ApiError }\r\n>('contestants/fetchDetails', async (userId, { rejectWithValue }) => {\r\n  try {\r\n    const response = await fetchUserDetails(userId);\r\n    console.log(response)\r\n    return response;\r\n  } catch (error: any) {\r\n    return rejectWithValue({ message: error.message || 'Failed to fetch user details' });\r\n  }\r\n});\r\n\r\ninterface FilteredUserResponse extends Omit<FetchUsersResponse, 'applicants'> {\r\n  applicants: (User & { matchPercentage?: number })[];\r\n}\r\n\r\nexport const fetchFilteredContestantsForJob = createAsyncThunk<\r\n  FilteredUserResponse,\r\n  string,\r\n  { rejectValue: ApiError }\r\n>('contestants/fetchFilteredContestantsForJob', async (jobId, { rejectWithValue }) => {\r\n  try {\r\n    const response = await fetchFilteredApplicants(jobId);\r\n    console.log('Filtered Response:', response);\r\n    // Ensure that each applicant has a matchPercentage property\r\n    const filteredResponse: FilteredUserResponse = {\r\n      applicants: Array.isArray(response) \r\n        ? response.map(applicant => ({\r\n            ...applicant,\r\n            matchPercentage: (applicant as any).matchPercentage || 0\r\n          }))\r\n        : [{\r\n            ...response,\r\n            matchPercentage: (response as any).matchPercentage || 0\r\n          }],\r\n      totalPages: (response as FetchUsersResponse).totalPages || 1,\r\n      currentPage: (response as FetchUsersResponse).currentPage || 1\r\n    };\r\n    console.log('Processed Filtered Response:', filteredResponse);\r\n    return filteredResponse;\r\n  } catch (error) {\r\n    return rejectWithValue({ message: error instanceof Error ? error.message : 'Failed to fetch filtered contestants' });\r\n  }\r\n});\r\n\r\nconst contestantSlice = createSlice({\r\n  name: 'contestants',\r\n  initialState,\r\n  reducers: {\r\n    clearSelectedContestant: (state) => {\r\n      state.selectedContestant = null;\r\n    },\r\n    clearContestants: (state) => {\r\n      state.contestants = [];\r\n      state.totalPages = 0;\r\n      state.currentPage = 1;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchContestantsForJob.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchContestantsForJob.fulfilled, (state, action: PayloadAction<FetchUsersResponse>) => {\r\n        state.loading = false;\r\n        state.contestants = action.payload.applicants;\r\n        state.totalPages = action.payload.totalPages;\r\n        state.currentPage = action.payload.currentPage;\r\n      })\r\n      .addCase(fetchContestantsForJob.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'An error occurred';\r\n      })\r\n      .addCase(fetchContestantDetailsAsync.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchContestantDetailsAsync.fulfilled, (state, action: PayloadAction<FetchUserDetailsResponse>) => {\r\n        state.loading = false;\r\n        state.selectedContestant = action.payload.user;\r\n      })\r\n      .addCase(fetchContestantDetailsAsync.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'An error occurred';\r\n      })\r\n      .addCase(fetchFilteredContestantsForJob.fulfilled, (state, action: PayloadAction<FilteredUserResponse>) => {\r\n        state.filteredContestants = action.payload.applicants;\r\n        state.totalPages = action.payload.totalPages || 1;\r\n        state.currentPage = action.payload.currentPage || 1;\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearSelectedContestant, clearContestants } = contestantSlice.actions;\r\n\r\nexport default contestantSlice.reducer;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n  Post,\r\n  CreatePostData,\r\n  LikePostData,\r\n  CommentPostData,\r\n  PostsApiResponse,\r\n} from \"../../types/postTypes\";\r\nimport {\r\n  fetchPostsAPI,\r\n  fetchPostsByUserIdAPI,\r\n  createPostAPI,\r\n  likePostAPI,\r\n  commentOnPostAPI,\r\n  deletePostAPI,\r\n  editPostAPI,\r\n  dislikePostAPI,\r\n  deleteCommentAPI,\r\n} from \"../../api/authapi\";\r\n\r\ninterface PostsState {\r\n  list: Post[];\r\n  userPosts: Post[];\r\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n  error: string | null;\r\n  hasMore: boolean;\r\n  page: number;\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\nconst initialState: PostsState = {\r\n  list: [],\r\n  userPosts: [],\r\n  status: \"idle\",\r\n  error: null,\r\n  hasMore: true,\r\n  page: 1,\r\n  totalPages: 1,\r\n  currentPage: 1,\r\n};\r\n\r\nexport const fetchPosts = createAsyncThunk(\r\n  \"posts/fetchPosts\",\r\n  async (_, { getState }) => {\r\n    const { posts } = getState() as { posts: PostsState };\r\n    const response = await fetchPostsAPI(posts.page);\r\n    return Array.isArray(response)\r\n      ? response\r\n      : (response as PostsApiResponse).posts;\r\n  }\r\n);\r\n\r\nexport const fetchPostsByUserId = createAsyncThunk<\r\n  PostsApiResponse,\r\n  { userId: string; page: number; limit: number }\r\n>(\"posts/fetchPostsByUserId\", async ({ userId, page, limit }) => {\r\n  const response = await fetchPostsByUserIdAPI(userId, page, limit);\r\n  return response;\r\n});\r\n\r\nexport const createPost = createAsyncThunk(\r\n  \"posts/createPost\",\r\n  async ({\r\n    postData,\r\n    userId,\r\n  }: {\r\n    postData: CreatePostData;\r\n    userId: string;\r\n  }) => {\r\n    const response = await createPostAPI(postData, userId);\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const likePost = createAsyncThunk(\r\n  \"posts/likePost\",\r\n  async (likeData: LikePostData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await likePostAPI(likeData);\r\n      return response;\r\n    } catch (error: unknown) {\r\n      console.error(\"Error in likePost:\", error);\r\n      if (error instanceof Error) {\r\n        return rejectWithValue(error.message);\r\n      }\r\n      return rejectWithValue(\"An unknown error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const commentOnPost = createAsyncThunk(\r\n  \"posts/commentOnPost\",\r\n  async (commentData: CommentPostData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await commentOnPostAPI(commentData);\r\n      return response;\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        return rejectWithValue(error.message);\r\n      }\r\n      return rejectWithValue(\"An unknown error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const deletePost = createAsyncThunk(\r\n  \"posts/deletePost\",\r\n  async (postId: string, { rejectWithValue }) => {\r\n    try {\r\n      await deletePostAPI(postId);\r\n      return postId;\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        return rejectWithValue(error.message);\r\n      }\r\n      return rejectWithValue(\"An unknown error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const editPost = createAsyncThunk(\r\n  \"posts/editPost\",\r\n  async ({\r\n    postId,\r\n    userId,\r\n    postData,\r\n  }: {\r\n    postId: string;\r\n    userId: string;\r\n    postData: Partial<CreatePostData>;\r\n  }) => {\r\n    const response = await editPostAPI(postId, userId, postData);\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const dislikePost = createAsyncThunk(\r\n  \"posts/dislikePost\",\r\n  async (dislikeData: LikePostData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await dislikePostAPI(dislikeData);\r\n      return response;\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        return rejectWithValue(error.message);\r\n      }\r\n      return rejectWithValue(\"An unknown error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteComment = createAsyncThunk(\r\n  \"posts/deleteComment\",\r\n  async (\r\n    { postId, commentId }: { postId: string; commentId: string },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const response = await deleteCommentAPI(postId, commentId);\r\n      return response;\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        return rejectWithValue(error.message);\r\n      }\r\n      return rejectWithValue(\"An unknown error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nconst postsSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState,\r\n  reducers: {\r\n    resetPosts: (state) => {\r\n      state.list = [];\r\n      state.page = 1;\r\n      state.hasMore = true;\r\n      state.status = \"idle\";\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action: PayloadAction<Post[]>) => {\r\n        state.status = \"succeeded\";\r\n        state.list = Array.isArray(state.list)\r\n          ? [...state.list, ...action.payload]\r\n          : action.payload;\r\n        state.hasMore = action.payload.length > 0;\r\n        state.page += 1;\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message || null;\r\n      })\r\n      .addCase(\r\n        fetchPostsByUserId.fulfilled,\r\n        (state, action: PayloadAction<PostsApiResponse>) => {\r\n          state.userPosts = Array.isArray(action.payload.posts)\r\n            ? action.payload.posts\r\n            : [];\r\n          state.totalPages = action.payload.totalPages;\r\n          state.currentPage = action.payload.currentPage;\r\n          state.status = \"succeeded\";\r\n          state.error = null;\r\n        }\r\n      )\r\n      .addCase(fetchPostsByUserId.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message || \"Failed to fetch user posts\";\r\n      })\r\n      .addCase(createPost.fulfilled, (state, action) => {\r\n        state.list = Array.isArray(state.list)\r\n          ? [action.payload, ...state.list]\r\n          : [action.payload];\r\n        state.userPosts = Array.isArray(state.userPosts)\r\n          ? [action.payload, ...state.userPosts]\r\n          : [action.payload];\r\n      })\r\n      .addCase(likePost.fulfilled, (state, action: PayloadAction<Post>) => {\r\n        const updatedPost = action.payload;\r\n        const index = state.list.findIndex(\r\n          (post) => post._id === updatedPost._id\r\n        );\r\n        if (index !== -1) {\r\n          state.list[index] = updatedPost;\r\n        }\r\n        const userIndex = state.userPosts.findIndex(\r\n          (post) => post._id === updatedPost._id\r\n        );\r\n        if (userIndex !== -1) {\r\n          state.userPosts[userIndex] = updatedPost;\r\n        }\r\n      })\r\n      .addCase(\r\n        commentOnPost.fulfilled,\r\n        (state, action: PayloadAction<Post>) => {\r\n          const updatedPost = action.payload;\r\n          const index = state.list.findIndex(\r\n            (post) => post._id === updatedPost._id\r\n          );\r\n          if (index !== -1) {\r\n            state.list[index] = updatedPost;\r\n          }\r\n          const userIndex = state.userPosts.findIndex(\r\n            (post) => post._id === updatedPost._id\r\n          );\r\n          if (userIndex !== -1) {\r\n            state.userPosts[userIndex] = updatedPost;\r\n          }\r\n        }\r\n      )\r\n      .addCase(deletePost.fulfilled, (state, action: PayloadAction<string>) => {\r\n        state.list = state.list.filter((post) => post._id !== action.payload);\r\n        state.userPosts = state.userPosts.filter(\r\n          (post) => post._id !== action.payload\r\n        );\r\n      })\r\n      .addCase(editPost.fulfilled, (state, action) => {\r\n        const updatedPost = action.payload;\r\n        if (Array.isArray(state.list)) {\r\n          const index = state.list.findIndex(\r\n            (post) => post._id === updatedPost._id\r\n          );\r\n          if (index !== -1) {\r\n            state.list[index] = updatedPost;\r\n          }\r\n        }\r\n        if (Array.isArray(state.userPosts)) {\r\n          const userIndex = state.userPosts.findIndex(\r\n            (post) => post._id === updatedPost._id\r\n          );\r\n          if (userIndex !== -1) {\r\n            state.userPosts[userIndex] = updatedPost;\r\n          }\r\n        }\r\n      })\r\n      .addCase(dislikePost.fulfilled, (state, action: PayloadAction<Post>) => {\r\n        const updatedPost = action.payload;\r\n        const index = state.list.findIndex(\r\n          (post) => post._id === updatedPost._id\r\n        );\r\n        if (index !== -1) {\r\n          state.list[index] = updatedPost;\r\n        }\r\n        const userIndex = state.userPosts.findIndex(\r\n          (post) => post._id === updatedPost._id\r\n        );\r\n        if (userIndex !== -1) {\r\n          state.userPosts[userIndex] = updatedPost;\r\n        }\r\n      })\r\n      .addCase(\r\n        deleteComment.fulfilled,\r\n        (state, action: PayloadAction<Post>) => {\r\n          const updatedPost = action.payload;\r\n          const index = state.list.findIndex(\r\n            (post) => post._id === updatedPost._id\r\n          );\r\n          if (index !== -1) {\r\n            state.list[index] = updatedPost;\r\n          }\r\n          const userIndex = state.userPosts.findIndex(\r\n            (post) => post._id === updatedPost._id\r\n          );\r\n          if (userIndex !== -1) {\r\n            state.userPosts[userIndex] = updatedPost;\r\n          }\r\n        }\r\n      );\r\n  },\r\n});\r\n\r\nexport const { resetPosts } = postsSlice.actions;\r\nexport default postsSlice.reducer;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { BasicJobPost } from '../../types/jobPostTypes';\r\nimport { fetchJobPostsApi, blockJobPostApi, unblockJobPostApi } from '../../api/adminApi';\r\n\r\ninterface AdminJobPostState {\r\n  jobPosts: BasicJobPost[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AdminJobPostState = {\r\n  jobPosts: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const fetchJobPosts = createAsyncThunk(\r\n  'adminJobPost/fetchJobPosts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchJobPostsApi();\r\n      console.log(\"Fetched job posts:\", response);\r\n      return response;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.message || 'Failed to fetch job posts');\r\n    }\r\n  }\r\n);\r\n\r\nexport const blockJobPost = createAsyncThunk(\r\n  'adminJobPost/blockJobPost',\r\n  async (postId: string, { rejectWithValue }) => {\r\n    try {\r\n      const response = await blockJobPostApi(postId);\r\n      return response;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.message || 'Failed to block job post');\r\n    }\r\n  }\r\n);\r\n\r\nexport const unblockJobPost = createAsyncThunk(\r\n  'adminJobPost/unblockJobPost',\r\n  async (postId: string, { rejectWithValue }) => {\r\n    try {\r\n      const response = await unblockJobPostApi(postId);\r\n      return response;\r\n} catch (err: any) {\r\n  return rejectWithValue(err.message || 'Failed to unblock job post');\r\n}\r\n}\r\n);\r\n\r\nconst adminJobPostSlice = createSlice({\r\nname: 'adminJobPost',\r\ninitialState,\r\nreducers: {},\r\nextraReducers: (builder) => {\r\nbuilder\r\n  .addCase(fetchJobPosts.pending, (state) => {\r\n    state.loading = true;\r\n  })\r\n  .addCase(fetchJobPosts.fulfilled, (state, action: PayloadAction<BasicJobPost[]>) => {\r\n    state.loading = false;\r\n    state.jobPosts = action.payload;\r\n    state.error = null;\r\n    console.log(\"Updated state job posts:\", state.jobPosts);\r\n  })\r\n  .addCase(fetchJobPosts.rejected, (state, action: PayloadAction<any>) => {\r\n    state.loading = false;\r\n    state.error = action.payload || 'Failed to fetch job posts';\r\n  })\r\n  .addCase(blockJobPost.fulfilled, (state, action: PayloadAction<BasicJobPost>) => {\r\n    const index = state.jobPosts.findIndex((post) => post._id === action.payload._id);\r\n    if (index !== -1) {\r\n      state.jobPosts[index] = action.payload;\r\n    }\r\n  })\r\n  .addCase(unblockJobPost.fulfilled, (state, action: PayloadAction<BasicJobPost>) => {\r\n    const index = state.jobPosts.findIndex((post) => post._id === action.payload._id);\r\n    if (index !== -1) {\r\n      state.jobPosts[index] = action.payload;\r\n    }\r\n  });\r\n},\r\n});\r\n\r\nexport default adminJobPostSlice.reducer;","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RecommendationUser, User, UserConnection } from \"../../types/auth\";\nimport { RootState } from \"../store\";\nimport {\n  fetchRecommendationsApi,\n  sendConnectionRequestApi,\n  fetchConnectionProfileApi,\n  fetchConnectionRequestsApi,\n  acceptConnectionRequestApi,\n  rejectConnectionRequestApi,\n  fetchConnectionsApi,\n  searchConnectionsApi,\n  searchConnectionsMessageApi,\n  removeConnectionApi,\n} from \"../../api/authapi\";\n\ninterface ConnectionState {\n  recommendations: RecommendationUser[];\n  connectionProfile: User | null;\n  profilesConnection: { [key: string]: User };\n  connectionRequests: any[];\n  loading: boolean;\n  error: string | null;\n  connections: User[] | null;\n  lastFetchedAt: number | null;\n  messageConnections: User[];\n  messageSearchResults: UserConnection[];\n}\n\nconst initialState: ConnectionState = {\n  recommendations: [],\n  connectionProfile: null,\n  profilesConnection: {},\n  connectionRequests: [],\n  loading: false,\n  error: null,\n  connections: [],\n  lastFetchedAt: null,\n  messageConnections: [],\n  messageSearchResults: [],\n};\n\nexport const fetchConnectionProfile = createAsyncThunk(\n  \"connections/fetchProfile\",\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      const response = await fetchConnectionProfileApi(userId);\n      return { userId, profile: response };\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to fetch connection profile. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const fetchRecommendations = createAsyncThunk(\n  \"connections/fetchRecommendations\",\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      const response = await fetchRecommendationsApi(userId);\n      if (!response) {\n        return rejectWithValue(\"Invalid response from server\");\n      }\n      console.log(\"reccommmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\", response);\n      return response;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to fetch recommendations. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const sendConnectionRequest = createAsyncThunk(\n  \"connections/sendRequest\",\n  async (\n    { senderId, recipientId }: { senderId: string; recipientId: string },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await sendConnectionRequestApi(senderId, recipientId);\n      if (response && response.connection) {\n        return response.connection;\n      } else {\n        return rejectWithValue(\"Invalid response from server\");\n      }\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to send connection request. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const fetchConnectionRequests = createAsyncThunk(\n  \"connections/fetchRequests\",\n  async (userId: string, { getState, rejectWithValue }) => {\n    try {\n      const response = await fetchConnectionRequestsApi(userId);\n      console.log(\"Connection requests response:\", response);\n      return response;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to fetch connection requests. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const acceptConnectionRequest = createAsyncThunk(\n  \"connections/acceptRequest\",\n  async (\n    { requestId, userId }: { requestId: string; userId: string },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await acceptConnectionRequestApi(requestId, userId);\n      console.log(\"accept response\", response);\n      return response;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to accept connection request. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const rejectConnectionRequest = createAsyncThunk(\n  \"connections/rejectRequest\",\n  async (\n    { requestId, userId }: { requestId: string; userId: string },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await rejectConnectionRequestApi(requestId, userId);\n      return response;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to reject connection request. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const fetchConnections = createAsyncThunk(\n  \"connections/fetchConnections\",\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      const response = await fetchConnectionsApi(userId);\n      console.log(\"respo connections\",response)\n      return response;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to fetch connections. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const searchConnections = createAsyncThunk(\n  \"connections/searchConnections\",\n  async (\n    { userId, query }: { userId: string; query: string },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await searchConnectionsApi(userId, query);\n      return response;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to search connections. Please try again later.\"\n      );\n    }\n  }\n);\n\nexport const searchConnectionsMessage = createAsyncThunk(\n  \"connections/searchConnections/message\",\n  async (payload: { userId: string; query: string }) => {\n    const { userId, query } = payload;\n\n    let response = await searchConnectionsMessageApi(userId, query);\n    console.log(response);\n    return response;\n  }\n);\n\nexport const removeConnection = createAsyncThunk(\n  \"connections/removeConnection\",\n  async (\n    { userId, connectionId }: { userId: string; connectionId: string },\n    { rejectWithValue }\n  ) => {\n    try {\n      await removeConnectionApi(userId, connectionId); // Call the API\n      return connectionId; // Return the connectionId to be removed\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        return rejectWithValue(error.message);\n      }\n      return rejectWithValue(\n        \"Failed to remove connection. Please try again later.\"\n      );\n    }\n  }\n);\n\nconst connectionSlice = createSlice({\n  name: \"connections\",\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    clearConnectionProfile: (state, action: PayloadAction<string>) => {\n      delete state.profilesConnection[action.payload];\n    },\n    clearAllConnectionProfiles: (state) => {\n      state.profilesConnection = {};\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchRecommendations.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchRecommendations.fulfilled,\n        (state, action: PayloadAction<RecommendationUser[]>) => {\n          state.loading = false;\n          state.recommendations = action.payload;\n        }\n      )\n      .addCase(fetchRecommendations.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to fetch recommendations. Please try again.\";\n      })\n      .addCase(sendConnectionRequest.pending, (state) => {\n        state.error = null;\n      })\n      .addCase(\n        sendConnectionRequest.fulfilled,\n        (state, action: PayloadAction<any>) => {\n          if (action.payload && action.payload.recipientId) {\n            const updatedConnection = action.payload;\n            state.recommendations = state.recommendations.map((user) =>\n              user.id === updatedConnection.recipientId\n                ? { ...user, connectionStatus: \"pending\" }\n                : user\n            );\n          } else {\n            console.error(\n              \"Invalid payload received in sendConnectionRequest.fulfilled:\",\n              action.payload\n            );\n          }\n        }\n      )\n      .addCase(sendConnectionRequest.rejected, (state, action) => {\n        state.error =\n          (action.payload as string) ||\n          \"Failed to send connection request. Please try again.\";\n      })\n      .addCase(fetchConnectionProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchConnectionProfile.fulfilled,\n        (state, action: PayloadAction<{ userId: string; profile: User }>) => {\n          state.loading = false;\n          const { userId, profile } = action.payload;\n          state.profilesConnection[userId] = profile;\n          if (\n            !state.connectionProfile ||\n            state.connectionProfile.id !== profile.id\n          ) {\n            state.connectionProfile = profile;\n          }\n        }\n      )\n      .addCase(fetchConnectionProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to fetch connection profile. Please try again.\";\n      })\n      .addCase(fetchConnectionRequests.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchConnectionRequests.fulfilled,\n        (state, action: PayloadAction<any[] | null>) => {\n          state.loading = false;\n          if (action.payload !== null) {\n            state.connectionRequests = action.payload;\n            console.log(\"state.connectionRequests\", state.connectionRequests);\n            state.lastFetchedAt = Date.now();\n          }\n        }\n      )\n      .addCase(fetchConnectionRequests.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to fetch connection requests. Please try again.\";\n      })\n      .addCase(acceptConnectionRequest.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        acceptConnectionRequest.fulfilled,\n        (state, action: PayloadAction<{ _id: string }>) => {\n          state.loading = false;\n          state.connectionRequests = state.connectionRequests.filter(\n            (request) => request._id !== action.payload._id\n          );\n        }\n      )\n      .addCase(acceptConnectionRequest.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to accept connection request. Please try again.\";\n      })\n      .addCase(rejectConnectionRequest.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        rejectConnectionRequest.fulfilled,\n        (state, action: PayloadAction<{ requestId: string }>) => {\n          state.loading = false;\n          state.connectionRequests = state.connectionRequests.filter(\n            (request) => request.id !== action.payload.requestId\n          );\n        }\n      )\n      .addCase(rejectConnectionRequest.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to reject connection request. Please try again.\";\n      })\n      .addCase(fetchConnections.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchConnections.fulfilled,\n        (\n          state,\n          action: PayloadAction<{\n            connections: User[];\n            connectionRequests: any[];\n          }>\n        ) => {\n          state.loading = false;\n          state.connections = action.payload.connections;\n          state.connectionRequests = action.payload.connectionRequests;\n        }\n      )\n      .addCase(fetchConnections.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to fetch connections. Please try again.\";\n      })\n      .addCase(searchConnections.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        searchConnections.fulfilled,\n        (state, action: PayloadAction<User[]>) => {\n          state.loading = false;\n          state.connections = action.payload;\n        }\n      )\n      .addCase(searchConnections.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to search connections. Please try again.\";\n      })\n\n      .addCase(searchConnectionsMessage.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(searchConnectionsMessage.fulfilled, (state, action) => {\n        state.loading = false;\n        state.messageSearchResults = Array.isArray(action.payload)\n          ? action.payload\n          : [];\n      })\n      .addCase(searchConnectionsMessage.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to search connections\";\n      })\n      .addCase(removeConnection.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(removeConnection.fulfilled, (state, action: PayloadAction<string>) => {\n        state.loading = false;\n        state.connections = state.connections?.filter(\n          (connection) => connection._id !== action.payload\n        ) || []; \n      })\n      .addCase(removeConnection.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          (action.payload as string) ||\n          \"Failed to remove connection. Please try again.\";\n      });\n  },\n});\n\nexport const {\n  clearError,\n  clearConnectionProfile,\n  clearAllConnectionProfiles,\n} = connectionSlice.actions;\nexport const selectConnections = (state: RootState) =>\n  state.connections.messageConnections;\nexport const selectSearchResults = (state: RootState) =>\n  state.connections.messageSearchResults;\n\nexport default connectionSlice.reducer;\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { fetchNotificationsApi } from '../../api/authapi';\r\nimport { Notification } from '../../types/notification';\r\n\r\nexport const fetchNotifications = createAsyncThunk<\r\n  Notification[],\r\n  string,\r\n  { rejectValue: string }\r\n>('notifications/fetch', async (userId: string, { rejectWithValue }) => {\r\n  try {\r\n    const response = await fetchNotificationsApi(userId);\r\n    if (!response || !Array.isArray(response)) {\r\n      throw new Error('Invalid response format');\r\n    }\r\n    return response;\r\n  } catch (error: unknown) {\r\n    if (error instanceof Error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n    return rejectWithValue('Failed to fetch notifications');\r\n  }\r\n});\r\n\r\ninterface NotificationState {\r\n  items: Notification[];\r\n  unreadCount: number;\r\n  loading: boolean;\r\n  error: string | null;\r\n  lastFetchedAt: number | null;\r\n  seenNotifications: string[];\r\n}\r\n\r\nconst initialState: NotificationState = {\r\n  items: [],\r\n  unreadCount: 0,\r\n  loading: false,\r\n  error: null,\r\n  lastFetchedAt: null,\r\n  seenNotifications: [],\r\n};\r\n\r\nconst notificationSlice = createSlice({\r\n  name: 'notifications',\r\n  initialState,\r\n  reducers: {\r\n    addNotification: (state, action: PayloadAction<Notification>) => {\r\n      state.items.unshift(action.payload);\r\n      state.unreadCount += 1;\r\n    },\r\n    markAsRead: (state, action: PayloadAction<string>) => {\r\n      const notification = state.items.find(item => item._id === action.payload);\r\n      if (notification && !notification.isRead) {\r\n        notification.isRead = true;\r\n        state.unreadCount = Math.max(0, state.unreadCount - 1);\r\n      }\r\n    },\r\n    markAsSeen: (state, action: PayloadAction<string>) => {\r\n      if (!state.seenNotifications.includes(action.payload)) {\r\n        state.seenNotifications.push(action.payload);\r\n        state.items = state.items.filter(item => item._id !== action.payload);\r\n        state.unreadCount = state.items.filter(item => !item.isRead).length;\r\n      }\r\n    },\r\n    markAllAsRead: (state) => {\r\n      state.items.forEach(item => {\r\n        if (!item.isRead) {\r\n          item.isRead = true;\r\n          if (!state.seenNotifications.includes(item._id)) {\r\n            state.seenNotifications.push(item._id);\r\n          }\r\n        }\r\n      });\r\n      state.unreadCount = 0;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  \r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchNotifications.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchNotifications.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const newNotifications = action.payload.filter(\r\n          notification => !state.seenNotifications.includes(notification._id)\r\n        );\r\n        state.items = newNotifications;\r\n        state.unreadCount = newNotifications.filter(\r\n          notification => !notification.isRead\r\n        ).length;\r\n        state.lastFetchedAt = Date.now();\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchNotifications.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload || 'An unknown error occurred';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { addNotification, markAsRead, markAllAsRead, clearError, markAsSeen } = notificationSlice.actions;\r\nexport default notificationSlice.reducer;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { Message, User } from \"../../types/messageType\"; // Updated import path\r\nimport {\r\n  getConversationApi,\r\n  markMessageAsReadApi,\r\n  getUnreadMessageCountApi,\r\n  fetchConnectionsMessageApi,\r\n} from \"../../api/authapi\";\r\n\r\ninterface MessageState {\r\n  connections: {\r\n    user: User;\r\n    lastMessage: Message;\r\n    isOnline: boolean;\r\n    isTyping: boolean;\r\n  }[];\r\n  conversations: { [key: string]: Message[] };\r\n  unreadCount: number;\r\n  loading: boolean;\r\n  error: string | null;\r\n  currentUserId: string | null;\r\n}\r\n\r\nconst initialState: MessageState = {\r\n  connections: [],\r\n  conversations: {},\r\n  unreadCount: 0,\r\n  loading: false,\r\n  error: null,\r\n  currentUserId: null,\r\n};\r\n\r\nexport const fetchMessageConnections = createAsyncThunk<\r\n  { user: User; lastMessage: Message; isOnline: boolean }[],\r\n  string\r\n>(\"messages/fetchConnections\", async (userId: string) => {\r\n  const response = await fetchConnectionsMessageApi(userId);\r\n  return response;\r\n});\r\n\r\nexport const fetchConversation = createAsyncThunk(\r\n  \"messages/fetchConversation\",\r\n  async ({ userId1, userId2 }: { userId1: string; userId2: string }) => {\r\n    const response = await getConversationApi(userId1, userId2);\r\n    const conversationId =\r\n      userId1 < userId2 ? `${userId1}-${userId2}` : `${userId2}-${userId1}`;\r\n    return { conversationId, messages: response };\r\n  }\r\n);\r\n\r\n// export const userSendMessage = createAsyncThunk(\r\n//   \"messages/sendMessage\",\r\n//   async ({\r\n//     senderId,\r\n//     recipientId,\r\n//     content,\r\n//   }: {\r\n//     senderId: string;\r\n//     recipientId: string;\r\n//     content: string;\r\n//   }) => {\r\n//     const response = await sendMessageApi(senderId, recipientId, content);\r\n//     return response;\r\n//   }\r\n// );\r\n\r\nexport const markMessagesAsRead = createAsyncThunk(\r\n  \"messages/markAsRead\",\r\n  async ({ messageIds }: { messageIds: string[] }) => {\r\n    await Promise.all(messageIds.map((id) => markMessageAsReadApi(id)));\r\n    return messageIds;\r\n  }\r\n);\r\n\r\nexport const getUnreadMessageCount = createAsyncThunk(\r\n  \"messages/getUnreadCount\",\r\n  async (userId: string) => {\r\n    const response = await getUnreadMessageCountApi(userId);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst userMessageSlice = createSlice({\r\n  name: \"useMessages\",\r\n  initialState,\r\n  reducers: {\r\n    resetUnreadCount: (state) => {\r\n      state.unreadCount = 0;\r\n    },\r\n    updateMessageStatus: (\r\n      state,\r\n      action: PayloadAction<{\r\n        messageId: string;\r\n        status: \"sent\" | \"delivered\" | \"read\";\r\n      }>\r\n    ) => {\r\n      const { messageId, status } = action.payload;\r\n      Object.values(state.conversations).forEach((conversation) => {\r\n        const message = conversation.find((m: Message) => m.id === messageId); // Added type annotation\r\n        if (message) {\r\n          message.status = status;\r\n        }\r\n      });\r\n    },\r\n    addMessage: (state, action: PayloadAction<Message>) => {\r\n      const { sender, recipient } = action.payload;\r\n      const conversationId =\r\n        sender.id < recipient.id\r\n          ? `${sender.id}-${recipient.id}`\r\n          : `${recipient.id}-${sender.id}`;\r\n      if (!state.conversations[conversationId]) {\r\n        state.conversations[conversationId] = [];\r\n      }\r\n      const messageExists = state.conversations[conversationId].some(\r\n        (msg) => msg.id === action.payload.id\r\n      );\r\n      if (!messageExists) {\r\n        state.conversations[conversationId].push(action.payload);\r\n        const connectionIndex = state.connections.findIndex(\r\n          (conn) =>\r\n            conn.user.id ===\r\n            (sender.id === state.currentUserId ? recipient.id : sender.id)\r\n        );\r\n        if (connectionIndex !== -1) {\r\n          state.connections[connectionIndex].lastMessage = action.payload;\r\n          const [updatedConnection] = state.connections.splice(\r\n            connectionIndex,\r\n            1\r\n          );\r\n          state.connections.unshift(updatedConnection);\r\n        }\r\n      }\r\n    },\r\n    setTypingStatus: (\r\n      state,\r\n      action: PayloadAction<{ userId: string; isTyping: boolean }>\r\n    ) => {\r\n      const connectionIndex = state.connections.findIndex(\r\n        (conn) => conn.user.id === action.payload.userId\r\n      );\r\n      if (connectionIndex !== -1) {\r\n        state.connections[connectionIndex].isTyping =\r\n          action.payload.isTyping ?? false;\r\n      }\r\n    },\r\n    setCurrentUserId: (state, action: PayloadAction<string>) => {\r\n      state.currentUserId = action.payload;\r\n    },\r\n    updateUnreadCount: (state, action: PayloadAction<number>) => {\r\n      state.unreadCount = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchMessageConnections.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(\r\n        fetchMessageConnections.fulfilled,\r\n        (\r\n          state,\r\n          action: PayloadAction<\r\n            { user: User; lastMessage: Message; isOnline: boolean }[]\r\n          >\r\n        ) => {\r\n          state.loading = false;\r\n          state.connections = action.payload.map((conn) => ({\r\n            ...conn,\r\n            isTyping: false,\r\n          }));\r\n        }\r\n      )\r\n      .addCase(fetchMessageConnections.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error =\r\n          action.error.message || \"Failed to fetch message connections\";\r\n      })\r\n      .addCase(fetchConversation.fulfilled, (state, action) => {\r\n        const { conversationId, messages } = action.payload;\r\n        state.conversations[conversationId] = messages;\r\n      })\r\n      // .addCase(userSendMessage.fulfilled, (state, action) => {\r\n      //   const { sender, recipient } = action.payload;\r\n      //   const conversationId = sender.id < recipient.id ? `${sender.id}-${recipient.id}` : `${recipient.id}-${sender.id}`;\r\n      //   if (!state.conversations[conversationId]) {\r\n      //     state.conversations[conversationId] = [];\r\n      //   }\r\n      //   state.conversations[conversationId].push(action.payload);\r\n\r\n      //   // Update the connections list with the new message\r\n      //   const connectionIndex = state.connections.findIndex(conn => conn.user.id === recipient.id);\r\n      //   if (connectionIndex !== -1) {\r\n      //     state.connections[connectionIndex].lastMessage = action.payload;\r\n      //     // Move this connection to the top of the list\r\n      //     const [updatedConnection] = state.connections.splice(connectionIndex, 1);\r\n      //     state.connections.unshift(updatedConnection);\r\n      //   }\r\n      // })\r\n      .addCase(markMessagesAsRead.fulfilled, (state, action) => {\r\n        const messageIds = action.payload;\r\n        Object.values(state.conversations).forEach((conversation) => {\r\n          conversation.forEach((message: Message) => {\r\n            // Added type annotation\r\n            if (messageIds.includes(message.id)) {\r\n              message.isRead = true;\r\n            }\r\n          });\r\n        });\r\n      })\r\n      .addCase(getUnreadMessageCount.fulfilled, (state, action) => {\r\n        state.unreadCount = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\n// Export the actions\r\nexport const {\r\n  resetUnreadCount,\r\n  updateMessageStatus,\r\n  addMessage,\r\n  setTypingStatus,\r\n  setCurrentUserId,\r\n  updateUnreadCount,\r\n} = userMessageSlice.actions;\r\n\r\nexport const selectUnreadCount = (state: RootState) =>\r\n  state.messages.unreadCount;\r\n\r\nexport default userMessageSlice.reducer;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchConversationsApi,\r\n  fetchMessagesApi,\r\n  sendMessageApi,\r\n} from \"../../api/recruiterApi\";\r\nimport { Conversation, Message } from \"../../types/recruiterMessageType\";\r\n\r\ninterface MessageState {\r\n  RecruiterConversations: Conversation[];\r\n  RecruiterMessages: { [conversationId: string]: Message[] };\r\n  typingStatus: { [conversationId: string]: { [userId: string]: boolean } };\r\n  onlineStatus: { [userId: string]: boolean };\r\n  recruiterLoading: boolean;\r\n  recruiterError: string | null;\r\n  currentRecruiterId: string | null;\r\n  messageSending: boolean;\r\n}\r\n\r\nconst initialState: MessageState = {\r\n  RecruiterConversations: [],\r\n  RecruiterMessages: {},\r\n  typingStatus: {},\r\n  onlineStatus: {},\r\n  recruiterLoading: false,\r\n  recruiterError: null,\r\n  currentRecruiterId: null,\r\n  messageSending: false,\r\n};\r\n\r\nexport const fetchConversations = createAsyncThunk(\r\n  \"messages/fetchConversations\",\r\n  async (recruiterId: string, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchConversationsApi(recruiterId);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data || \"An error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchMessages = createAsyncThunk(\r\n  \"messages/fetchMessages\",\r\n  async (conversationId: string, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchMessagesApi(conversationId);\r\n      return { conversationId, messages: response.data };\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data || \"An error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const recruiterSendMessage = createAsyncThunk(\r\n  \"messages/sendMessage\",\r\n  async (\r\n    { conversationId, content }: { conversationId: string; content: string },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const message = await sendMessageApi(conversationId, content);\r\n      if (!message || typeof message !== \"object\" || !(\"id\" in message)) {\r\n        throw new Error(\"Invalid message structure received from API\");\r\n      }\r\n      return { conversationId, message };\r\n    } catch (error: any) {\r\n      console.error(\"Error in sendMessage thunk:\", error);\r\n      return rejectWithValue(error.message || \"An error occurred\");\r\n    }\r\n  }\r\n);\r\n\r\nconst RecruitermessageSlice = createSlice({\r\n  name: \"RecruiterMessages\",\r\n  initialState,\r\n  reducers: {\r\n    addRecruiterMessage: (state, action: PayloadAction<Message>) => {\r\n      const { conversationId, id } = action.payload;\r\n      if (!state.RecruiterMessages[conversationId]) {\r\n        state.RecruiterMessages[conversationId] = [];\r\n      }\r\n      // Check if message with the same id already exists\r\n      if (!state.RecruiterMessages[conversationId].some(msg => msg.id === id)) {\r\n        state.RecruiterMessages[conversationId].push(action.payload);\r\n      }\r\n\r\n      // Increment unread count if the message is not from the current recruiter\r\n      const conversation = state.RecruiterConversations.find(\r\n        (c) => c.id === conversationId\r\n      );\r\n      if (\r\n        conversation &&\r\n        action.payload.senderId !== state.currentRecruiterId\r\n      ) {\r\n        conversation.unreadCount = (conversation.unreadCount || 0) + 1;\r\n      }\r\n    },\r\n    setRecruiterTypingStatus: (\r\n      state,\r\n      action: PayloadAction<{\r\n        userId: string;\r\n        conversationId: string;\r\n        isTyping: boolean;\r\n      }>\r\n    ) => {\r\n      const { userId, conversationId, isTyping } = action.payload;\r\n      if (!state.typingStatus[conversationId]) {\r\n        state.typingStatus[conversationId] = {};\r\n      }\r\n      state.typingStatus[conversationId][userId] = isTyping;\r\n    },\r\n    markRecruiterMessageAsRead: (\r\n      state,\r\n      action: PayloadAction<{ messageId: string; conversationId: string }>\r\n    ) => {\r\n      const { messageId, conversationId } = action.payload;\r\n      const conversation = state.RecruiterConversations.find(\r\n        (c) => c.id === conversationId\r\n      );\r\n      if (conversation) {\r\n        conversation.lastMessageRead = true;\r\n        conversation.unreadCount = 0; // Reset unread count when marking as read\r\n      }\r\n      const message = state.RecruiterMessages[conversationId]?.find(\r\n        (m) => m.id === messageId\r\n      );\r\n      if (message) {\r\n        message.isRead = true;\r\n        message.locallyRead = true;\r\n      }\r\n    },\r\n    setRecruiterOnlineStatus: (\r\n      state,\r\n      action: PayloadAction<{ userId: string; online: boolean }>\r\n    ) => {\r\n      const { userId, online } = action.payload;\r\n      state.onlineStatus[userId] = online;\r\n    },\r\n    updateRecruiterConversation: (\r\n      state,\r\n      action: PayloadAction<Partial<Conversation>>\r\n    ) => {\r\n      const index = state.RecruiterConversations.findIndex(\r\n        (c) => c.id === action.payload.id\r\n      );\r\n      if (index !== -1) {\r\n        state.RecruiterConversations[index] = {\r\n          ...state.RecruiterConversations[index],\r\n          ...action.payload,\r\n        };\r\n      }\r\n    },\r\n    addNewRecruiterConversation: (\r\n      state,\r\n      action: PayloadAction<Conversation>\r\n    ) => {\r\n      state.RecruiterConversations.push(action.payload);\r\n    },\r\n    markAllMessagesAsLocallyRead: (state, action: PayloadAction<string>) => {\r\n      const conversationId = action.payload;\r\n      if (state.RecruiterMessages[conversationId]) {\r\n        state.RecruiterMessages[conversationId] = state.RecruiterMessages[\r\n          conversationId\r\n        ].map((message) => ({\r\n          ...message,\r\n          locallyRead: true,\r\n        }));\r\n      }\r\n      const conversation = state.RecruiterConversations.find(\r\n        (c) => c.id === conversationId\r\n      );\r\n      if (conversation) {\r\n        conversation.unreadCount = 0;\r\n      }\r\n    },\r\n    setCurrentRecruiterId: (state, action: PayloadAction<string>) => {\r\n      state.currentRecruiterId = action.payload;\r\n    },\r\n    setMessageSending: (state, action: PayloadAction<boolean>) => {\r\n      state.messageSending = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchConversations.pending, (state) => {\r\n        state.recruiterLoading = true;\r\n        state.recruiterError = null;\r\n      })\r\n      .addCase(\r\n        fetchConversations.fulfilled,\r\n        (state, action: PayloadAction<Conversation[]>) => {\r\n          state.recruiterLoading = false;\r\n          state.RecruiterConversations = action.payload;\r\n        }\r\n      )\r\n      .addCase(fetchConversations.rejected, (state, action) => {\r\n        state.recruiterLoading = false;\r\n        state.recruiterError =\r\n          (action.payload as string) || \"An error occurred\";\r\n      })\r\n      .addCase(fetchMessages.pending, (state) => {\r\n        state.recruiterLoading = true;\r\n        state.recruiterError = null;\r\n      })\r\n      .addCase(\r\n        fetchMessages.fulfilled,\r\n        (\r\n          state,\r\n          action: PayloadAction<{ conversationId: string; messages: Message[] }>\r\n        ) => {\r\n          state.recruiterLoading = false;\r\n          state.RecruiterMessages[action.payload.conversationId] =\r\n            action.payload.messages || [];\r\n        }\r\n      )\r\n      .addCase(fetchMessages.rejected, (state, action) => {\r\n        state.recruiterLoading = false;\r\n        state.recruiterError =\r\n          (action.payload as string) || \"An error occurred\";\r\n      })\r\n      .addCase(recruiterSendMessage.pending, (state) => {\r\n        state.recruiterLoading = true;\r\n        state.recruiterError = null;\r\n      })\r\n      .addCase(\r\n        recruiterSendMessage.fulfilled,\r\n        (\r\n          state,\r\n          action: PayloadAction<{ conversationId: string; message: Message }>\r\n        ) => {\r\n          state.recruiterLoading = false;\r\n          const { conversationId, message } = action.payload;\r\n          if (!state.RecruiterMessages[conversationId]) {\r\n            state.RecruiterMessages[conversationId] = [];\r\n          }\r\n          // Only add the message if it doesn't already exist\r\n          if (\r\n            !state.RecruiterMessages[conversationId].some(\r\n              (m) => m.id === message.id\r\n            )\r\n          ) {\r\n            state.RecruiterMessages[conversationId] = [\r\n              ...state.RecruiterMessages[conversationId],\r\n              message,\r\n            ];\r\n          }\r\n\r\n          // Update the last message in the conversation list\r\n          const conversationIndex = state.RecruiterConversations.findIndex(\r\n            (conv) => conv.id === conversationId\r\n          );\r\n          if (conversationIndex !== -1) {\r\n            state.RecruiterConversations = state.RecruiterConversations.map(\r\n              (conv, index) =>\r\n                index === conversationIndex\r\n                  ? {\r\n                      ...conv,\r\n                      lastMessage: message.content,\r\n                      lastMessageTimestamp: message.timestamp,\r\n                    }\r\n                  : conv\r\n            );\r\n          }\r\n        }\r\n      )\r\n      .addCase(recruiterSendMessage.rejected, (state, action) => {\r\n        state.recruiterLoading = false;\r\n        state.recruiterError =\r\n          (action.payload as string) || \"An error occurred\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  addRecruiterMessage,\r\n  setRecruiterTypingStatus,\r\n  markRecruiterMessageAsRead,\r\n  markAllMessagesAsLocallyRead,\r\n  setRecruiterOnlineStatus,\r\n  updateRecruiterConversation,\r\n  addNewRecruiterConversation,\r\n  setCurrentRecruiterId,\r\n  setMessageSending,\r\n} = RecruitermessageSlice.actions;\r\n\r\nexport default RecruitermessageSlice.reducer;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport {\n  fetchUserConversationsApi,\n  fetchUserMessagesApi,\n  sendUserMessageApi,\n} from \"../../api/authapi\";\nimport { URConversation, URMessage } from \"../../types/userRecruiterMessage\";\n\ninterface UserRecruiterMessageState {\n  conversations: URConversation[];\n  messages: { [conversationId: string]: URMessage[] };\n  typingStatus: { [conversationId: string]: { [userId: string]: boolean } };\n  loading: boolean;\n  error: string | null;\n  onlineStatus: { [userId: string]: boolean };\n  currentUserId: string;\n  totalUnreadCount: number;\n  messageSending: boolean;\n}\n\nconst initialState: UserRecruiterMessageState = {\n  conversations: [],\n  messages: {},\n  typingStatus: {},\n  loading: false,\n  error: null,\n  onlineStatus: {},\n  currentUserId: \"\",\n  totalUnreadCount: 0,\n  messageSending: false,\n};\n\nexport const fetchUserRecruiterConversations = createAsyncThunk(\n  \"userRecruiterMessages/fetchConversations\",\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      const response = await fetchUserConversationsApi(userId);\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data || \"An error occurred\");\n    }\n  }\n);\n\nexport const fetchUserRecruiterMessages = createAsyncThunk(\n  \"userRecruiterMessages/fetchMessages\",\n  async (conversationId: string, { rejectWithValue }) => {\n    try {\n      const response = await fetchUserMessagesApi(conversationId);\n      return { conversationId, messages: response };\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data || \"An error occurred\");\n    }\n  }\n);\n\nexport const sendUserRecruiterMessage = createAsyncThunk(\n  \"userRecruiterMessages/sendMessage\",\n  async (\n    {\n      conversationId,\n      content,\n      senderId,\n    }: { conversationId: string; content: string; senderId: string },\n    { rejectWithValue }\n  ) => {\n    try {\n      const message = await sendUserMessageApi(\n        conversationId,\n        content,\n        senderId\n      );\n  \n      return { conversationId, message };\n    } catch (error: any) {\n      return rejectWithValue(error.message || \"An error occurred\");\n    }\n  }\n);\n\nconst userRecruiterMessageSlice = createSlice({\n  name: \"userRecruiterMessages\",\n  initialState,\n  reducers: {\n    addUserRecruiterMessage: (state, action: PayloadAction<URMessage>) => {\n      const { conversationId, id } = action.payload;\n      if (!state.messages[conversationId]) {\n        state.messages[conversationId] = [];\n      }\n      // Check if message with the same id already exists\n      if (!state.messages[conversationId].some(msg => msg.id === id)) {\n        state.messages[conversationId].push(action.payload);\n      }\n\n      // Increment unread count if the message is not from the current user\n      const conversation = state.conversations.find(\n        (c) => c.id === conversationId\n      );\n      if (conversation && action.payload.senderId !== state.currentUserId) {\n        conversation.unreadCount = (conversation.unreadCount || 0) + 1;\n      }\n    },\n    setUserRecruiterTypingStatus: (\n      state,\n      action: PayloadAction<{\n        userId: string;\n        conversationId: string;\n        isTyping: boolean;\n      }>\n    ) => {\n      const { userId, conversationId, isTyping } = action.payload;\n      if (!state.typingStatus[conversationId]) {\n        state.typingStatus[conversationId] = {};\n      }\n      // Only set typing status for the other user, not the current user\n      if (userId !== state.currentUserId) {\n        state.typingStatus[conversationId][userId] = isTyping;\n      }\n    },\n    markUserRecruiterMessageAsRead: (\n      state,\n      action: PayloadAction<{ messageId: string; conversationId: string }>\n    ) => {\n      const { messageId, conversationId } = action.payload;\n      const conversation = state.conversations.find(\n        (c) => c.id === conversationId\n      );\n      if (conversation) {\n        conversation.lastMessageRead = true;\n        conversation.unreadCount = 0; // Reset unread count when marking as read\n      }\n      const message = state.messages[conversationId]?.find(\n        (m) => m.id === messageId\n      );\n      if (message) {\n        message.isRead = true;\n        message.locallyRead = true;\n      }\n    },\n    setUserOnlineStatus: (\n      state,\n      action: PayloadAction<{ userId: string; online: boolean }>\n    ) => {\n      const { userId, online } = action.payload;\n      state.onlineStatus[userId] = online;\n    },\n    updateConversation: (\n      state,\n      action: PayloadAction<Partial<URConversation>>\n    ) => {\n      const index = state.conversations.findIndex(\n        (c) => c.id === action.payload.id\n      );\n      if (index !== -1) {\n        state.conversations[index] = {\n          ...state.conversations[index],\n          ...action.payload,\n        };\n      }\n    },\n    addNewConversation: (state, action: PayloadAction<URConversation>) => {\n      state.conversations.push(action.payload);\n    },\n    incrementUnreadCount: (state, action: PayloadAction<string>) => {\n      const conversation = state.conversations.find(\n        (c) => c.id === action.payload\n      );\n      if (conversation) {\n        conversation.unreadCount += 1;\n      }\n    },\n    markAllMessagesAsLocallyRead: (state, action: PayloadAction<string>) => {\n      const conversationId = action.payload;\n      if (state.messages[conversationId]) {\n        state.messages[conversationId] = state.messages[conversationId].map(\n          (message) => ({\n            ...message,\n            locallyRead: true,\n          })\n        );\n      }\n      const conversation = state.conversations.find(\n        (c) => c.id === conversationId\n      );\n      if (conversation) {\n        conversation.unreadCount = 0;\n      }\n    },\n    updateTotalUnreadCount: (state) => {\n      state.totalUnreadCount = state.conversations.reduce(\n        (sum, conversation) => sum + (conversation.unreadCount || 0),\n        0\n      );\n    },\n    setMessageSending: (state, action: PayloadAction<boolean>) => {\n      state.messageSending = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUserRecruiterConversations.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchUserRecruiterConversations.fulfilled,\n        (state, action: PayloadAction<URConversation[]>) => {\n          state.loading = false;\n          state.conversations = action.payload;\n        }\n      )\n      .addCase(fetchUserRecruiterConversations.rejected, (state, action) => {\n        state.loading = false;\n        state.error = (action.payload as string) || \"An error occurred\";\n      })\n      .addCase(fetchUserRecruiterMessages.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        fetchUserRecruiterMessages.fulfilled,\n        (\n          state,\n          action: PayloadAction<{\n            conversationId: string;\n            messages: URMessage[];\n          }>\n        ) => {\n          state.loading = false;\n          state.messages[action.payload.conversationId] =\n            action.payload.messages;\n        }\n      )\n      .addCase(fetchUserRecruiterMessages.rejected, (state, action) => {\n        state.loading = false;\n        state.error = (action.payload as string) || \"An error occurred\";\n      })\n      .addCase(sendUserRecruiterMessage.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(\n        sendUserRecruiterMessage.fulfilled,\n        (\n          state,\n          action: PayloadAction<{ conversationId: string; message: URMessage }>\n        ) => {\n          state.loading = false;\n          const { conversationId, message } = action.payload;\n          if (!state.messages[conversationId]) {\n            state.messages[conversationId] = [];\n          }\n          state.messages[conversationId].push(message);\n\n          const conversationIndex = state.conversations.findIndex(\n            (conv) => conv.id === conversationId\n          );\n          if (conversationIndex !== -1) {\n            state.conversations[conversationIndex] = {\n              ...state.conversations[conversationIndex],\n              lastMessage: message.content,\n              lastMessageTimestamp: message.timestamp,\n            };\n          }\n        }\n      )\n      .addCase(sendUserRecruiterMessage.rejected, (state, action) => {\n        state.loading = false;\n        state.error = (action.payload as string) || \"An error occurred\";\n      });\n  },\n});\n\nexport const {\n  addUserRecruiterMessage,\n  setUserRecruiterTypingStatus,\n  markUserRecruiterMessageAsRead,\n  markAllMessagesAsLocallyRead,\n  setUserOnlineStatus,\n  updateConversation,\n  addNewConversation,\n  incrementUnreadCount,\n  updateTotalUnreadCount,\n  setMessageSending,\n} = userRecruiterMessageSlice.actions;\n\nexport const selectRecruiterUnreadCount = (state: RootState): number => {\n  return state.userRecruiterMessages.totalUnreadCount;\n};\n\nexport default userRecruiterMessageSlice.reducer;\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { fetchSubscriptionsApi, cancelSubscriptionApi } from '../../api/adminApi';\r\nimport { Subscription } from '../../types/subscription';\r\n\r\ninterface SubscriptionState {\r\n  subscriptions: Subscription[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\nconst initialState: SubscriptionState = {\r\n  subscriptions: [], // Initialize as an empty array\r\n  loading: false,\r\n  error: null,\r\n  totalPages: 1,\r\n  currentPage: 1,\r\n};\r\n\r\nexport const fetchSubscriptions = createAsyncThunk(\r\n  'subscriptions/fetchSubscriptions',\r\n  async ({ page, limit }: { page: number; limit: number }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchSubscriptionsApi(page, limit);\r\n      return response;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.message || 'Failed to fetch subscriptions');\r\n    }\r\n  }\r\n);\r\n\r\nexport const cancelSubscription = createAsyncThunk(\r\n  'subscriptions/cancelSubscription',\r\n  async (subscriptionId: string, { rejectWithValue }) => {\r\n    try {\r\n      await cancelSubscriptionApi(subscriptionId);\r\n      return subscriptionId;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.message || 'Failed to cancel subscription');\r\n    }\r\n  }\r\n);\r\n\r\nconst subscriptionSlice = createSlice({\r\n  name: 'subscriptions',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchSubscriptions.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchSubscriptions.fulfilled, (state, action: PayloadAction<{ subscriptions: Subscription[]; totalPages: number; currentPage: number }>) => {\r\n        state.loading = false;\r\n        state.subscriptions = action.payload.subscriptions;\r\n        state.totalPages = action.payload.totalPages;\r\n        state.currentPage = action.payload.currentPage;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchSubscriptions.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false;\r\n        state.error = action.payload || 'Failed to fetch subscriptions';\r\n      })\r\n      .addCase(cancelSubscription.fulfilled, (state, action: PayloadAction<string>) => {\r\n        state.subscriptions = state.subscriptions.filter(\r\n          (subscription) => subscription.id !== action.payload\r\n        );\r\n      });\r\n  },\r\n});\r\n\r\nexport default subscriptionSlice.reducer;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { fetchUserPostsApi, blockUserPostApi } from '../../api/adminApi';\r\n\r\ninterface UserPost {\r\n  id: string;\r\n  userName: string;\r\n  userEmail: string;\r\n  content: string;\r\n  imageUrl?: string;\r\n  videoUrl?: string;\r\n  isBlocked: boolean;\r\n}\r\n\r\ninterface UserPostState {\r\n  userPosts: UserPost[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\nconst initialState: UserPostState = {\r\n  userPosts: [],\r\n  loading: false,\r\n  error: null,\r\n  totalPages: 1,\r\n  currentPage: 1,\r\n};\r\n\r\nexport const fetchUserPosts = createAsyncThunk(\r\n  'userPosts/fetchUserPosts',\r\n  async ({ page, limit }: { page: number; limit: number }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchUserPostsApi(page, limit);\r\n      return response;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.message || 'Failed to fetch user posts');\r\n    }\r\n  }\r\n);\r\n\r\nexport const blockUserPost = createAsyncThunk(\r\n  'userPosts/blockUserPost',\r\n  async (postId: string, { rejectWithValue }) => {\r\n    try {\r\n      await blockUserPostApi(postId);\r\n      return postId;\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.message || 'Failed to block user post');\r\n    }\r\n  }\r\n);\r\n\r\nconst userPostSlice = createSlice({\r\n  name: 'userPosts',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUserPosts.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchUserPosts.fulfilled, (state, action: PayloadAction<{ userPosts: UserPost[]; totalPages: number; currentPage: number }>) => {\r\n        state.loading = false;\r\n        state.userPosts = action.payload.userPosts;\r\n        state.totalPages = action.payload.totalPages;\r\n        state.currentPage = action.payload.currentPage;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchUserPosts.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false;\r\n        state.error = action.payload || 'Failed to fetch user posts';\r\n      })\r\n      .addCase(blockUserPost.fulfilled, (state, action: PayloadAction<string>) => {\r\n        const post = state.userPosts.find(post => post.id === action.payload);\r\n        if (post) {\r\n          post.isBlocked = !post.isBlocked;\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport default userPostSlice.reducer;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { searchUsersAndJobsApi } from '../../api/authapi';\nimport { User } from '../../types/auth';\nimport { BasicJobPost } from '../../types/jobPostTypes';\n\ninterface UserSearchState {\n  users: User[];\n  jobPosts: BasicJobPost[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: UserSearchState = {\n  users: [],\n  jobPosts: [],\n  loading: false,\n  error: null,\n};\n\nexport const searchUsersAndJobs = createAsyncThunk(\n  'userSearch/searchUsersAndJobs',\n  async ({ query, userId }: { query: string; userId: string }, { rejectWithValue }) => {\n    try {\n      const response = await searchUsersAndJobsApi(query, userId);\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst userSearchSlice = createSlice({\n  name: 'userSearch',\n  initialState,\n  reducers: {\n    clearSearch: (state) => {\n      state.users = [];\n      state.jobPosts = [];\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(searchUsersAndJobs.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(searchUsersAndJobs.fulfilled, (state, action) => {\n        state.loading = false;\n        state.users = action.payload.users;\n        state.jobPosts = action.payload.jobPosts;\n      })\n      .addCase(searchUsersAndJobs.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport const { clearSearch } = userSearchSlice.actions;\nexport default userSearchSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { searchUsers } from '../../api/recruiterApi';\r\nimport { User } from '../../types/auth';\r\n\r\ninterface RecruiterSearchState {\r\n  users: User[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: RecruiterSearchState = {\r\n  users: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const searchUsersAndJobs = createAsyncThunk(\r\n  'recruiterSearch/searchUsersAndJobs',\r\n  async ({ query, userId }: { query: string; userId: string }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await searchUsers(query);\r\n      return response; \r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message || 'An error occurred during the search');\r\n    }\r\n  }\r\n);\r\n\r\nconst recruiterSearchSlice = createSlice({\r\n  name: 'recruiterSearch',\r\n  initialState,\r\n  reducers: {\r\n    clearSearch: (state) => {\r\n      state.users = [];\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(searchUsersAndJobs.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(searchUsersAndJobs.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.users = action.payload; \r\n      })\r\n      .addCase(searchUsersAndJobs.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearSearch } = recruiterSearchSlice.actions;\r\n\r\nexport default recruiterSearchSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { ResumeData } from '../../types/resumeTypes';\r\n\r\ninterface ResumeState {\r\n  resumeData: ResumeData | null;\r\n  generatedResumeLink: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: ResumeState = {\r\n  resumeData: null,\r\n  generatedResumeLink: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst resumeSlice = createSlice({\r\n  name: 'resume',\r\n  initialState,\r\n  reducers: {\r\n    setResumeData: (state, action: PayloadAction<ResumeData>) => {\r\n      state.resumeData = action.payload;\r\n    },\r\n    generateResumeStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    generateResumeSuccess: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.generatedResumeLink = action.payload;\r\n    },\r\n    generateResumeFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearResumeData: (state) => {\r\n      state.resumeData = null;\r\n      state.generatedResumeLink = null;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setResumeData,\r\n  generateResumeStart,\r\n  generateResumeSuccess,\r\n  generateResumeFailure,\r\n  clearResumeData,\r\n} = resumeSlice.actions;\r\n\r\nexport default resumeSlice.reducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  createTransform,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport authReducer from \"./slices/authSlice\";\r\nimport adminReducer from \"./slices/adminSlice\";\r\nimport recruiterReducer from \"./slices/recruiterSlice\";\r\nimport jobPostReducer from \"./slices/jobPostSlice\";\r\nimport contestantReducer from \"./slices/contestantSlice\";\r\nimport postReducer from \"./slices/postSlice\";\r\nimport adminJobPostReducer from \"./slices/adminJobPostSlice\";\r\nimport connectionReducer from \"./slices/connectionSlice\";\r\nimport notificationReducer from \"./slices/notificationSlice\";\r\nimport userMessageReducer from \"./slices/userMessageSlice\";\r\nimport recruiterMessageReducer from \"./slices/recruiterMessageSlice\";\r\nimport userRecruiterMessageReducer from \"./slices/userRecruiterMessageSlice\";\r\nimport subscriptionReducer from \"./slices/adminSubscriptionSlice\";\r\nimport userPostReducer from \"./slices/adminUserPostSlice\";\r\nimport userSearchReducer from './slices/userSearchSlice';\r\nimport recruiterSearchReducer from './slices/recruiterSearchSlice';\r\nimport resumeReducer from './slices/resumeSlice';\r\n\r\nconst ENCRYPTION_KEY = process.env.REACT_APP_ENCRYPTION_KEY || \"fallback-key\";\r\n\r\ninterface EncryptedState {\r\n  encryptedState: string;\r\n}\r\n\r\nconst encryptTransform = createTransform(\r\n  (inboundState, key) => {\r\n    if (key === \"auth\" || key === \"recruiter\") {\r\n      return {\r\n        encryptedState: CryptoJS.AES.encrypt(\r\n          JSON.stringify(inboundState),\r\n          ENCRYPTION_KEY\r\n        ).toString(),\r\n      };\r\n    }\r\n    return inboundState;\r\n  },\r\n  (outboundState, key) => {\r\n    if (\r\n      (key === \"auth\" || key === \"recruiter\") &&\r\n      typeof outboundState === \"object\" &&\r\n      outboundState !== null\r\n    ) {\r\n      const encryptedState = (outboundState as EncryptedState).encryptedState;\r\n      if (typeof encryptedState === \"string\") {\r\n        const decryptedState = CryptoJS.AES.decrypt(\r\n          encryptedState,\r\n          ENCRYPTION_KEY\r\n        ).toString(CryptoJS.enc.Utf8);\r\n        return JSON.parse(decryptedState);\r\n      }\r\n    }\r\n    return outboundState;\r\n  }\r\n);\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"isAuthenticated\", \"user\", \"loading\", \"AuthState\"],\r\n  transforms: [encryptTransform],\r\n};\r\n\r\nconst adminPersistConfig = {\r\n  key: \"admin\",\r\n  storage,\r\n  whitelist: [\r\n    \"isAuthenticatedAdmin\",\r\n    \"dashboardData\",\r\n    \"users\",\r\n    \"loading\",\r\n    \"AdminState\",\r\n    \"name\",\r\n    \"email\",\r\n    \"role\",\r\n  ],\r\n};\r\n\r\nconst recruiterPersistConfig = {\r\n  key: \"recruiter\",\r\n  storage,\r\n  whitelist: [\r\n    \"isAuthenticatedRecruiter\",\r\n    \"isApproved\",\r\n    \"recruiterState\",\r\n    \"loading\",\r\n    \"recruiter\",\r\n  ],\r\n  transforms: [encryptTransform],\r\n};\r\n\r\nconst jobPostPersistConfig = {\r\n  key: \"jobPosts\",\r\n  storage,\r\n  whitelist: [\"posts\", \"loading\", \"selectedPost\", \"JobPostState\"],\r\n};\r\n\r\nconst contestantPersistConfig = {\r\n  key: \"contestants\",\r\n  storage,\r\n  whitelist: [\r\n    \"selectedContestant\",\r\n    \"contestants\",\r\n    \"loading\",\r\n    \"ContestantState\",\r\n  ],\r\n};\r\n\r\nconst postPersistConfig = {\r\n  key: \"posts\",\r\n  storage,\r\n  whitelist: [\"posts\", \"loading\", \"selectedPost\"],\r\n};\r\n\r\nconst adminJobPostPersistConfig = {\r\n  key: \"adminJobPost\",\r\n  storage,\r\n  whitelist: [\"jobPosts\", \"loading\", \"error\"],\r\n};\r\n\r\nconst connectionPersistConfig = {\r\n  key: \"connections\",\r\n  storage,\r\n  whitelist: [\"recommendations\", \"pendingRequests\", \"loading\", \"error\"],\r\n};\r\n\r\nconst notificationPersistConfig = {\r\n  key: \"notifications\",\r\n  storage,\r\n  whitelist: [\"items\", \"unreadCount\", \"seenNotifications\"],\r\n};\r\n\r\nconst messagePersistConfig = {\r\n  key: \"UserMessages\",\r\n  storage,\r\n  whitelist: [\"UserMessages\", \"unreadCount\"],\r\n};\r\n\r\nconst recruiterMessagePersistConfig = {\r\n  key: \"recruiterMessages\",\r\n  storage,\r\n  whitelist: [\"RecruiterConversations\", \"RecruiterMessages\"],\r\n};\r\n\r\nconst persistedAuthReducer = persistReducer(authPersistConfig, authReducer);\r\nconst persistedAdminReducer = persistReducer(adminPersistConfig, adminReducer);\r\nconst persistedRecruiterReducer = persistReducer(\r\n  recruiterPersistConfig,\r\n  recruiterReducer\r\n);\r\nconst persistedJobPostReducer = persistReducer(\r\n  jobPostPersistConfig,\r\n  jobPostReducer\r\n);\r\nconst persistedContestantReducer = persistReducer(\r\n  contestantPersistConfig,\r\n  contestantReducer\r\n);\r\nconst persistedPostReducer = persistReducer(postPersistConfig, postReducer);\r\nconst persistedAdminJobPostReducer = persistReducer(\r\n  adminJobPostPersistConfig,\r\n  adminJobPostReducer\r\n);\r\nconst persistedConnectionReducer = persistReducer(\r\n  connectionPersistConfig,\r\n  connectionReducer\r\n);\r\nconst persistedNotificationReducer = persistReducer(\r\n  notificationPersistConfig,\r\n  notificationReducer\r\n);\r\nconst persistedUserMessageReducer = persistReducer(\r\n  messagePersistConfig,\r\n  userMessageReducer\r\n);\r\nconst persistedRecruiterMessageReducer = persistReducer(\r\n  recruiterMessagePersistConfig,\r\n  recruiterMessageReducer\r\n);\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: persistedAuthReducer,\r\n  admin: persistedAdminReducer,\r\n  recruiter: persistedRecruiterReducer,\r\n  jobPosts: persistedJobPostReducer,\r\n  contestants: persistedContestantReducer,\r\n  posts: persistedPostReducer,\r\n  adminJobPost: persistedAdminJobPostReducer,\r\n  connections: persistedConnectionReducer,\r\n  notifications: persistedNotificationReducer,\r\n  messages: persistedUserMessageReducer,\r\n  recruiterMessages: persistedRecruiterMessageReducer,\r\n  userRecruiterMessages: persistReducer(\r\n    {\r\n      key: \"userRecruiterMessages\",\r\n      storage,\r\n      whitelist: [\"conversations\", \"messages\"],\r\n    },\r\n    userRecruiterMessageReducer\r\n  ),\r\n  subscriptions: subscriptionReducer,\r\n  userPosts: userPostReducer,\r\n  userSearch: userSearchReducer,\r\n  recruiterSearch: recruiterSearchReducer,\r\n  resume: resumeReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n\r\nexport const selectConnections = (state: RootState) => state.connections.connections;\r\n\r\nexport const selectMemoizedConnections = createSelector(\r\n  [selectConnections],\r\n  (connections) => connections\r\n);\r\n","import { io, Socket } from \"socket.io-client\";\r\n\r\nimport store from \"../redux/store\";\r\n\r\nimport { addMessage, setTypingStatus } from \"../redux/slices/userMessageSlice\";\r\n\r\nclass SocketService {\r\n  private socket: Socket | null = null;\r\n  private userId: string | null = null;\r\n  private connected: boolean = false;\r\n\r\n  connect(userId: string) {\r\n\r\n    this.userId = userId;\r\n\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.disconnect();\r\n    }\r\n\r\n    const socketUrl = process.env.REACT_APP_SOCKET_URL ;\r\n\r\n    this.socket = io(socketUrl, {\r\n      path: '/user-socket',\r\n      transports: [\"websocket\"],\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      auth: { userId, userType: 'user' },\r\n    });\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private setupEventListeners() {\r\n    if (!this.socket) return;\r\n\r\n    this.socket.on(\"connect\", () => {\r\n      this.connected = true;\r\n    });\r\n\r\n    this.socket.on(\"connect_error\", (error) => {\r\n      console.error(\"Socket connection error:\", error);\r\n      this.connected = false;\r\n    });\r\n\r\n    this.socket.on(\"disconnect\", (reason) => {\r\n      this.connected = false;\r\n    });\r\n\r\n    this.socket.on(\"newMessage\", (message: any) => {\r\n      store.dispatch(addMessage(message));\r\n    });\r\n\r\n    this.socket.on(\"messageSent\", (message: any) => {\r\n      store.dispatch(addMessage(message));\r\n    });\r\n\r\n    this.socket.on(\"userTyping\", ({ userId, isTyping }: { userId: string; isTyping: boolean }) => {\r\n      store.dispatch(setTypingStatus({ userId, isTyping }));\r\n    });\r\n\r\n    this.socket.on(\"messageError\", (error: any) => {\r\n      console.error(\"Error sending message:\", error);\r\n    });\r\n  }\r\n\r\n  sendMessage(message: { senderId: string, recipientId: string, content: string }) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(\"sendMessage\", message, (response: any) => {\r\n        if (response.error) {\r\n          console.error(\"Error sending message:\", response.error);\r\n        } else {\r\n        }\r\n      });\r\n    } else {\r\n      console.warn(\"SocketService: Socket is not connected. Unable to send message.\");\r\n    }\r\n  }\r\n\r\n  emitTyping(recipientId: string, isTyping: boolean) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(\"typing\", { recipientId, isTyping });\r\n    } else {\r\n      console.warn(\"SocketService: Socket is not connected. Unable to emit typing status.\");\r\n    }\r\n  }\r\n\r\n  emit(event: string, data: any) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(event, data);\r\n    } else {\r\n      console.warn(`SocketService: Cannot emit ${event}. Socket is not connected.`);\r\n    }\r\n  }\r\n\r\n  on(event: string, callback: (...args: any[]) => void): () => void {\r\n    if (this.socket) {\r\n      this.socket.on(event, callback);\r\n      return () => this.socket?.off(event, callback);\r\n    }\r\n    return () => {};\r\n  }\r\n\r\n  getConnectionStatus(): boolean {\r\n    return this.connected;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n    }\r\n    this.connected = false;\r\n  }\r\n\r\n  markNotificationAsRead(notificationId: string) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(\"markNotificationAsRead\", notificationId);\r\n    } else {\r\n      console.warn(\"SocketService: Socket is not connected. Unable to mark notification as read.\");\r\n    }\r\n  }\r\n\r\n  emitUserCallOffer(recipientId: string, offer: string) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(\"userCallOffer\", { recipientId, offer });\r\n    }\r\n  }\r\n\r\n  emitUserCallAnswer(callerId: string, answer: string) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(\"userCallAnswer\", { callerId, answer });\r\n    }\r\n  }\r\n\r\n  emitUserEndCall(recipientId: string) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(\"userEndCall\", { recipientId });\r\n    }\r\n  }\r\n\r\n  onIncomingCall(callback: (data: { callerId: string, offer: string }) => void): () => void {\r\n    if (this.socket) {\r\n      this.socket.on(\"incomingCall\", callback);\r\n      return () => this.socket?.off(\"incomingCall\", callback);\r\n    }\r\n    return () => {};\r\n  }\r\n\r\n  emitCallAnswer(callerId: string, answer: string) {\r\n    if (this.socket && this.connected) {\r\n      this.socket.emit(\"callAnswer\", { callerId, answer });\r\n    }\r\n  }\r\n\r\n  onCallRejected(callback: () => void): () => void {\r\n    if (this.socket) {\r\n      this.socket.on(\"callRejected\", callback);\r\n      return () => this.socket?.off(\"callRejected\", callback);\r\n    }\r\n    return () => {};\r\n  }\r\n}\r\n\r\nexport const socketService = new SocketService();\r\n","import React, { createContext, useState, useContext, useCallback, ReactNode } from 'react';\r\nimport { socketService } from '../services/socketService';\r\n\r\ninterface CallContextType {\r\n  isIncomingCall: boolean;\r\n  incomingCallData: { callerId: string; offer: string } | null;\r\n  isCallActive: boolean;\r\n  handleIncomingCall: (data: { callerId: string; offer: string }) => void;\r\n  acceptCall: () => void;\r\n  rejectCall: () => void;\r\n  setupVideoCall: (recipientId: string) => void;\r\n  endCall: () => void;\r\n}\r\n\r\nconst CallContext = createContext<CallContextType | undefined>(undefined);\r\n\r\ninterface CallProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CallProvider: React.FC<CallProviderProps> = ({ children }) => {\r\n  const [isIncomingCall, setIsIncomingCall] = useState(false);\r\n  const [incomingCallData, setIncomingCallData] = useState<{ callerId: string; offer: string } | null>(null);\r\n  const [isCallActive, setIsCallActive] = useState(false);\r\n\r\n  const handleIncomingCall = useCallback((data: { callerId: string; offer: string }) => {\r\n    console.log(\"Incoming call from:\", data.callerId);\r\n    setIsIncomingCall(true);\r\n    setIncomingCallData(data);\r\n  }, []);\r\n\r\n  const acceptCall = useCallback(() => {\r\n    console.log(\"Call accepted in CallContext\");\r\n    setIsIncomingCall(false);\r\n    setIsCallActive(true);\r\n    console.log(\"isCallActive set to true\");\r\n  }, []);\r\n\r\n  const rejectCall = useCallback(() => {\r\n    if (incomingCallData) {\r\n      socketService.emit(\"rejectCall\", { callerId: incomingCallData.callerId });\r\n      setIsIncomingCall(false);\r\n      setIncomingCallData(null);\r\n    }\r\n  }, [incomingCallData]);\r\n\r\n  const setupVideoCall = useCallback((recipientId: string) => {\r\n    console.log(`Setting up video call with ${recipientId}`);\r\n    setIsCallActive(true);\r\n  }, []);\r\n\r\n  const endCall = useCallback(() => {\r\n    console.log(\"Call ended\");\r\n    setIsCallActive(false);\r\n    setIncomingCallData(null);\r\n  }, []);\r\n\r\n  return (\r\n    <CallContext.Provider value={{ \r\n      isIncomingCall, \r\n      incomingCallData, \r\n      isCallActive,\r\n      handleIncomingCall, \r\n      acceptCall, \r\n      rejectCall,\r\n      setupVideoCall,\r\n      endCall\r\n    }}>\r\n      {children}\r\n    </CallContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCall = () => {\r\n  const context = useContext(CallContext);\r\n  if (context === undefined) {\r\n    throw new Error('useCall must be used within a CallProvider');\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, googleLogin } from '../../redux/slices/authSlice';\nimport { AppDispatch, RootState } from '../../redux/store';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin, CredentialResponse } from '@react-oauth/google';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState<{ email?: string; password?: string }>({});\n\n  const dispatch = useDispatch<AppDispatch>();\n  const { loading, error, isAuthenticated } = useSelector((state: RootState) => state.auth);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/dashboard');\n    }\n  }, [isAuthenticated, navigate]);\n\n  const validateForm = () => {\n    let formErrors: { email?: string; password?: string } = {};\n\n    if (!/^[a-zA-Z0-9._-]+@[a-z]+\\.[a-z]{2,}$/.test(email)) {\n      formErrors.email = 'Please enter a valid email address.';\n    }\n\n    if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password)) {\n      formErrors.password =\n        'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.';\n    }\n\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validateForm()) {\n      dispatch(login({ email, password }));\n    }\n  };\n\n  const handleGoogleSuccess = (response: CredentialResponse) => {\n    if (response.credential) {\n      dispatch(googleLogin(response.credential));\n    } else {\n      console.error('Google login response does not contain a credential');\n    }\n  };\n\n  const handleGoogleError = () => {\n    console.error('Google login error occurred');\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID || 'YOUR_GOOGLE_CLIENT_ID'}>\n      <div className=\"flex min-h-screen items-center justify-center bg-gray-100 p-4\">\n        <div className=\"w-full max-w-4xl overflow-hidden rounded-lg bg-white shadow-xl\">\n          <div className=\"flex flex-col md:flex-row\">\n            <div className=\"bg-purple-600 p-12 md:w-2/5\">\n              <div className=\"text-8xl font-bold text-white opacity-50\">4</div>\n              <div className=\"mt-4 text-4xl font-semibold text-white\">JOBS</div>\n            </div>\n            <div className=\"p-12 md:w-3/5\">\n              <h2 className=\"mb-8 text-3xl font-semibold text-purple-600\">Log In</h2>\n              <form onSubmit={handleSubmit}>\n                <div className=\"mb-6\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Username\"\n                    className=\"w-full rounded-md border border-gray-300 bg-gray-50 px-4 py-3 text-base focus:border-purple-500 focus:outline-none\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                  />\n                  {errors.email && <p className=\"mt-2 text-sm text-red-500\">{errors.email}</p>}\n                </div>\n                <div className=\"mb-8\">\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"w-full rounded-md border border-gray-300 bg-gray-50 px-4 py-3 text-base focus:border-purple-500 focus:outline-none\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                  />\n                  {errors.password && <p className=\"mt-2 text-sm text-red-500\">{errors.password}</p>}\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full rounded-md bg-purple-600 py-3 text-lg font-semibold text-white transition duration-200 hover:bg-purple-700 focus:outline-none\"\n                  disabled={loading}\n                >\n                  {loading ? 'Logging in...' : 'Submit'}\n                </button>\n                {error && <p className=\"mt-3 text-sm text-red-500\">{error}</p>}\n                <Link to=\"/forgot-password\" className=\"block text-sm text-purple-600 hover:underline mt-2\">\n                  Forgot Password?\n                </Link>\n              </form>\n              <p className=\"mt-6 text-base\">\n                Don't have an account? <Link to=\"/signup\" className=\"text-purple-600 hover:underline\">Sign up</Link>\n              </p>\n              <div className=\"mt-8\">\n                <p className=\"mb-3 text-base text-gray-600\">Or log in with</p>\n                <GoogleLogin\n                  onSuccess={handleGoogleSuccess}\n                  onError={handleGoogleError}\n                  type=\"standard\"\n                  theme=\"outline\"\n                  size=\"large\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signup } from '../../redux/slices/authSlice';\r\nimport { AppDispatch, RootState } from '../../redux/store';\r\n\r\ninterface SignupFormProps {\r\n  onSignupSuccess: (email: string) => void;\r\n}\r\n\r\nconst SignupForm: React.FC<SignupFormProps> = ({ onSignupSuccess }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\r\n  const [signupError, setSignupError] = useState(''); \r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { loading } = useSelector((state: RootState) => state.auth);\r\n\r\n  const validateField = (fieldName: string, value: string) => {\r\n    let error = '';\r\n    switch (fieldName) {\r\n      case 'name':\r\n        if (!/^[^\\s][a-zA-Z]{3,}(?:\\s[a-zA-Z]*)?$/.test(value)) {\r\n          error = 'Name must be at least 3 characters long and can include letters and spaces.';\r\n        }\r\n        break;\r\n      case 'email':\r\n        if (!/^[a-zA-Z0-9._-]+@[a-z]+\\.[a-z]{2,}$/.test(value)) {\r\n          error = 'Please enter a valid email address.';\r\n        }\r\n        break;\r\n      case 'password':\r\n        if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(value)) {\r\n          error = 'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.';\r\n        }\r\n        break;\r\n      case 'confirmPassword':\r\n        if (value !== password) {\r\n          error = 'Passwords do not match.';\r\n        }\r\n        break;\r\n    }\r\n    setErrors((prev) => ({ ...prev, [fieldName]: error }));\r\n  };\r\n\r\n  const handleSignup = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    validateField('name', name);\r\n    validateField('email', email);\r\n    validateField('password', password);\r\n    validateField('confirmPassword', confirmPassword);\r\n\r\n    if (Object.values(errors).every((error) => error === '') && password === confirmPassword) {\r\n      try {\r\n        await dispatch(signup({ name, email, password })).unwrap();\r\n        onSignupSuccess(email);\r\n      } catch (error: any) {\r\n        setSignupError(error.message || 'Signup failed'); \r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSignup} className=\"space-y-6\">\r\n      <div>\r\n        <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n            validateField('name', e.target.value);\r\n          }}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n          required\r\n        />\r\n        {errors.name && <span className=\"mt-1 text-xs text-red-500\">{errors.name}</span>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n            validateField('email', e.target.value);\r\n          }}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n          required\r\n        />\r\n        {errors.email && <span className=\"mt-1 text-xs text-red-500\">{errors.email}</span>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n            validateField('password', e.target.value);\r\n          }}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n          required\r\n        />\r\n        {errors.password && <span className=\"mt-1 text-xs text-red-500\">{errors.password}</span>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\r\n        <input\r\n          id=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => {\r\n            setConfirmPassword(e.target.value);\r\n            validateField('confirmPassword', e.target.value);\r\n          }}\r\n          className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n          required\r\n        />\r\n        {errors.confirmPassword && <span className=\"mt-1 text-xs text-red-500\">{errors.confirmPassword}</span>}\r\n      </div>\r\n\r\n      {signupError && <div className=\"text-sm text-red-500\">{signupError}</div>}\r\n      \r\n      <button\r\n        type=\"submit\"\r\n        disabled={Object.values(errors).some((error) => error !== '') || password !== confirmPassword || loading}\r\n        className=\"w-full rounded-md bg-purple-600 py-2 text-sm font-semibold text-white transition duration-200 hover:bg-purple-700 focus:outline-none disabled:opacity-50\"\r\n      >\r\n        {loading ? 'Signing Up...' : 'Sign Up'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { verifyOtp } from '../../redux/slices/authSlice';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { sendOtpApi } from '../../api/authapi'; \r\nimport '../../styles/user/OtpVerification.css';\r\n\r\ninterface OtpVerificationProps {\r\n  email: string;\r\n}\r\n\r\nconst OtpVerification: React.FC<OtpVerificationProps> = ({ email }) => {\r\n  const [otp, setOtp] = useState('');\r\n  const [timer, setTimer] = useState(30);\r\n  const [isTimerActive, setIsTimerActive] = useState(true);\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  useEffect(() => {\r\n    let countdown: NodeJS.Timeout;\r\n    if (isTimerActive && timer > 0) {\r\n      countdown = setTimeout(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n    } else if (timer === 0) {\r\n      setIsTimerActive(false);\r\n    }\r\n    return () => clearTimeout(countdown);\r\n  }, [isTimerActive, timer]);\r\n\r\n  const handleOtpVerification = async () => {\r\n    try {\r\n      await dispatch(verifyOtp({ email, otp })).unwrap();\r\n    } catch (error) {\r\n      console.error('OTP verification failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleResendOtp = async () => {\r\n    try {\r\n      await sendOtpApi(email);\r\n      setIsTimerActive(true);\r\n      setTimer(30);\r\n    } catch (error) {\r\n      console.error('Failed to resend OTP:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100 p-4\">\r\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-xl p-8\">\r\n        <h3 className=\"mb-4 text-2xl font-semibold text-purple-600 text-center\">OTP Verification</h3>\r\n        <p className=\"mb-6 text-gray-700 text-center\">An OTP has been sent to {email}</p>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"otp-input\" className=\"block text-sm font-semibold text-gray-700\">Enter OTP</label>\r\n          <input\r\n            id=\"otp-input\"\r\n            type=\"text\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            required\r\n            className=\"w-full rounded-md border border-gray-300 px-4 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n          />\r\n        </div>\r\n        \r\n        <button \r\n          onClick={handleOtpVerification}\r\n          disabled={!isTimerActive}\r\n          className={`w-full rounded-md py-2 text-sm font-semibold text-white transition duration-200 ${\r\n            isTimerActive ? 'bg-purple-600 hover:bg-purple-700' : 'bg-gray-300 cursor-not-allowed'\r\n          }`}\r\n        >\r\n          Verify OTP\r\n        </button>\r\n        \r\n        <div className=\"mt-4 text-center\">\r\n          {isTimerActive ? (\r\n            <p className=\"text-gray-700\">Resend OTP in {timer} seconds</p>\r\n          ) : (\r\n            <button\r\n              onClick={handleResendOtp}\r\n              className=\"mt-2 rounded-md bg-purple-600 py-2 text-sm font-semibold text-white hover:bg-purple-700 transition duration-200\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpVerification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SignupForm from './SignupForm';\r\nimport OtpVerification from './OtpVerification';\r\n\r\nconst Signup: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [isOtpStep, setIsOtpStep] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { loading, error, isAuthenticated } = useSelector((state: RootState) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/dashboard');\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const handleSignupSuccess = (signupEmail: string) => {\r\n    setEmail(signupEmail);\r\n    setIsOtpStep(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100 p-4\">\r\n      <div className=\"w-full max-w-4xl overflow-hidden rounded-lg bg-white shadow-xl\">\r\n        <div className=\"flex flex-col md:flex-row\">\r\n          <div className=\"bg-purple-600 p-12 md:w-2/5\">\r\n            <div className=\"text-8xl font-bold text-white opacity-50\">4</div>\r\n            <div className=\"mt-4 text-4xl font-semibold text-white\">JOBS</div>\r\n          </div>\r\n          <div className=\"p-12 md:w-3/5\">\r\n            <h2 className=\"mb-8 text-3xl font-semibold text-purple-600\">Sign Up</h2>\r\n            {isOtpStep ? (\r\n              <OtpVerification email={email} />\r\n            ) : (\r\n              <SignupForm onSignupSuccess={handleSignupSuccess} />\r\n            )}\r\n            {loading && <p className=\"mt-4 text-sm text-gray-600\">Loading...</p>}\r\n            {error && <p className=\"mt-4 text-sm text-red-500\">{error}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { socketService } from '../services/socketService';\r\n\r\nexport const createSocketListener = (event: string, callback: (...args: any[]) => void) => {\r\n  const removeListener = socketService.on(event, callback);\r\n  return () => {\r\n    if (typeof removeListener === 'function') {\r\n      removeListener();\r\n    }\r\n  };\r\n};\r\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBriefcase,\n  faComments,\n  faBell,\n  faUser,\n  faSearch,\n  faBars,\n  faSignOutAlt,\n  faUserPlus,\n  faHome,\n  faTimes,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { logout, fetchJobPostsAsync } from \"../../redux/slices/authSlice\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport {\n  fetchNotifications,\n  addNotification,\n  markAllAsRead,\n} from \"../../redux/slices/notificationSlice\";\nimport { fetchConnectionRequests } from \"../../redux/slices/connectionSlice\";\nimport { resetUnreadCount } from \"../../redux/slices/userMessageSlice\";\nimport { socketService } from \"../../services/socketService\";\nimport {\n  searchUsersAndJobs,\n  clearSearch,\n} from \"../../redux/slices/userSearchSlice\";\nimport { createSocketListener } from \"../../utils/socketUtils\";\n\nconst UserHeader: React.FC = () => {\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const user = useSelector((state: RootState) => state.auth.user);\n  const notifications = useSelector(\n    (state: RootState) => state.notifications.items\n  );\n  const unreadCount = useSelector(\n    (state: RootState) => state.notifications.unreadCount\n  );\n  const connectionRequests = useSelector(\n    (state: RootState) => state.connections.connectionRequests\n  );\n\n  const pendingConnectionRequests = useMemo(\n    () => connectionRequests.filter((request) => request.status === \"pending\"),\n    [connectionRequests]\n  );\n\n  const totalNotificationCount = useMemo(\n    () => unreadCount + pendingConnectionRequests.length,\n    [unreadCount, pendingConnectionRequests.length]\n  );\n\n  const navigateTo = useCallback(\n    (path: string) => {\n      navigate(path);\n      setShowNotifications(false);\n    },\n    [navigate]\n  );\n\n  const navigateToMessages = useCallback(() => {\n    dispatch(resetUnreadCount());\n    navigateTo(\"/messages\");\n  }, [dispatch, navigateTo]);\n\n  useEffect(() => {\n    if (user) {\n      const controller = new AbortController();\n\n      if (socketService && !socketService.getConnectionStatus()) {\n        socketService.connect(user.id);\n      }\n\n      dispatch(fetchNotifications(user.id));\n      dispatch(fetchConnectionRequests(user.id));\n\n      return () => {\n        controller.abort();\n        socketService?.disconnect();\n      };\n    }\n  }, [user, dispatch]);\n\n  useEffect(() => {\n    const handleNewNotification = (notification: any) => {\n      dispatch(addNotification(notification));\n    };\n\n    const removeNewNotificationListener = createSocketListener(\n      \"newNotification\",\n      handleNewNotification\n    );\n\n    return () => {\n      removeNewNotificationListener();\n    };\n  }, [dispatch]);\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout());\n    navigate(\"/login\");\n  }, [dispatch, navigate]);\n\n  const goToJobs = useCallback(() => {\n    dispatch(\n      fetchJobPostsAsync({\n        page: 1,\n        limit: 10,\n        sortBy: \"createdAt\",\n        sortOrder: \"desc\",\n        filter: {},\n      })\n    );\n    navigateTo(\"/jobs\");\n  }, [dispatch, navigateTo]);\n\n  const toggleNotifications = useCallback(() => {\n    setShowNotifications((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (showNotifications && notifications.length > 0) {\n      const unreadNotifications = notifications.filter(\n        (notification) => !notification.isRead\n      );\n      if (unreadNotifications.length > 0) {\n        dispatch(markAllAsRead());\n        unreadNotifications.forEach((notification) => {\n          if (notification._id) {\n            socketService.markNotificationAsRead(notification._id);\n          }\n        });\n      }\n    }\n  }, [showNotifications, dispatch, notifications]);\n\n  const openConnectionRequests = useCallback(() => {\n    navigateTo(\"/connections\");\n  }, [navigateTo]);\n\n  const toggleSearch = useCallback(() => {\n    setShowSearch((prev) => !prev);\n    setShowMobileMenu(false);\n  }, []);\n\n  const handleSearch = useCallback(() => {\n    if (searchQuery.length >= 3 && user) {\n      dispatch(searchUsersAndJobs({ query: searchQuery, userId: user.id }));\n      navigate(\"/search-results\");\n    }\n  }, [searchQuery, dispatch, navigate, user]);\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery(\"\");\n    dispatch(clearSearch());\n  }, [dispatch]);\n\n  const renderNavItem = useCallback(\n    (icon: any, text: string, onClick: () => void, badge?: number) => (\n      <button\n        key={text}\n        className=\"flex items-center text-purple-600 hover:text-gray-600 px-2 sm:px-3 md:px-4 py-1 sm:py-2 relative text-xs sm:text-sm md:text-base w-full md:w-auto\"\n        onClick={onClick}\n      >\n        <FontAwesomeIcon icon={icon} className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2\" />\n        <span className=\"inline\">{text}</span>\n        {badge !== undefined && badge > 0 && (\n          <span className=\"absolute top-0 right-0 -mt-1 -mr-1 bg-red-500 text-white rounded-full px-1 sm:px-2 py-0.5 text-xxs sm:text-xs\">\n            {badge}\n          </span>\n        )}\n      </button>\n    ),\n    []\n  );\n\n  const navItems = [\n    { icon: faHome, text: \"Home\", onClick: () => navigateTo(\"/dashboard\") },\n    { icon: faBriefcase, text: \"Jobs\", onClick: goToJobs },\n    {\n      icon: faComments,\n      text: \"Messages\",\n      onClick: navigateToMessages,\n    },\n    {\n      icon: faUsers,\n      text: \"Connections\",\n      onClick: openConnectionRequests,\n      badge: pendingConnectionRequests.length,\n    },\n    {\n      icon: faBell,\n      text: \"Notifications\",\n      onClick: toggleNotifications,\n      badge: totalNotificationCount,\n    },\n    {\n      icon: faUser,\n      text: \"Profile\",\n      onClick: () => navigateTo(`/profile/${user?.id}`),\n    },\n    { icon: faSignOutAlt, text: \"Logout\", onClick: handleLogout },\n  ];\n\n  // Add this new state\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n\n  // Add this new function to toggle the mobile menu\n  const toggleMobileMenu = useCallback(() => {\n    setShowMobileMenu((prev) => !prev);\n    setShowSearch(false);\n  }, []);\n\n  return (\n    <header className=\"bg-white shadow-md p-2 sm:p-3 md:p-4\">\n      <div className=\"container mx-auto\">\n        <div className=\"flex flex-wrap justify-between items-center\">\n          {/* Logo Section */}\n          <div className=\"flex items-center justify-between w-full md:w-auto mb-2 md:mb-0\">\n            <button\n              onClick={() => navigateTo(\"/dashboard\")}\n              className=\"flex items-center\"\n            >\n              <img\n                src=\"/logo.png\"\n                alt=\"Logo\"\n                className=\"h-6 w-6 sm:h-8 sm:w-8 md:h-10 md:w-10 mr-1 sm:mr-2\"\n              />\n              <span className=\"text-purple-700 font-semibold text-sm sm:text-base md:text-lg\">\n                4 Jobs\n              </span>\n            </button>\n            <div className=\"flex md:hidden\">\n              <button\n                onClick={toggleSearch}\n                className=\"text-purple-600 mr-2 sm:mr-4\"\n                aria-label=\"Search\"\n              >\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className=\"h-5 w-5 sm:h-6 sm:w-6\"\n                />\n              </button>\n              <button\n                className=\"text-purple-600 focus:outline-none\"\n                onClick={toggleMobileMenu}\n              >\n                <FontAwesomeIcon\n                  icon={showMobileMenu ? faTimes : faBars}\n                  className=\"h-5 w-5 sm:h-6 sm:w-6\"\n                />\n              </button>\n            </div>\n          </div>\n\n          {/* Search Bar Section */}\n          <div\n            className={`w-full md:w-auto md:flex-grow mx-0 sm:mx-2 md:mx-4 mb-2 md:mb-0 order-3 md:order-2 ${\n              showSearch || !showMobileMenu ? \"block\" : \"hidden\"\n            } md:block`}\n          >\n            <div className=\"relative w-full max-w-lg mx-auto\">\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                onKeyPress={(e) => e.key === \"Enter\" && handleSearch()}\n                className=\"w-full px-3 sm:px-4 py-1 sm:py-2 text-sm sm:text-base border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              />\n              {searchQuery && (\n                <button\n                  onClick={handleClearSearch}\n                  className=\"absolute right-8 sm:right-12 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                >\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    className=\"h-4 w-4 sm:h-5 sm:w-5\"\n                  />\n                </button>\n              )}\n              <button\n                onClick={handleSearch}\n                className=\"absolute right-2 sm:right-3 top-1/2 transform -translate-y-1/2 text-purple-500 hover:text-purple-700\"\n              >\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className=\"h-4 w-4 sm:h-5 sm:w-5\"\n                />\n              </button>\n            </div>\n          </div>\n\n          {/* Navigation Items */}\n          <nav\n            className={`${\n              showMobileMenu ? \"block\" : \"hidden\"\n            } md:flex flex-col md:flex-row md:flex-wrap space-y-2 md:space-y-0 space-x-0 md:space-x-1 lg:space-x-2 xl:space-x-4 items-start md:items-center order-2 md:order-3 w-full md:w-auto mt-2 md:mt-0`}\n          >\n            {navItems.map((item) =>\n              renderNavItem(item.icon, item.text, item.onClick, item.badge)\n            )}\n          </nav>\n        </div>\n\n        {/* Notifications Dropdown */}\n        {showNotifications && (\n          <div className=\"fixed inset-0 z-50 md:absolute md:inset-auto md:right-4 md:top-16 mt-2 w-full md:w-80 bg-white border border-gray-200 rounded-md shadow-lg\">\n            <div className=\"flex justify-between items-center p-2 sm:p-4 border-b border-gray-200\">\n              <span className=\"font-bold text-purple-700 text-sm sm:text-base\">\n                Notifications\n              </span>\n              <button\n                onClick={toggleNotifications}\n                className=\"text-gray-500 hover:text-gray-700 sm:hidden\"\n              >\n                <FontAwesomeIcon icon={faTimes} className=\"h-5 w-5\" />\n              </button>\n            </div>\n            <div className=\"max-h-[calc(100vh-10rem)] sm:max-h-96 overflow-y-auto\">\n              {pendingConnectionRequests.length > 0 && (\n                <div\n                  key=\"connection-requests\"\n                  className=\"p-2 sm:p-4 border-b border-gray-100 hover:bg-purple-50 cursor-pointer transition duration-300\"\n                  onClick={openConnectionRequests}\n                >\n                  <p className=\"text-xs sm:text-sm flex items-center text-purple-600\">\n                    <FontAwesomeIcon\n                      icon={faUserPlus}\n                      className=\"mr-1 sm:mr-2 h-3 w-3 sm:h-4 sm:w-4\"\n                    />\n                    {pendingConnectionRequests.length} pending connection\n                    request(s)\n                  </p>\n                </div>\n              )}\n              {notifications.map((notification) => (\n                <div\n                  key={notification._id}\n                  className=\"p-2 sm:p-4 border-b border-gray-100 hover:bg-purple-50 transition duration-300\"\n                >\n                  <p className=\"text-xs sm:text-sm\">{notification.message}</p>\n                  <p className=\"text-xxs sm:text-xs text-gray-500 mt-1\">\n                    {new Date(notification.createdAt).toLocaleString()}\n                  </p>\n                </div>\n              ))}\n              {notifications.length === 0 &&\n                pendingConnectionRequests.length === 0 && (\n                  <div className=\"p-2 sm:p-4 text-gray-500 text-xs sm:text-sm\">\n                    No new notifications\n                  </div>\n                )}\n            </div>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default UserHeader;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { RootState } from \"../../redux/store\";\nimport { UserCircle } from \"lucide-react\";\n\ninterface SidebarProps {\n  isOpen: boolean;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen }) => {\n  const { user } = useSelector((state: RootState) => state.auth);\n\n  return (\n    <div\n      className={`bg-white shadow-md rounded-lg p-4 w-64 transition-transform duration-300 ease-in-out fixed top-16 left-0 h-full z-50 ${\n        isOpen ? \"translate-x-0\" : \"-translate-x-full\"\n      } lg:static lg:translate-x-0 lg:block`}\n    >\n      <div className=\"flex flex-col items-center mb-4\">\n        {user?.profileImage ? (\n          <img\n            src={`${user.profileImage}`}\n            alt=\"Profile\"\n            className=\"w-16 h-16 rounded-full object-cover\"\n          />\n        ) : (\n          <UserCircle className=\"w-16 h-16 text-gray-400\" />\n        )}\n        <h2 className=\"mt-2 text-xl text-purple-700 font-semibold\">\n          {user?.name || \"Guest\"}\n        </h2>\n      </div>\n\n      <div className=\"mb-4\">\n        <h3 className=\"text-sm font-semibold text-purple-800 mb-1\">Bio</h3>\n        <p className=\"text-xs text-purple-700 overflow-hidden text-ellipsis\">\n          {user?.bio || \"No bio available.\"}\n        </p>\n      </div>\n\n      <div className=\"mb-4\">\n        <div className=\"flex justify-between text-xs mb-2\">\n          <span className=\"text-purple-600\">Profile viewers</span>\n          <span className=\"font-semibold text-purple-600\">55</span>\n        </div>\n        <div className=\"flex justify-between text-xs\">\n          <span className=\"text-purple-600\">Post impressions</span>\n          <span className=\"font-semibold text-purple-600\">1</span>\n        </div>\n      </div>\n\n      <Link to=\"/resume-builder\" className=\"block w-full mt-4\">\n        <button className=\"w-full bg-purple-600 text-white py-1 px-2 rounded-full hover:bg-purple-700 transition duration-300 text-xs\">\n          Build Resume\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { PencilIcon, UserCircle } from 'lucide-react';\nimport { RootState } from '../../../redux/store';\n\n\nconst CreatePostButton: React.FC = () => {\n  const { user } = useSelector((state: RootState) => state.auth);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-4 text-xs sm:text-sm md:text-base\">\n      <Link to=\"/posts/create\" className=\"flex items-center space-x-4\">\n        <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center\">\n          {user?.profileImage ? (\n            <img src={`${user?.profileImage}`} alt=\"User avatar\" className=\"rounded-full\" />\n          ) : (\n            <UserCircle className=\"w-20 h-20 text-gray-400\" />\n          )}\n        </div>\n        <div className=\"flex-grow\">\n          <div className=\"bg-purple-50 text-purple-500 rounded-full py-1 px-2 text-xs sm:text-sm md:text-base\">\n            Write about something\n          </div>\n        </div>\n        <div className=\"flex space-x-2\">\n          <button className=\"text-purple-500 hover:bg-purple-100 rounded-full p-1 transition duration-300 text-xs sm:text-sm md:text-base\">\n            <PencilIcon size={20} />\n          </button>\n          <button className=\"text-purple-500 hover:bg-purple-100 rounded-full p-1 transition duration-300 text-xs sm:text-sm md:text-base\">\n            <svg xmlns=\"http://www.w3.org/2000/s\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default CreatePostButton;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Post as PostType, Comment } from \"../../../types/postTypes\";\nimport {\n  likePost,\n  dislikePost,\n  commentOnPost,\n} from \"../../../redux/slices/postSlice\";\nimport { AppDispatch, RootState } from \"../../../redux/store\";\nimport { FaThumbsUp, FaThumbsDown, FaComment } from \"react-icons/fa\";\n\nfunction formatDate(dateString: string): string {\n  const date = new Date(dateString);\n  return date.toLocaleString(\"en-US\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n}\n\nconst Post: React.FC<PostType> = ({\n  _id,\n  user,\n  content,\n  imageUrl,\n  videoUrl,\n  likes,\n  comments,\n  createdAt,\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const [newComment, setNewComment] = useState(\"\");\n  const [showComments, setShowComments] = useState(false);\n  const [localComments, setLocalComments] = useState<Comment[]>(comments);\n\n  const handleLike = () => {\n    if (currentUser && currentUser.id && _id) {\n      dispatch(likePost({ postId: _id, userId: currentUser.id }));\n    }\n  };\n\n  const handleDislike = () => {\n    if (currentUser && currentUser.id && _id) {\n      dispatch(dislikePost({ postId: _id, userId: currentUser.id }));\n    }\n  };\n\n  const handleComment = () => {\n    if (currentUser && currentUser.id && _id && newComment.trim()) {\n      const newCommentData = {\n        postId: _id,\n        userId: currentUser.id,\n        content: newComment,\n        userName: currentUser.name,\n        userProfileImage: currentUser.profileImage,\n      };\n\n      dispatch(commentOnPost(newCommentData));\n\n      const localNewComment: Comment = {\n        id: Date.now().toString(),\n        content: newComment,\n        createdAt: new Date().toISOString(),\n        userId: {\n          id: currentUser.id,\n          name: currentUser.name,\n          profileImage: currentUser.profileImage,\n        },\n      };\n\n      setLocalComments((prevComments) => [localNewComment, ...prevComments]);\n      setNewComment(\"\");\n    }\n  };\n\n  const isLiked =\n    currentUser && currentUser.id && likes.includes(currentUser.id);\n\n  return (\n    <div className=\"bg-white shadow-lg rounded-lg overflow-hidden transition-all duration-300 hover:shadow-xl mb-4 border border-purple-200 dark:border-purple-700\">\n      {/* User Info Section */}\n      <div className=\"p-4 border-b text-purple-600 border-purple-200 dark:border-purple-700\">\n        <div className=\"flex items-center space-x-3\">\n          <img\n            src={user.profileImage || \"https://via.placeholder.com/40\"}\n            alt={user.name}\n            className=\"w-10 h-10 rounded-full object-cover\"\n          />\n          <div>\n            <h3 className=\"font-semibold text-purple-800 dark:text-purple-500\">\n              {user.name}\n            </h3>\n            <p className=\"text-sm text-purple-600 dark:text-purple-400\">\n              {formatDate(createdAt)}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Post Content Section */}\n      <div className=\"p-4\">\n        <p className=\"text-purple-800 dark:text-purple-500 mb-4\">{content}</p>\n        {imageUrl && (\n          <img\n            src={imageUrl}\n            alt=\"\"\n            className=\"w-full h-auto rounded-lg mb-4 object-cover\"\n          />\n        )}\n        {videoUrl && (\n          <video\n            src={videoUrl}\n            controls\n            className=\"w-full h-auto rounded-lg mb-4\"\n          />\n        )}\n\n        {/* Like, Dislike, and Comment Buttons */}\n        <div className=\"flex items-center justify-between mt-4\">\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={handleLike}\n              className={`flex items-center space-x-1 ${\n                isLiked\n                  ? \"text-purple-900 dark:text-purple-900\"\n                  : \"text-gray-500 dark:text-gray-400\"\n              } hover:text-purple-700 dark:hover:text-purple-300 transition-colors duration-200`}\n            >\n              <FaThumbsUp />\n              <span>{likes.length}</span>\n            </button>\n            <button\n              onClick={handleDislike}\n              className=\"flex items-center space-x-1 text-purple-100 dark:text-gray-400 hover:text-purple-700 dark:hover:text-purple-300 transition-colors duration-200\"\n            >\n              <FaThumbsDown />\n            </button>\n          </div>\n          <button\n            onClick={() => setShowComments(!showComments)}\n            className=\"flex items-center space-x-1 text-purple-900 dark:text-purple-900 hover:text-purple-900 dark:hover:text-purple-300 transition-colors duration-200\"\n          >\n            <FaComment />\n            <span>{localComments.length}</span>\n          </button>\n        </div>\n\n        {/* Comments Section */}\n        {showComments && (\n          <div className=\"mt-4\">\n            <h4 className=\"font-medium text-purple-700 dark:text-purple-900 mb-2\">\n              Comments\n            </h4>\n            <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n              {localComments.map((comment: Comment) => (\n                <div\n                  key={comment.id}\n                  className=\"bg-purple-50 dark:bg-purple-100 p-2 rounded-lg flex items-start space-x-2\"\n                >\n                  <img\n                    src={\n                      comment.userId.profileImage ||\n                      \"https://via.placeholder.com/40\"\n                    }\n                    alt={comment.userId.name}\n                    className=\"w-8 h-8 rounded-full object-cover\"\n                  />\n                  <div>\n                    <p className=\"text-sm font-medium text-purple-800 dark:text-purple-600\">\n                      {comment.userId.name}\n                    </p>\n                    <p className=\"text-sm text-purple-700 dark:text-purple-500\">\n                      {comment.content}\n                    </p>\n                    <p className=\"text-xs text-purple-600 dark:text-purple-400 mt-1\">\n                      {formatDate(comment.createdAt)}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-4 flex\">\n              <input\n                type=\"text\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n                placeholder=\"Write a comment...\"\n                className=\"flex-grow px-3 py-2 border border-purple-300 dark:border-purple-600 rounded-l-md focus:outline-none focus:ring-2 focus:ring-purple-500 dark:bg-purple-100 dark:text-white\"\n              />\n              <button\n                onClick={handleComment}\n                className=\"px-4 py-2 bg-purple-600 text-white rounded-r-md hover:bg-purple-700 transition-colors duration-200\"\n              >\n                Post\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts } from \"../../redux/slices/postSlice\";\nimport { AppDispatch, RootState } from \"../../redux/store\";\nimport CreatePostButton from \"../user/posts/CreatePostButton\";\nimport Post from \"./posts/Post\";\n\nconst MainFeed: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const posts = useSelector((state: RootState) => state.posts.list);\n  const status = useSelector((state: RootState) => state.posts.status);\n  const error = useSelector((state: RootState) => state.posts.error);\n  const hasMore = useSelector((state: RootState) => state.posts.hasMore);\n\n  const observer = useRef<IntersectionObserver | null>(null);\n  const lastPostElementRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      if (status === \"loading\") return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          dispatch(fetchPosts());\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [status, hasMore, dispatch]\n  );\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, [dispatch]);\n\n  if (status === \"loading\" && (!posts || posts.length === 0))\n    return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!Array.isArray(posts) || posts.length === 0) {\n    return (\n      <div>\n        <CreatePostButton />\n        <div>No posts available.</div>\n      </div>\n    );\n  }\n  \n\n  return (\n    <div className=\"w-full\">\n      <CreatePostButton />\n      <div className=\"post-list space-y-4\">\n        {posts.map((post, index) => (\n          <div\n            key={`${post._id}-${index}`}\n            ref={index === posts.length - 1 ? lastPostElementRef : null}\n            className=\"text-xs sm:text-sm md:text-base lg:text-lg\"\n          >\n            <Post {...post} />\n          </div>\n        ))}\n        {status === \"loading\" && (\n          <div className=\"text-center py-4\">Loading more posts...</div>\n        )}\n        {!hasMore && status !== \"loading\" && (\n          <div className=\"text-center text-gray-500 py-4\">\n            All posts for you finished\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainFeed;\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { sendConnectionRequest } from \"../../redux/slices/connectionSlice\";\r\nimport { RecommendationUser } from \"../../types/auth\";\r\nimport { UserCircle } from 'lucide-react';\r\n\r\ninterface RecommendationCardProps {\r\n  user: RecommendationUser;\r\n  onViewProfile: (userId: string) => void;\r\n}\r\n\r\nconst RecommendationCard: React.FC<RecommendationCardProps> = ({ user, onViewProfile }) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const currentUser = useSelector((state: RootState) => state.auth.user);\r\n\r\n  const handleSendRequest = () => {\r\n    if (currentUser) {\r\n      dispatch(sendConnectionRequest({ senderId: currentUser.id, recipientId: user.id }));\r\n    }\r\n  };\r\n\r\n  const handleViewProfile = () => {\r\n    onViewProfile(user.id);\r\n  };\r\n\r\n  const getConnectionButton = () => {\r\n    switch (user.connectionStatus) {\r\n      case 'pending':\r\n        return (\r\n          <button\r\n            className=\"w-full text-sm bg-gray-400 text-white px-3 py-2 rounded cursor-not-allowed\"\r\n            disabled\r\n          >\r\n            Pending\r\n          </button>\r\n        );\r\n      case 'rejected':\r\n        return (\r\n          <button\r\n            onClick={handleSendRequest}\r\n            className=\"w-full text-sm bg-purple-600 hover:bg-purple-700 text-white px-3 py-2 rounded transition duration-300 ease-in-out\"\r\n          >\r\n            Connect Again\r\n          </button>\r\n        );\r\n      case 'none':\r\n        return (\r\n          <button\r\n            onClick={handleSendRequest}\r\n            className=\"w-full text-sm bg-purple-600 hover:bg-purple-700 text-white px-3 py-2 rounded transition duration-300 ease-in-out\"\r\n          >\r\n            Connect\r\n          </button>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-between p-4 bg-gray-50 rounded-lg shadow-md hover:bg-gray-100 transition duration-300 ease-in-out h-full\">\r\n      <div className=\"flex flex-col items-center mb-3\">\r\n        {user?.profileImage ? (\r\n          <img src={`${user.profileImage}`} alt={user.name} className=\"rounded-full h-16 w-16 object-cover mb-2\"/>\r\n        ) : (\r\n          <UserCircle className=\"w-20 h-20 text-gray-400\" />\r\n        )}\r\n        <h4 className=\"font-medium text-base text-gray-800 text-center\">{user.name}</h4>\r\n      </div>\r\n      <div className=\"flex flex-col space-y-2 mt-auto\">\r\n        {getConnectionButton()}\r\n        <button\r\n          onClick={handleViewProfile}\r\n          className=\"w-full text-sm bg-gray-200 text-gray-700 px-3 py-2 rounded hover:bg-gray-300 transition duration-300 ease-in-out\"\r\n        >\r\n          View Profile\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecommendationCard;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\nimport RecommendationCard from \"./RecommendationCard\";\nimport { RecommendationUser } from \"../../types/auth\";\n\ninterface RecommendationsPanelProps {\n  isOpen: boolean;\n}\n\nconst RecommendationsPanel: React.FC<RecommendationsPanelProps> = ({\n  isOpen,\n}) => {\n  const { recommendations, loading, error } = useSelector(\n    (state: RootState) => state.connections\n  );\n\n  if (loading) {\n    return (\n      <div className=\"bg-white shadow-lg rounded-lg p-4\">\n        <p>Loading recommendations...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-white shadow-lg rounded-lg p-4\">\n        <p className=\"text-red-500 text-center\">{error}</p>\n      </div>\n    );\n  }\n\n  if (!Array.isArray(recommendations)) {\n    console.error(\"Recommendations is not an array:\", recommendations);\n    return (\n      <div className=\"bg-white shadow-lg rounded-lg p-4\">\n        <p className=\"text-red-500 text-center\">\n          An error occurred while loading recommendations.\n        </p>\n      </div>\n    );\n  }\n\n  if (recommendations.length === 0) {\n    return (\n      <div className=\"bg-white shadow-lg rounded-lg p-4\">\n        <p className=\"text-gray-500 text-center\">\n          No recommendations available at this time.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`bg-white shadow-lg rounded-lg p-4 transition-transform duration-300 ease-in-out ${\n        isOpen ? \"translate-x-0\" : \"translate-x-full\"\n      } fixed top-16 right-0 h-full z-50 overflow-y-auto lg:static lg:translate-x-0 lg:h-auto`}\n    >\n      <h3 className=\"font-semibold text-lg mb-4 text-gray-800\">\n        Recommendations\n      </h3>\n      <div className=\"grid grid-row-1 sm:grid-row-2 lg:grid-row-3 xl:grid-row-4 gap-4\">\n        {recommendations.map((user: RecommendationUser) => (\n          <RecommendationCard\n            key={user.id}\n            user={user}\n            onViewProfile={() => {}}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendationsPanel;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../redux/store\";\nimport { fetchRecommendations } from \"../../redux/slices/connectionSlice\";\nimport Header from \"./Header\"; // Ensure this is correct\nimport Sidebar from \"./Sidebar\"; // Ensure this is correct\nimport MainFeed from \"./Main\"; // Ensure this is correct\nimport RecommendationsPanel from \"./RecommendationsPanel\"; // Ensure this is correct\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"; // Ensure this is correct\n\nconst Dashboard: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isRecommendationsOpen, setIsRecommendationsOpen] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const toggleRecommendations = () => {\n    setIsRecommendationsOpen(!isRecommendationsOpen);\n  };\n\n  useEffect(() => {\n    if (currentUser) {\n      dispatch(fetchRecommendations(currentUser.id));\n    }\n  }, [dispatch, currentUser]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <Header />\n      <div className=\"max-w-7xl mx-auto m-3 px-4 sm:px-6 lg:px-8 relative\">\n        <div className=\"flex flex-col lg:flex-row gap-5\">\n          {/* Clickable area on the left side to toggle the sidebar on smaller screens */}\n          <div\n            className={`lg:hidden fixed top-1/2 left-0 transform -translate-y-1/2 w-16 cursor-pointer opacity-0 hover:opacity-100 transition-opacity duration-300`}\n            onClick={toggleSidebar}\n          >\n            <ChevronLeft className=\"text-gray-600\" />\n          </div>\n\n          {/* Sidebar for larger screens */}\n          <div className={`hidden lg:block lg:w-1/4 xl:w-1/5`}>\n            <div className=\"sticky top-20\">\n              <Sidebar isOpen={true} />\n            </div>\n          </div>\n\n          {/* Main Feed */}\n          <div className=\"w-full lg:w-1/2 xl:w-3/5\">\n            <MainFeed />\n          </div>\n\n          {/* Recommendations for larger screens */}\n          <div className=\"hidden lg:block lg:w-1/4 xl:w-1/5\">\n            <div className=\"sticky top-20\">\n              <RecommendationsPanel isOpen={true} />\n            </div>\n          </div>\n\n          {/* Collapsible Recommendations for smaller screens */}\n          <div\n            className={`lg:hidden transition-transform duration-300 ease-in-out ${\n              isRecommendationsOpen ? \"block\" : \"hidden\"\n            }`}\n          >\n            <RecommendationsPanel isOpen={isRecommendationsOpen} />\n          </div>\n\n          {/* Clickable area on the right side to toggle recommendations on smaller screens */}\n          <div\n            className={`lg:hidden fixed top-1/2 right-0 transform -translate-y-1/2 w-16 cursor-pointer opacity-0 hover:opacity-100 transition-opacity duration-300`}\n            onClick={toggleRecommendations}\n          >\n            <ChevronRight className=\"text-gray-600\" />\n          </div>\n\n          {/* Sidebar for smaller screens */}\n          <div\n            className={`lg:hidden transition-transform duration-300 ease-in-out ${\n              isSidebarOpen ? \"block\" : \"hidden\"\n            }`}\n          >\n            <Sidebar isOpen={isSidebarOpen} />\n          </div>\n\n          {/* Overlay for the sidebar */}\n          {isSidebarOpen && (\n            <div\n              className=\"fixed inset-0 bg-black opacity-50 z-40\"\n              onClick={toggleSidebar}\n            />\n          )}\n\n          {/* Overlay for recommendations */}\n          {isRecommendationsOpen && (\n            <div\n              className=\"fixed inset-0 bg-black opacity-50 z-40\"\n              onClick={toggleRecommendations}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, AppDispatch } from '../../redux/store';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { logout, refreshToken } from '../../redux/slices/authSlice';\n\ninterface PrivateRouteProps {\n  children: React.ReactNode;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n  const { isAuthenticated } = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (!isAuthenticated && token) {\n        try {\n          await dispatch(refreshToken()).unwrap();\n        } catch (error) {\n          dispatch(logout());\n          navigate('/login');\n        }\n      }\n    };\n\n    verifyToken();\n  }, [isAuthenticated, token, dispatch, navigate]);\n\n  if (!isAuthenticated && !token) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default PrivateRoute;\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loginAdmin, clearError } from '../../redux/slices/adminSlice';\r\nimport { RootState, AppDispatch } from '../../redux/store';\r\n\r\nconst AdminLogin: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const navigate = useNavigate();\r\n  const { isAuthenticatedAdmin, error, loading } = useSelector((state: RootState) => state.admin);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [formErrors, setFormErrors] = useState({ email: '', password: '' });\r\n\r\n  const validateForm = () => {\r\n    const errors = { email: '', password: '' };\r\n    if (!/^[a-zA-Z0-9._-]+@[a-z]+\\.[a-z]{2,}$/.test(email)) {\r\n      errors.email = 'Please enter a valid email address.';\r\n    }\r\n    if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password)) {\r\n      errors.password = 'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.';\r\n    }\r\n    setFormErrors(errors);\r\n    return !errors.email && !errors.password;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticatedAdmin) {\r\n      navigate('/admin/dashboard');\r\n    }\r\n  }, [isAuthenticatedAdmin, navigate]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      if (error) {\r\n        dispatch(clearError());\r\n      }\r\n      dispatch(loginAdmin({ email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n      <div className=\"bg-white rounded-3xl shadow-xl overflow-hidden max-w-4xl w-full flex flex-col md:flex-row\">\r\n        <div className=\"bg-purple-600 w-full md:w-2/5 p-8 flex items-center justify-center\">\r\n          <h1 className=\"text-white text-6xl font-bold\">\r\n            <span className=\"text-9xl\">4</span>JOBS\r\n          </h1>\r\n        </div>\r\n        <div className=\"w-full md:w-3/5 p-8\">\r\n          <h2 className=\"text-3xl font-semibold text-purple-600 mb-6\">Admin Log In</h2>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Username\"\r\n                className=\"w-full px-4 py-3 rounded-full bg-purple-50 border border-purple-100 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                required\r\n              />\r\n              {formErrors.email && <p className=\"text-red-500 text-sm mt-1\">{formErrors.email}</p>}\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                className=\"w-full px-4 py-3 rounded-full bg-purple-50 border border-purple-100 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                required\r\n              />\r\n              {formErrors.password && <p className=\"text-red-500 text-sm mt-1\">{formErrors.password}</p>}\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"w-full bg-purple-600 text-white py-3 rounded-full hover:bg-purple-700 transition duration-300 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-opacity-50\"\r\n            >\r\n              {loading ? 'Logging in...' : 'Submit'}\r\n            </button>\r\n          </form>\r\n          {error && <p className=\"text-red-500 mt-4 text-center\">{error}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  FaBars,\n  FaTimes,\n  FaTachometerAlt,\n  FaUserAlt,\n  FaUsers,\n  FaBriefcase,\n  FaClipboard,\n  FaNewspaper,\n} from \"react-icons/fa\";\nimport \"../../styles/admin/Sidebar.css\";\n\nconst Sidebar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      {/* Toggle button for small screens */}\n      <div className=\"md:hidden fixed top-0 left-0 z-50 p-2 sm:p-4\">\n        <button\n          onClick={toggleSidebar}\n          className=\"bg-purple-700 text-white p-1 sm:p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600\"\n        >\n          {isOpen ? (\n            <FaTimes className=\"text-lg sm:text-2xl\" />\n          ) : (\n            <FaBars className=\"text-lg sm:text-2xl\" />\n          )}\n        </button>\n      </div>\n\n      {/* Sidebar */}\n      <aside\n        className={`fixed top-0 left-0 h-screen w-64 bg-purple-700 text-white transform transition-transform duration-300 ease-in-out overflow-y-auto z-40\n          ${isOpen ? \"translate-x-0\" : \"-translate-x-full\"}\n          md:translate-x-0 md:sticky md:top-0 md:z-0 shadow-lg`}\n      >\n        <div className=\"flex items-center justify-center h-16 border-b border-purple-600\">\n          <img src=\"../../logo.png\" alt=\"4Jobs Logo\" className=\"h-8 sm:h-10\" />\n        </div>\n        <nav className=\"mt-8 pb-16 md:pb-0\">\n          <ul className=\"space-y-2 sm:space-y-4\">\n            <li>\n              <Link\n                to=\"/admin/dashboard\"\n                className=\"flex items-center space-x-2 sm:space-x-4 px-4 py-2 hover:bg-purple-600 transition-colors duration-200 text-sm sm:text-base\"\n              >\n                <FaTachometerAlt />\n                <span>Dashboard</span>\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/admin/user\"\n                className=\"flex items-center space-x-2 sm:space-x-4 px-4 py-2 hover:bg-purple-600 transition-colors duration-200 text-sm sm:text-base\"\n              >\n                <FaUserAlt />\n                <span>User</span>\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/admin/recruiters\"\n                className=\"flex items-center space-x-2 sm:space-x-4 px-4 py-2 hover:bg-purple-600 transition-colors duration-200 text-sm sm:text-base\"\n              >\n                <FaUsers />\n                <span>Recruiters</span>\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/admin/subscription\"\n                className=\"flex items-center space-x-2 sm:space-x-4 px-4 py-2 hover:bg-purple-600 transition-colors duration-200 text-sm sm:text-base\"\n              >\n                <FaClipboard />\n                <span>Subscription</span>\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/admin/jobpost\"\n                className=\"flex items-center space-x-2 sm:space-x-4 px-4 py-2 hover:bg-purple-600 transition-colors duration-200 text-sm sm:text-base\"\n              >\n                <FaBriefcase />\n                <span>Job Post</span>\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/admin/userposts\"\n                className=\"flex items-center space-x-2 sm:space-x-4 px-4 py-2 hover:bg-purple-600 transition-colors duration-200 text-sm sm:text-base\"\n              >\n                <FaNewspaper />\n                <span>User Posts</span>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n\n      {/* Overlay to close sidebar when clicking outside */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 bg-black bg-opacity-50 md:hidden z-30\"\n          onClick={toggleSidebar}\n        ></div>\n      )}\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport { FaUserCircle, FaSignOutAlt } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logoutAdmin } from '../../redux/slices/adminSlice';\nimport { AppDispatch } from '../../redux/store';\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch: AppDispatch = useDispatch();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const handleLogout = () => {\n    dispatch(logoutAdmin());\n    navigate('/admin/login');\n  };\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  const goToProfile = () => {\n    navigate('/admin/profile'); \n  };\n\n  return (\n    <header className=\"bg-white shadow-md flex justify-end items-center px-2 sm:px-4 py-2 sm:py-4\">\n      <div className=\"relative\">\n        <button\n          className=\"flex items-center bg-white space-x-2 cursor-pointer text-gray-600\"\n          onClick={toggleDropdown}\n        >\n          <FaUserCircle className=\"text-xl sm:text-2xl\" />\n        </button>\n\n        {dropdownOpen && (\n          <div className=\"absolute right-0 mt-2 w-40 sm:w-48 bg-white rounded-md shadow-lg z-50\">\n            <ul className=\"py-1\">\n              <li\n                onClick={goToProfile} \n                className=\"px-3 sm:px-4 py-2 hover:bg-gray-100 flex items-center space-x-2 cursor-pointer text-sm sm:text-base\"\n              >\n                <FaUserCircle />\n                <span>Profile</span>\n              </li>\n              <li\n                onClick={handleLogout}\n                className=\"px-3 sm:px-4 py-2 hover:bg-gray-100 flex items-center space-x-2 cursor-pointer text-sm sm:text-base\"\n              >\n                <FaSignOutAlt />\n                <span>Logout</span>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { fetchDashboardData } from \"../../redux/slices/adminSlice\";\r\nimport Sidebar from \"./AdminSidebar\";\r\nimport Header from \"./AdminHeader\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst AdminDashboard: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { loading, error, isAuthenticatedAdmin, dashboardData } = useSelector(\r\n    (state: RootState) => state.admin\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticatedAdmin) {\r\n      navigate(\"/admin/login\");\r\n    } else {\r\n      dispatch(fetchDashboardData());\r\n    }\r\n  }, [isAuthenticatedAdmin, navigate, dispatch]);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        Loading...\r\n      </div>\r\n    );\r\n  if (error)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        Error: {error}\r\n      </div>\r\n    );\r\n\r\n  const { \r\n    userCount = 0, \r\n    recruiterCount = 0, \r\n    companyCount = 0, \r\n    totalRevenue = 0, \r\n    jobPostCount = 0, \r\n    userPostCount = 0, \r\n    revenueData = [] \r\n  } = dashboardData || {};\r\n\r\n  const chartData = {\r\n    labels: revenueData.map((data: any) => data.month),\r\n    datasets: [\r\n      {\r\n        label: 'Revenue',\r\n        data: revenueData.map((data: any) => data.amount),\r\n        borderColor: 'rgb(147, 51, 234)',\r\n        backgroundColor: 'rgba(147, 51, 234, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Monthly Revenue',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 flex flex-col bg-gray-100 md:ml-0\">\r\n        <Header />\r\n        <div className=\"p-6 bg-white rounded-lg shadow-md m-4\">\r\n          <h2 className=\"text-2xl font-bold text-purple-700 mb-6\">Dashboard Overview</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-8\">\r\n            <DashboardCard title=\"Total Users\" value={userCount} />\r\n            <DashboardCard title=\"Total Recruiters\" value={recruiterCount} />\r\n            <DashboardCard title=\"Total Companies\" value={companyCount} />\r\n            <DashboardCard title=\"Total Revenue\" value={`₹${totalRevenue.toFixed(2)}`} />\r\n            <DashboardCard title=\"Total Job Posts\" value={jobPostCount} />\r\n            <DashboardCard title=\"Total User Posts\" value={userPostCount} />\r\n          </div>\r\n          <div className=\"mt-8\">\r\n            <Line options={chartOptions} data={chartData} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DashboardCard: React.FC<{ title: string; value: string | number }> = ({ title, value }) => (\r\n  <div className=\"bg-purple-100 p-4 rounded-lg\">\r\n    <h3 className=\"text-lg font-semibold text-purple-800\">{title}</h3>\r\n    <p className=\"text-3xl font-bold text-purple-600\">{value}</p>\r\n  </div>\r\n);\r\n\r\nexport default AdminDashboard;\r\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { logoutAdmin, refreshAdminToken } from \"../../redux/slices/adminSlice\";\n\ninterface PrivateRouteProps {\n  children: React.ReactNode;\n}\n\nconst AdminPrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n  const { isAuthenticatedAdmin } = useSelector(\n    (state: RootState) => state.admin\n  );\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"adminToken\");\n\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (!isAuthenticatedAdmin && token) {\n        try {\n          await dispatch(refreshAdminToken()).unwrap();\n        } catch (error) {\n          dispatch(logoutAdmin());\n          navigate('/admin/login');\n        }\n      }\n    };\n\n    verifyToken();\n  }, [isAuthenticatedAdmin, token, dispatch, navigate]);\n\n  if (!isAuthenticatedAdmin && !token) {\n    return <Navigate to=\"/admin/login\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default AdminPrivateRoute;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, AppDispatch } from '../../redux/store';\nimport { login, clearError } from '../../redux/slices/recruiterSlice';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formErrors, setFormErrors] = useState({ email: '', password: '' });\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  \n  const { loading, error, isAuthenticatedRecruiter, isApproved } = useSelector((state: RootState) => state.recruiter);\n\n  const validateForm = () => {\n    const errors = { email: '', password: '' };\n    if (!/^[a-zA-Z0-9._-]+@[a-z]+\\.[a-z]{2,}$/.test(email)) {\n      errors.email = 'Please enter a valid email address.';\n    }\n    if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password)) {\n      errors.password = 'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.';\n    }\n    setFormErrors(errors);\n    return !errors.email && !errors.password;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validateForm()) {\n      if (error) {\n        dispatch(clearError());\n      }\n      dispatch(login({ email, password }));\n    }\n  };\n\n  useEffect(() => {\n    if (isAuthenticatedRecruiter) {\n      navigate('/recruiter/dashboard');\n    }\n  }, [isAuthenticatedRecruiter, isApproved, navigate]);\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100 p-4\">\n      <div className=\"bg-white rounded-3xl shadow-xl overflow-hidden max-w-4xl w-full flex flex-col md:flex-row\">\n        <div className=\"bg-purple-600 w-full md:w-2/5 p-8 flex items-center justify-center\">\n          <h1 className=\"text-white text-6xl font-bold\">\n            <span className=\"text-9xl\">4</span>JOBS\n          </h1>\n        </div>\n        <div className=\"w-full md:w-3/5 p-8\">\n          <h2 className=\"text-3xl font-semibold text-purple-600 mb-6\">Log In</h2>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Username\"\n                className=\"w-full px-4 py-3 rounded-full bg-purple-50 border border-purple-100 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                required\n              />\n              {formErrors.email && <p className=\"text-red-500 text-sm mt-1\">{formErrors.email}</p>}\n            </div>\n            <div>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Password\"\n                className=\"w-full px-4 py-3 rounded-full bg-purple-50 border border-purple-100 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\n                required\n              />\n              {formErrors.password && <p className=\"text-red-500 text-sm mt-1\">{formErrors.password}</p>}\n            </div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"w-full bg-purple-600 text-white py-3 rounded-full hover:bg-purple-700 transition duration-300 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-opacity-50\"\n            >\n              {loading ? 'Logging in...' : 'Submit'}\n            </button>\n          </form>\n          {error && <p className=\"text-red-500 mt-4 text-center\">{error}</p>}\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-gray-600\">Don't have an account?</p>\n            <Link to=\"/recruiter/signup\" className=\"text-purple-600 hover:underline\">Sign up here</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { register, clearError } from \"../../redux/slices/recruiterSlice\";\r\nimport \"../../styles/recruiter/register.css\";\r\n\r\nconst Register: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    companyName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    governmentId: null as File | null,\r\n  });\r\n  const [formErrors, setFormErrors] = useState({\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    governmentId: \"\",\r\n  });\r\n\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { error, loading, isAuthenticatedRecruiter } = useSelector(\r\n    (state: RootState) => state.recruiter\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticatedRecruiter) {\r\n      navigate(\"/recruiter/dashboard\");\r\n    }\r\n  }, [isAuthenticatedRecruiter, navigate]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFormData({ ...formData, governmentId: e.target.files[0] });\r\n    }\r\n  };\r\n  const validateForm = () => {\r\n    const errors = {\r\n      name: \"\",\r\n      companyName: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      password: \"\",\r\n      governmentId: \"\",\r\n    };\r\n\r\n\r\n    if (formData.name.trim().length < 3) {\r\n      errors.name = \"Full Name must be at least 3 characters long.\";\r\n    } else if (!formData.name.trim()) {\r\n      errors.name = \"Full Name is required.\";\r\n    }\r\n\r\n\r\n    if (formData.companyName.trim().length < 3) {\r\n      errors.companyName = \"Company Name must be at least 3 characters long.\";\r\n    } else if (!formData.companyName.trim()) {\r\n      errors.companyName = \"Company Name is required.\";\r\n    }\r\n\r\n\r\n    if (\r\n      !/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(formData.email)\r\n    ) {\r\n      errors.email = \"Please enter a valid email address.\";\r\n    }\r\n\r\n    if (!/^\\d{10}$/.test(formData.phone)) {\r\n      errors.phone = \"Please enter a valid phone number with 10 digits.\";\r\n    }\r\n\r\n   \r\n    if (\r\n      !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(\r\n        formData.password\r\n      )\r\n    ) {\r\n      errors.password =\r\n        \"Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.\";\r\n    }\r\n\r\n\r\n    if (!formData.governmentId) {\r\n      errors.governmentId = \"Please upload a government ID.\";\r\n    } else {\r\n      const validFileTypes = [\r\n        \"image/jpeg\",\r\n        \"image/png\",\r\n        \"image/webp\",\r\n        \"application/pdf\",\r\n      ];\r\n      const fileSizeLimit = 2 * 1024 * 1024; \r\n\r\n      if (!validFileTypes.includes(formData.governmentId.type)) {\r\n        errors.governmentId =\r\n          \"Please upload a valid file (JPEG, PNG, PDF, WEBP).\";\r\n      } else if (formData.governmentId.size > fileSizeLimit) {\r\n        errors.governmentId = \"File size must be less than 2 MB.\";\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return (\r\n      !errors.name &&\r\n      !errors.companyName &&\r\n      !errors.email &&\r\n      !errors.phone &&\r\n      !errors.password &&\r\n      !errors.governmentId\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm()) {\r\n      if (error) {\r\n        dispatch(clearError());\r\n      }\r\n\r\n      const formDataWithFile = new FormData();\r\n      formDataWithFile.append(\"name\", formData.name);\r\n      formDataWithFile.append(\"companyName\", formData.companyName);\r\n      formDataWithFile.append(\"phone\", formData.phone);\r\n      formDataWithFile.append(\"email\", formData.email);\r\n      formDataWithFile.append(\"password\", formData.password);\r\n      if (formData.governmentId) {\r\n        formDataWithFile.append(\"governmentId\", formData.governmentId);\r\n      }\r\n\r\n      try {\r\n        await dispatch(register(formDataWithFile)).unwrap();\r\n        navigate(\"/recruiter/verify-otp\", { state: { email: formData.email } });\r\n      } catch (err) {\r\n       \r\n        console.error(\"Error registering:\", err);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100 p-4\">\r\n      <div className=\"w-full max-w-4xl overflow-hidden rounded-lg bg-white shadow-xl\">\r\n        <div className=\"flex flex-col md:flex-row\">\r\n          <div className=\"bg-purple-600 p-12 md:w-2/5\">\r\n            <div className=\"text-8xl font-bold text-white opacity-50\">4</div>\r\n            <div className=\"mt-4 text-4xl font-semibold text-white\">JOBS</div>\r\n          </div>\r\n          <div className=\"p-12 md:w-3/5\">\r\n            <h2 className=\"mb-6 text-3xl font-semibold text-purple-600\">\r\n              Recruiter Registration\r\n            </h2>\r\n            <form className=\"space-y-4\" onSubmit={handleSubmit}>\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700\">\r\n                  Full Name\r\n                </label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Full Name\"\r\n                  className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700\">\r\n                  Company Name\r\n                </label>\r\n                <input\r\n                  name=\"companyName\"\r\n                  value={formData.companyName}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Company Name\"\r\n                  className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700\">\r\n                  Phone\r\n                </label>\r\n                <input\r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Phone\"\r\n                  className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n                  required\r\n                />\r\n                {formErrors.phone && (\r\n                  <p className=\"mt-1 text-xs text-red-500\">\r\n                    {formErrors.phone}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n                  required\r\n                />\r\n                {formErrors.email && (\r\n                  <p className=\"mt-1 text-xs text-red-500\">\r\n                    {formErrors.email}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  name=\"password\"\r\n                  value={formData.password}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n                  required\r\n                />\r\n                {formErrors.password && (\r\n                  <p className=\"mt-1 text-xs text-red-500\">\r\n                    {formErrors.password}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700\">\r\n                  Government ID\r\n                </label>\r\n                <input\r\n                  name=\"governmentId\"\r\n                  type=\"file\"\r\n                  onChange={handleFileChange}\r\n                  className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-purple-500 focus:outline-none file:mr-4 file:rounded-md file:border-0 file:bg-purple-50 file:py-2 file:px-4 file:text-sm file:font-semibold file:text-purple-700 hover:file:bg-purple-100\"\r\n                  required\r\n                />\r\n                {formErrors.governmentId && (\r\n                  <p className=\"mt-1 text-xs text-red-500\">\r\n                    {formErrors.governmentId}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"w-full rounded-md bg-purple-600 py-2 text-sm font-semibold text-white transition duration-200 hover:bg-purple-700 focus:outline-none disabled:opacity-50\"\r\n              >\r\n                {loading ? \"Registering...\" : \"Register\"}\r\n              </button>\r\n              {error && <p className=\"mt-2 text-sm text-red-500\">{error}</p>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\nimport { User } from '../../types/auth';\n\ninterface SearchResultsProps {\n  results: User[];\n  onSelectUser: (userId: string) => void;\n}\n\nconst SearchResults: React.FC<SearchResultsProps> = ({ results, onSelectUser }) => {\n  return (\n    <div className=\"bg-white border border-gray-300 rounded-md shadow-lg max-h-80 overflow-y-auto\">\n      {results.map((user) => (\n        <div\n          key={user.id}\n          className=\"p-3 hover:bg-purple-50 cursor-pointer transition duration-150 ease-in-out\"\n          onClick={() => onSelectUser(user.id)}\n        >\n          <div className=\"flex items-center\">\n            {user.profileImage ? (\n              <img\n                src={user.profileImage}\n                alt={user.name}\n                className=\"w-10 h-10 rounded-full mr-3 object-cover\"\n              />\n            ) : (\n              <div className=\"w-10 h-10 rounded-full bg-purple-200 flex items-center justify-center mr-3\">\n                <span className=\"text-purple-600 font-semibold text-lg\">\n                  {user.name.charAt(0).toUpperCase()}\n                </span>\n              </div>\n            )}\n            <div>\n              <p className=\"font-semibold text-purple-800\">{user.name}</p>\n              <p className=\"text-sm text-gray-600\">{user.email}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../redux/slices/recruiterSlice\";\nimport { fetchJobPosts } from \"../../redux/slices/jobPostSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBriefcase,\n  faComments,\n  faUser,\n  faSearch,\n  faBars,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  searchUsersAndJobs,\n  clearSearch,\n} from \"../../redux/slices/recruiterSearchSlice\";\nimport { debounce } from \"lodash\";\nimport SearchResults from \"./RecruiterSearchResults\";\n\nconst RecruiterHeader = () => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const recruiterId = useSelector(\n    (state: RootState) => state.recruiter?.recruiter.id\n  );\n  const searchResults = useSelector(\n    (state: RootState) => state.recruiterSearch.users\n  );\n  const isLoading = useSelector(\n    (state: RootState) => state.recruiterSearch.loading\n  );\n  const searchRef = useRef<HTMLDivElement>(null);\n\n  const debouncedSearch = debounce((query: string) => {\n    if (query.length >= 3 && recruiterId) {\n      dispatch(searchUsersAndJobs({ query, userId: recruiterId }));\n    } else {\n      dispatch(clearSearch());\n    }\n  }, 300);\n\n  useEffect(() => {\n    debouncedSearch(searchQuery);\n    return () => {\n      debouncedSearch.cancel();\n    };\n  }, [debouncedSearch, searchQuery, recruiterId]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        searchRef.current &&\n        !searchRef.current.contains(event.target as Node)\n      ) {\n        setShowSearchResults(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n    setShowSearchResults(true);\n  };\n\n  const handleClearSearch = () => {\n    setSearchQuery(\"\");\n    dispatch(clearSearch());\n    setShowSearchResults(false);\n  };\n\n  const handleViewContestant = (contestantId: string) => {\n    navigate(`/recruiter/contestant/${contestantId}`);\n    setShowSearchResults(false);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/recruiter/login\");\n  };\n\n  const handleViewProfile = () => {\n    navigate(\"/recruiter/profile\");\n    setMenuOpen(false);\n  };\n\n  const handleAddJobs = () => {\n    if (recruiterId) {\n      dispatch(fetchJobPosts(recruiterId) as any);\n    }\n    navigate(\"/recruiter/jobs\");\n  };\n\n  const handleLogoClick = () => {\n    navigate(\"/recruiter/dashboard\");\n  };\n\n  const handleMessagesClick = () => {\n    navigate(\"/recruiter/messages\");\n  };\n\n  return (\n    <header className=\"bg-white shadow-md p-4 flex justify-between items-center h-16\">\n      {/* Logo Section */}\n      <div className=\"flex items-center\">\n        <button onClick={handleLogoClick}>\n          <img\n            src=\"../../../logo.png\"\n            alt=\"Logo\"\n            className=\"h-12 w-12 md:h-16 md:w-16\"\n          />\n        </button>\n        <span className=\"text-purple-700 font-semibold text-lg ml-2\">\n          4 Jobs Recruiter\n        </span>\n      </div>\n\n      {/* Search Bar Section */}\n      <div className=\"flex-grow mx-4 relative\" ref={searchRef}>\n        <div className=\"relative w-full max-w-lg mx-auto\">\n          <input\n            type=\"text\"\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            placeholder=\"Search users (min. 3 characters)\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n          />\n          {searchQuery && (\n            <button\n              className=\"absolute right-12 top-2 text-gray-500 hover:text-gray-700\"\n              onClick={handleClearSearch}\n            >\n              <FontAwesomeIcon icon={faTimes} className=\"h-5 w-5\" />\n            </button>\n          )}\n          <FontAwesomeIcon\n            icon={faSearch}\n            className=\"absolute right-3 top-3 text-gray-500\"\n          />\n        </div>\n        {showSearchResults && searchResults && searchResults.length > 0 && (\n          <div className=\"absolute z-10 w-full max-w-lg mx-auto mt-2\">\n            <SearchResults\n              results={searchResults}\n              onSelectUser={handleViewContestant}\n            />\n          </div>\n        )}\n        {isLoading && (\n          <div className=\"absolute z-10 w-full max-w-lg mx-auto mt-2 bg-white p-2 text-center\">\n            Loading...\n          </div>\n        )}\n        {!isLoading &&\n          showSearchResults &&\n          searchResults &&\n          searchResults.length === 0 && (\n            <div className=\"absolute z-10 w-full max-w-lg mx-auto mt-2 bg-white p-2 text-center\">\n              No results found\n            </div>\n          )}\n      </div>\n\n      {/* Mobile Menu Button */}\n      <button\n        className=\"md:hidden text-gray-600 focus:outline-none\"\n        onClick={() => setMenuOpen(!menuOpen)}\n      >\n        <FontAwesomeIcon icon={faBars} className=\"h-6 w-6\" />\n      </button>\n\n      {/* Navigation Items for larger screens */}\n      <nav className=\"hidden md:flex space-x-6 items-center\">\n        <button\n          onClick={handleAddJobs}\n          className=\"flex items-center text-purple-600 hover:text-gray-600 mb-2\"\n        >\n          <FontAwesomeIcon icon={faBriefcase} className=\"h-6 w-6 mr-2\" />\n          <span className=\"text-sm\">ADD JOBS</span>\n        </button>\n        <button\n          onClick={handleMessagesClick}\n          className=\"flex items-center text-purple-600 hover:text-gray-600 mb-2\"\n        >\n          <FontAwesomeIcon icon={faComments} className=\"h-6 w-6 mr-2\" />\n          <span className=\"text-sm\">Messages</span>\n        </button>\n        <button\n          className=\"text-purple-600 hover:text-gray-600\"\n          onClick={handleViewProfile}\n        >\n          <FontAwesomeIcon icon={faUser} className=\"h-6 w-6\" />\n          <span className=\"text-xs\">Profile</span>\n        </button>\n        <button\n          className=\"text-purple-600 hover:text-gray-600\"\n          onClick={handleLogout}\n        >\n          <FontAwesomeIcon icon={faUser} className=\"h-6 w-6\" />\n          <span className=\"text-xs\">Logout</span>\n        </button>\n      </nav>\n\n      {/* Dropdown Menu for Small Screens */}\n      {menuOpen && (\n        <div className=\"absolute top-16 right-0 w-48 bg-white shadow-lg rounded-md p-4 md:hidden\">\n          <button\n            className=\"flex items-center text-purple-600 hover:text-gray-600 mb-2\"\n            onClick={handleAddJobs}\n          >\n            <FontAwesomeIcon icon={faBriefcase} className=\"h-6 w-6 mr-2\" />\n            <span className=\"text-sm\">ADD JOBS</span>\n          </button>\n          <button\n            className=\"flex items-center text-purple-600 hover:text-gray-600 mb-2\"\n            onClick={handleMessagesClick}\n          >\n            <FontAwesomeIcon icon={faComments} className=\"h-6 w-6 mr-2\" />\n            <span className=\"text-sm\">Messages</span>\n          </button>\n          <button\n            className=\"text-purple-600 hover:text-gray-600 mb-2\"\n            onClick={handleViewProfile}\n          >\n            <FontAwesomeIcon icon={faUser} className=\"h-6 w-6 mr-2\" />\n            <span className=\"text-sm\">Profile</span>\n          </button>\n          <button\n            className=\"flex items-center text-purple-600 hover:text-gray-600\"\n            onClick={handleLogout}\n          >\n            <FontAwesomeIcon icon={faUser} className=\"h-6 w-6 mr-2\" />\n            <span className=\"text-sm\">Logout</span>\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default RecruiterHeader;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectRecruiter } from '../../redux/slices/recruiterSlice';\nimport { User, Briefcase, MapPin, CreditCard, Calendar } from 'lucide-react';\n\nconst Sidebar = () => {\n  const { recruiter } = useSelector(selectRecruiter);\n\n  return (\n    <aside className=\"hidden md:block shadow-md rounded-lg p-4 bg-white\">\n      <div className=\"text-center mb-4\">\n        <div className=\"w-20 h-20 rounded-full bg-purple-100 mx-auto mb-2 flex items-center justify-center\">\n          <User size={40} className=\"text-purple-600\" />\n        </div>\n        <div className=\"text-purple-800 text-xl md:text-2xl font-bold\">\n          {recruiter?.name || 'Recruiter'}\n        </div>\n        <p className=\"text-purple-600 mt-2 text-xs md:text-sm lg:text-base\">{recruiter?.email}</p>\n      </div>\n      <div className=\"border-t border-purple-200 mt-4 pt-4\">\n        <div className=\"flex items-center text-purple-700 mb-2 text-sm md:text-base\">\n          <Briefcase size={16} className=\"mr-2\" />\n          <p>Company: <span className=\"font-bold text-purple-900\">{recruiter?.companyName}</span></p>\n        </div>\n        <div className=\"flex items-center text-purple-700 mb-2\">\n          <MapPin size={16} className=\"mr-2\" />\n          <p>Location: <span className=\"font-bold text-purple-900\">{recruiter?.location}</span></p>\n        </div>\n        <div className=\"flex items-center text-purple-700 mb-2\">\n          <CreditCard size={16} className=\"mr-2\" />\n          <p>Subscribed: <span className=\"font-bold text-purple-900\">{recruiter?.subscribed ? \"Yes\" : \"No\"}</span></p>\n        </div>\n        <div className=\"flex items-center text-purple-700\">\n          <Calendar size={16} className=\"mr-2\" />\n          <p>Plan: <span className=\"font-bold text-purple-900\">{recruiter?.subscribed ? recruiter?.planDuration : \"No plans subscribed\"}</span></p>\n        </div>\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { BasicJobPost } from \"../../types/jobPostTypes\";\nimport { Link } from \"react-router-dom\";\nimport { Briefcase, MapPin, IndianRupee, Clock } from \"lucide-react\";\n\ninterface JobListProps {\n  jobs: BasicJobPost[];\n}\n\nconst JobList: React.FC<JobListProps> = ({ jobs }) => {\n  return (\n    <div className=\"space-y-6\">\n      {jobs.map((job) => (\n        <div\n          key={job._id}\n          className=\"bg-white shadow-md rounded-lg p-6 hover:shadow-lg transition-shadow duration-300 border-l-4 border-purple-600\"\n        >\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <h3 className=\"text-xl font-semibold text-purple-800 mb-2\">\n                {job.title}\n              </h3>\n              <p className=\"text-purple-600 mb-2\">{job.company?.name}</p>\n              <div className=\"flex flex-wrap gap-4 text-sm text-purple-500 mb-4\">\n                <div className=\"flex items-center\">\n                  <MapPin size={16} className=\"mr-1\" />\n                  {job.location}\n                </div>\n                <div className=\"flex items-center\">\n                  <Briefcase size={16} className=\"mr-1\" />\n                  {job.wayOfWork}\n                </div>\n                <div className=\"flex items-center\">\n                  <IndianRupee size={16} className=\"mr-1\" />₹\n                  {job.salaryRange.min.toLocaleString()} - ₹\n                  {job.salaryRange.max.toLocaleString()}\n                </div>\n              </div>\n            </div>\n            <div className=\"text-sm text-purple-500 flex items-center\">\n              Posted on : <Clock size={16} className=\"mr-1\" />\n              {new Date(job.createdAt || \"\").toLocaleDateString()}\n            </div>\n          </div>\n          <p className=\"text-gray-600 mb-4 line-clamp-2\">{job.description}</p>\n          <div className=\"flex flex-wrap gap-2 mb-4\">\n            {job.skillsRequired.slice(0, 5).map((skill, index) => (\n              <span\n                key={index}\n                className=\"bg-purple-100 text-purple-800 text-xs font-medium px-2.5 py-0.5 rounded\"\n              >\n                {skill}\n              </span>\n            ))}\n            {job.skillsRequired.length > 5 && (\n              <span className=\"text-purple-500 text-xs\">\n                +{job.skillsRequired.length - 5} more\n              </span>\n            )}\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <Link\n              to={`/recruiter/jobPost/${job._id}`}\n              className=\"text-purple-600 hover:text-purple-800 font-medium text-sm\"\n            >\n              View Details\n            </Link>\n            <span\n              className={`px-2 py-1 rounded text-xs font-semibold ${\n                job.status === \"Open\"\n                  ? \"bg-green-100 text-green-800\"\n                  : \"bg-red-100 text-red-800\"\n              }`}\n            >\n              {job.status}\n            </span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default JobList;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { fetchAllJobPosts } from \"../../redux/slices/jobPostSlice\";\nimport JobList from \"./RecruiterJobList\";\n\nconst MainContent: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { posts, loading, error } = useSelector(\n    (state: RootState) => state.jobPosts\n  );\n\n  useEffect(() => {\n    dispatch(fetchAllJobPosts());\n  }, [dispatch]);\n\n  if (loading) {\n    return <div className=\"text-center py-4 text-purple-600\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center py-4 text-red-500\">Error: {error}</div>;\n  }\n\n  return (\n    <main className=\"container mx-auto px-4 py-4 md:py-8 bg-purple-50\">\n      <h2 className=\"text-2xl md:text-3xl lg:text-4xl font-bold mb-4 md:mb-6 text-purple-800\">Job Listings</h2>\n      <div className=\"bg-white shadow-lg rounded-lg p-4 md:p-6\">\n        {posts.length > 0 ? (\n          <JobList jobs={posts} />\n        ) : (\n          <p className=\"text-center text-purple-600 text-sm md:text-base\">\n            No job postings available at the moment.\n          </p>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default MainContent;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\nimport { logout, selectRecruiter } from \"../../redux/slices/recruiterSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"./RecruiterHeader\";\nimport Sidebar from \"./RecruiterSidebar\";\nimport MainContent from \"./RecruiterMain\";\n\nconst Dashboard: React.FC = () => {\n  const { isApproved } = useSelector((state: RootState) => state.recruiter);\n  const { recruiter } = useSelector(selectRecruiter);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/recruiter/login\");\n  };\n\n  if (!isApproved) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"bg-white p-8 rounded-lg shadow-lg text-center\">\n          <h1 className=\"text-2xl md:text-3xl font-bold text-purple-600\">\n            Approval Pending\n          </h1>\n          <p className=\"text-gray-600 mt-4 text-sm md:text-base\">\n            Your recruiter account is under review. You will be able to access\n            the dashboard once approved.\n          </p>\n\n          {/* Logout Button */}\n          <button\n            onClick={handleLogout}\n            className=\"mt-6 bg-purple-600 text-white py-2 px-4 rounded-lg shadow hover:bg-purple-700 transition duration-200 text-sm md:text-base\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50\">\n      <Header />\n\n      <div className=\"grid grid-cols-12 gap-4 flex-1 p-4\">\n        <div className=\"hidden lg:block lg:col-span-2\">\n          <Sidebar />\n        </div>\n\n        <main className=\"col-span-12 lg:col-span-10 bg-white p-6 rounded-lg shadow-md\">\n          <h1 className=\"text-2xl md:text-3xl font-bold mb-4 text-purple-600\">\n            Welcome, {recruiter?.name}!\n          </h1>\n          <MainContent />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { RootState, AppDispatch } from '../../redux/store';\nimport { logout, refreshRecruiterToken } from '../../redux/slices/recruiterSlice';\n\ninterface RecruiterPrivateRouteProps {\n  children: React.ReactNode;\n}\n\nconst RecruiterPrivateRoute: React.FC<RecruiterPrivateRouteProps> = ({ children }) => {\n  const { isAuthenticatedRecruiter } = useSelector((state: RootState) => state.recruiter);\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('recruiterToken');\n\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (!isAuthenticatedRecruiter && token) {\n        try {\n          await dispatch(refreshRecruiterToken()).unwrap();\n        } catch (error) {\n          dispatch(logout());\n          navigate('/recruiter/login');\n        }\n      }\n    };\n\n    verifyToken();\n  }, [isAuthenticatedRecruiter, token, dispatch, navigate]);\n\n  if (!isAuthenticatedRecruiter && !token) {\n    return <Navigate to=\"/recruiter/login\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default RecruiterPrivateRoute;\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { AppDispatch, RootState } from '../../redux/store';\r\nimport { verifyOtp } from '../../redux/slices/recruiterSlice';\r\nimport { sendOtpApi } from '../../api/recruiterApi'; \r\nimport '../../styles/recruiter/otpVerification.css';\r\n\r\nconst VerifyOtp = () => {\r\n  const [otp, setOtp] = useState('');\r\n  const [timer, setTimer] = useState(30); \r\n  const [isTimerActive, setIsTimerActive] = useState(true);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  const { error, isAuthenticatedRecruiter } = useSelector((state: RootState) => state.recruiter);\r\n  const email = location.state?.email || '';\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setOtp(e.target.value);\r\n  };\r\n\r\n  const handleVerifyOtp = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await dispatch(verifyOtp({ email, otp }));\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n    }\r\n  };\r\n\r\n  const handleResendOtp = async () => {\r\n    try {\r\n      await sendOtpApi(email); \r\n      setIsTimerActive(true); \r\n      setTimer(30); \r\n    } catch (error) {\r\n      console.error('Failed to resend OTP:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let countdown: NodeJS.Timeout;\r\n    if (isTimerActive && timer > 0) {\r\n      countdown = setTimeout(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n    } else if (timer === 0) {\r\n      setIsTimerActive(false);\r\n    }\r\n    return () => clearTimeout(countdown);\r\n  }, [isTimerActive, timer]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticatedRecruiter) {\r\n      navigate('/recruiter/dashboard');\r\n    }\r\n  }, [isAuthenticatedRecruiter, navigate]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100 p-4\">\r\n      <div className=\"w-full max-w-md overflow-hidden rounded-lg bg-white shadow-xl p-8\">\r\n        <h2 className=\"mb-6 text-3xl font-semibold text-purple-600 text-center\">Verify OTP</h2>\r\n        <form onSubmit={handleVerifyOtp} className=\"space-y-4\">\r\n          <input\r\n            name=\"otp\"\r\n            value={otp}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter OTP\"\r\n            required\r\n            className=\"w-full rounded-md border border-gray-300 px-4 py-2 text-sm focus:border-purple-500 focus:outline-none\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isTimerActive}\r\n            className={`w-full rounded-md py-2 text-sm font-semibold text-white transition duration-200 ${\r\n              isTimerActive ? 'bg-purple-600 hover:bg-purple-700' : 'bg-gray-300 cursor-not-allowed'\r\n            }`}\r\n          >\r\n            Verify OTP\r\n          </button>\r\n\r\n          {error && <p className=\"mt-2 text-sm text-red-500 text-center\">{error}</p>}\r\n        </form>\r\n\r\n        <div className=\"mt-6 text-center\">\r\n          {isTimerActive ? (\r\n            <p className=\"text-gray-700\">Resend OTP in {timer} seconds</p>\r\n          ) : (\r\n            <button\r\n              onClick={handleResendOtp}\r\n              className=\"mt-2 rounded-md bg-purple-600 py-2 text-sm font-semibold text-white hover:bg-purple-700 transition duration-200\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyOtp;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchRecruiters,\n  approveRecruiter,\n} from \"../../redux/slices/adminSlice\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { Navigate } from \"react-router-dom\";\nimport Header from \"./AdminHeader\";\nimport Sidebar from \"./AdminSidebar\";\nimport { FaCheck, FaDownload, FaChevronLeft, FaChevronRight, FaSearch, FaTimes } from \"react-icons/fa\";\nimport \"../../styles/admin/RecruiterList.css\";\n\nconst AdminRecruiterList: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const {\n    recruiters: fetchedRecruiters,\n    error,\n    loading,\n    isAuthenticatedAdmin,\n    token,\n  } = useSelector((state: RootState) => state.admin);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 8;\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    if (isAuthenticatedAdmin && token) {\n      dispatch(fetchRecruiters());\n    }\n  }, [dispatch, isAuthenticatedAdmin, token]);\n\n  const handleApprove = async (recruiterId: string) => {\n    try {\n      await dispatch(approveRecruiter(recruiterId)).unwrap();\n      dispatch(fetchRecruiters());\n    } catch (err) {\n      console.error(\"Failed to approve recruiter\", err);\n    }\n  };\n\n  const handleDownloadGovernmentId = (url: string, recruiterName: string) => {\n    const anchor = document.createElement(\"a\");\n    const fullurl = `${url}`;\n    anchor.href = fullurl;\n    anchor.setAttribute(\"download\", `${recruiterName}-government-id`);\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n  };\n\n  const totalPages = Math.ceil(fetchedRecruiters.length / itemsPerPage);\n  const filteredRecruiters = fetchedRecruiters.filter((recruiter) =>\n    recruiter.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    recruiter.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleClearSearch = () => {\n    setSearchTerm('');\n  };\n\n  if (!isAuthenticatedAdmin) {\n    return <Navigate to=\"/admin/login\" />;\n  }\n\n  return (\n    <div className=\"flex flex-col md:flex-row min-h-screen bg-gray-100\">\n      <Sidebar />\n      <div className=\"flex-1 flex flex-col\">\n        <Header />\n        <main className=\"p-2 sm:p-4 md:p-6 flex-grow overflow-auto\">\n          <div className=\"bg-white p-3 sm:p-4 md:p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-xl sm:text-2xl font-semibold mb-4 sm:mb-6 text-purple-800\">Recruiter List</h2>\n            {loading && <p className=\"text-purple-600\">Loading...</p>}\n            {error && <p className=\"text-red-500\">{error}</p>}\n\n            <div className=\"mb-4 flex flex-col sm:flex-row\">\n              <div className=\"relative flex-grow mb-2 sm:mb-0 sm:mr-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search recruiters...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full px-3 sm:px-4 py-2 text-sm sm:text-base border rounded-lg text-gray-700 focus:outline-none focus:border-purple-500\"\n                />\n                {searchTerm && (\n                  <button\n                    onClick={handleClearSearch}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-600 hover:text-gray-800\"\n                  >\n                    <FaTimes className=\"text-sm sm:text-base\" />\n                  </button>\n                )}\n              </div>\n              <button className=\"bg-purple-500 text-white px-3 sm:px-4 py-2 rounded-lg hover:bg-purple-600 text-sm sm:text-base\">\n                <FaSearch className=\"inline mr-1\" /> Search\n              </button>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full bg-white text-sm sm:text-base\">\n                <thead className=\"bg-purple-100\">\n                  <tr>\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">Name</th>\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">Email</th>\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">Phone</th>\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">Status</th>\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">Actions</th>\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">Government ID</th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-purple-200\">\n                  {filteredRecruiters.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((recruiter) => (\n                    <tr key={recruiter._id} className=\"hover:bg-purple-50\">\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">{recruiter.name}</td>\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">{recruiter.email}</td>\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">{recruiter.phone}</td>\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                          recruiter.isApproved ? \"bg-green-100 text-green-800\" : \"bg-yellow-100 text-yellow-800\"\n                        }`}>\n                          {recruiter.isApproved ? \"Approved\" : \"Pending\"}\n                        </span>\n                      </td>\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">\n                        {!recruiter.isApproved && (\n                          <button\n                            onClick={() => handleApprove(recruiter.id)}\n                            className=\"bg-purple-500 hover:bg-purple-600 text-white font-bold py-1 sm:py-2 px-2 sm:px-4 rounded text-xs sm:text-sm inline-flex items-center\"\n                          >\n                            <FaCheck className=\"mr-1 sm:mr-2\" /> Approve\n                          </button>\n                        )}\n                      </td>\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">\n                        {recruiter.governmentId ? (\n                          <button\n                            onClick={() => handleDownloadGovernmentId(recruiter.governmentId, recruiter.name)}\n                            className=\"bg-purple-400 hover:bg-purple-800 text-white font-bold py-1 sm:py-2 px-2 sm:px-4 rounded text-xs sm:text-sm inline-flex items-center\"\n                          >\n                            <FaDownload className=\"mr-1 sm:mr-2\" /> Download ID\n                          </button>\n                        ) : (\n                          <span className=\"text-gray-500 text-xs sm:text-sm\">No ID uploaded</span>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n\n            {/* Pagination Controls */}\n            <div className=\"flex flex-col sm:flex-row justify-between items-center mt-4 sm:mt-6\">\n              <div className=\"flex space-x-2 mb-2 sm:mb-0\">\n                <button\n                  onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\n                  className=\"bg-purple-500 text-white px-3 sm:px-4 py-1 sm:py-2 rounded hover:bg-purple-600 disabled:opacity-50 flex items-center text-xs sm:text-sm\"\n                  disabled={currentPage === 1}\n                >\n                  <FaChevronLeft className=\"mr-1 sm:mr-2\" /> Previous\n                </button>\n                <button\n                  onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\n                  className=\"bg-purple-500 text-white px-3 sm:px-4 py-1 sm:py-2 rounded hover:bg-purple-600 disabled:opacity-50 flex items-center text-xs sm:text-sm\"\n                  disabled={currentPage === totalPages}\n                >\n                  Next <FaChevronRight className=\"ml-1 sm:ml-2\" />\n                </button>\n              </div>\n              <span className=\"text-xs sm:text-sm text-purple-600\">\n                Page {currentPage} of {totalPages}\n              </span>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminRecruiterList;\n","import React from 'react';\r\nimport '../styles/LoadingSpinner.css'; \r\n\r\nconst LoadingSpinner: React.FC = () => {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../../redux/store\";\r\nimport Header from \"../user/Header\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { fetchUserProfile } from \"../../redux/slices/authSlice\";\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\nimport {\r\n  User,\r\n  Info,\r\n  Calendar,\r\n  Award,\r\n  Briefcase,\r\n  FileText,\r\n  Code,\r\n  ExternalLink,\r\n} from \"lucide-react\";\r\n\r\ninterface UserProfileProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst UserProfile: React.FC<UserProfileProps> = ({ children }) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const { user, loading } = useSelector((state: RootState) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(fetchUserProfile(userId));\r\n    }\r\n  }, [dispatch, userId]);\r\n\r\n  const handleUpdateProfile = () => {\r\n    if (userId) {\r\n      navigate(`/profile/update/${userId}`);\r\n    }\r\n  };\r\n\r\n  const handleViewPosts = () => {\r\n    if (userId) {\r\n      navigate(`/posts/user/${userId}`);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"text-center text-gray-600 mt-10\">\r\n        No user data available.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n      <Header />\r\n      <div className=\"container mx-auto m-5 px-4 sm:px-8 md:px-16 lg:px-24 xl:px-32\">\r\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"bg-gradient-to-r from-purple-600 to-purple-300 p-6 text-white\">\r\n            <div className=\"flex flex-col md:flex-row items-center\">\r\n              <img\r\n                src={\r\n                  user?.profileImage\r\n                    ? `${user.profileImage}`\r\n                    : \"/default-profile.png\"\r\n                }\r\n                alt=\"Profile\"\r\n                className=\"rounded-full w-20 h-20 md:w-24 md:h-24 lg:w-32 lg:h-32 border-4 border-white shadow-lg\"\r\n              />\r\n              <div className=\"md:ml-6 mt-4 md:mt-0 text-center md:text-left\">\r\n                <h2 className=\"text-2xl md:text-3xl font-bold\">{user?.name}</h2>\r\n                <p className=\"text-base md:text-lg mt-1\">{user?.email}</p>\r\n                <p className=\"text-base md:text-lg mt-1\">\r\n                  {user?.phone ? user.phone : \"Phone number not provided\"}\r\n                </p>\r\n                <div className=\"mt-4 space-x-4\">\r\n                  <button\r\n                    className=\"px-4 py-2 text-sm sm:text-base bg-white text-purple-600 rounded-full hover:bg-gray-100 transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-50\"\r\n                    onClick={handleUpdateProfile}\r\n                  >\r\n                    Update Profile\r\n                  </button>\r\n                  <button\r\n                    className=\"px-4 py-2 text-sm sm:text-base bg-purple-500 text-white rounded-full hover:bg-purple-600 transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-50\"\r\n                    onClick={handleViewPosts}\r\n                  >\r\n                    View Posts\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6\">\r\n            <div className=\"grid grid-cols-1 gap-6\">\r\n              <LongProfileDetail\r\n                icon={<Info />}\r\n                title=\"Bio\"\r\n                content={user?.bio || \"No bio available.\"}\r\n              />\r\n              <LongProfileDetail\r\n                icon={<User />}\r\n                title=\"About\"\r\n                content={user?.about || \"No details available.\"}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\r\n              <ProfileDetail\r\n                icon={<Calendar />}\r\n                title=\"Date of Birth\"\r\n                content={\r\n                  user?.dateOfBirth\r\n                    ? new Date(user.dateOfBirth).toLocaleDateString()\r\n                    : \"Not specified\"\r\n                }\r\n              />\r\n              <ProfileDetail\r\n                icon={<User />}\r\n                title=\"Gender\"\r\n                content={user?.gender || \"Not specified\"}\r\n              />\r\n              <ProfileDetail\r\n                icon={<Award />}\r\n                title=\"Skills\"\r\n                content={user?.skills?.join(\", \") || \"No skills listed.\"}\r\n              />\r\n            </div>\r\n\r\n            <Section title=\"Certificates\" icon={<Award />}>\r\n              {user?.certificates?.length ? (\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {user.certificates.map((certificate) => (\r\n                    <CertificateCard\r\n                      key={certificate.id}\r\n                      certificate={certificate}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-gray-600\">No certificates listed.</p>\r\n              )}\r\n            </Section>\r\n\r\n            <Section title=\"Resume\" icon={<FileText />}>\r\n              {user?.resume ? (\r\n                <a\r\n                  href={`${user.resume}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"inline-flex items-center px-4 py-2 bg-purple-600 text-white rounded-full hover:bg-purple-700 transition duration-300\"\r\n                >\r\n                  <FileText className=\"mr-2\" size={20} />\r\n                  Download Resume\r\n                </a>\r\n              ) : (\r\n                <p className=\"text-gray-600\">No resume uploaded.</p>\r\n              )}\r\n            </Section>\r\n\r\n            <Section title=\"Projects\" icon={<Code />}>\r\n              {user?.projects?.length ? (\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {user.projects.map((project) => (\r\n                    <ProjectCard key={project.id} project={project} />\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-gray-600\">No projects listed.</p>\r\n              )}\r\n            </Section>\r\n\r\n            <Section title=\"Experience\" icon={<Briefcase />}>\r\n              {user?.experiences?.length ? (\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {user.experiences.map((exp) => (\r\n                    <ExperienceCard key={exp.id} experience={exp} />\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-gray-600\">No experience listed.</p>\r\n              )}\r\n            </Section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {children && <div className=\"mt-8\">{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LongProfileDetail: React.FC<{\r\n  icon: React.ReactNode;\r\n  title: string;\r\n  content: string;\r\n}> = ({ icon, title, content }) => (\r\n  <div className=\"p-6 bg-gray-50 rounded-lg shadow-md\">\r\n    <h4 className=\"font-semibold text-xl text-gray-800 flex items-center mb-4\">\r\n      <span className=\"mr-2 text-purple-600\">{icon}</span>\r\n      {title}\r\n    </h4>\r\n    <p className=\"text-gray-700 whitespace-pre-wrap\">{content}</p>\r\n  </div>\r\n);\r\n\r\nconst ProfileDetail: React.FC<{\r\n  icon: React.ReactNode;\r\n  title: string;\r\n  content: string;\r\n}> = ({ icon, title, content }) => (\r\n  <div className=\"p-4 bg-gray-50 rounded-lg shadow-md flex items-start\">\r\n    <div className=\"mr-4 text-purple-600\">{icon}</div>\r\n    <div>\r\n      <h4 className=\"font-semibold text-lg text-gray-800\">{title}</h4>\r\n      <p className=\"text-gray-600 h-auto w-auto mt-1\">{content}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Section: React.FC<{\r\n  title: string;\r\n  icon: React.ReactNode;\r\n  children: React.ReactNode;\r\n}> = ({ title, icon, children }) => (\r\n  <div className=\"mt-8\">\r\n    <h3 className=\"text-2xl font-bold mb-4 flex items-center text-gray-800\">\r\n      <span className=\"mr-2 text-purple-600\">{icon}</span>\r\n      {title}\r\n    </h3>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst CertificateCard: React.FC<{ certificate: any }> = ({ certificate }) => (\r\n  <div className=\"border rounded-lg shadow-md overflow-hidden transition-transform transform hover:scale-105\">\r\n    <div className=\"p-4 bg-gray-50\">\r\n      <h4 className=\"font-semibold text-md text-gray-800\">\r\n        {certificate.name}\r\n      </h4>\r\n      <p className=\"text-sm text-gray-600 mt-1\">\r\n        Issued by {certificate.issuingOrganization} on{\" \"}\r\n        {new Date(certificate.dateOfIssue).toLocaleDateString()}\r\n      </p>\r\n    </div>\r\n    {certificate.imageUrl && (\r\n      <img\r\n        src={`${certificate.imageUrl}`}\r\n        alt={certificate.name}\r\n        className=\"w-full h-48 object-cover\"\r\n      />\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst ProjectCard: React.FC<{ project: any }> = ({ project }) => (\r\n  <div className=\"border rounded-lg shadow-md overflow-hidden transition-transform transform hover:scale-105\">\r\n    <div className=\"p-4 bg-gray-50\">\r\n      <h4 className=\"font-semibold text-md text-gray-800\">{project.name}</h4>\r\n      <p className=\"text-sm text-gray-600 mt-1\">{project.description}</p>\r\n      <a\r\n        href={project.link}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"text-purple-600 hover:text-purple-800 mt-2 inline-flex items-center\"\r\n      >\r\n        <ExternalLink size={16} className=\"mr-1\" />\r\n        View Project\r\n      </a>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst ExperienceCard: React.FC<{ experience: any }> = ({ experience }) => (\r\n  <div className=\"border rounded-lg shadow-md overflow-hidden transition-transform transform hover:scale-105\">\r\n    <div className=\"p-4 bg-gray-50\">\r\n      <h4 className=\"font-semibold text-md text-gray-800\">\r\n        {experience.position}\r\n      </h4>\r\n      <p className=\"text-sm text-gray-600 mt-1\">\r\n        Company: {experience.company}\r\n      </p>\r\n      <p className=\"text-xs text-gray-500 mt-1\">\r\n        Duration: {experience.startDate} - {experience.endDate}\r\n      </p>\r\n      <p className=\"text-sm text-gray-600 mt-2\">{experience.description}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default UserProfile;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUserProfile } from '../../redux/slices/authSlice';\r\nimport { RootState, AppDispatch } from '../../redux/store';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Profile: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: user?.name || '',\r\n    email: user?.email || '',\r\n    phone: user?.phone?.toString() || '',\r\n    bio: user?.bio || '',\r\n    about: user?.about || '',\r\n    dateOfBirth: user?.dateOfBirth?.split('T')[0] || '',\r\n    gender: user?.gender || '',\r\n    skills: user?.skills?.join(', ') || '',\r\n    profileImage: null as File | null,\r\n  });\r\n\r\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    setErrors({ ...errors, [name]: '' });\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      setFormData({ ...formData, profileImage: files[0] });\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    let isValid = true;\r\n    const newErrors: { [key: string]: string } = {};\r\n\r\n    if (formData.name.length < 2 || formData.name.length > 50) {\r\n      newErrors.name = 'Name must be between 2 and 50 characters.';\r\n      isValid = false;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address.';\r\n      isValid = false;\r\n    }\r\n\r\n    const phoneRegex = /^\\d{10}$/;\r\n    if (formData.phone && !phoneRegex.test(formData.phone)) {\r\n      newErrors.phone = 'Please enter a valid 10-digit phone number.';\r\n      isValid = false;\r\n    }\r\n\r\n    if (formData.bio.length > 1000) {\r\n      newErrors.bio = 'Bio must not exceed 1000 characters.';\r\n      isValid = false;\r\n    }\r\n\r\n    if (formData.about.length > 1000) {\r\n      newErrors.about = 'About section must not exceed 1000 characters.';\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.dateOfBirth) {\r\n      newErrors.dateOfBirth = 'Date of Birth is required.';\r\n      isValid = false;\r\n    }\r\n\r\n    const skillsArray = formData.skills.split(',').map(skill => skill.trim());\r\n    if (skillsArray.length > 10) {\r\n      newErrors.skills = 'You can list a maximum of 10 skills.';\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      if (user) {\r\n        const dataToSubmit = new FormData();\r\n        Object.entries(formData).forEach(([key, value]) => {\r\n          if (value !== null) {\r\n            dataToSubmit.append(key, value);\r\n          }\r\n        });\r\n\r\n        try {\r\n          await dispatch(updateUserProfile({ userId: user.id, formData: dataToSubmit }));\r\n          toast.success('Profile updated successfully!');\r\n        } catch (error) {\r\n          toast.error('Failed to update profile. Please try again later.');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div>\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border ${errors.name ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n          />\r\n          {errors.name && <p className=\"text-red-500 text-sm\">{errors.name}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border ${errors.email ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n          />\r\n          {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">Phone</label>\r\n          <input\r\n            type=\"phone\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={formData.phone}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border ${errors.phone ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n          />\r\n          {errors.phone && <p className=\"text-red-500 text-sm\">{errors.phone}</p>}\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700\">Bio</label>\r\n          <textarea\r\n            id=\"bio\"\r\n            name=\"bio\"\r\n            rows={3}\r\n            value={formData.bio}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border ${errors.bio ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n          />\r\n          {errors.bio && <p className=\"text-red-500 text-sm\">{errors.bio}</p>}\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">About</label>\r\n          <textarea\r\n            id=\"about\"\r\n            name=\"about\"\r\n            rows={5}\r\n            value={formData.about}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border ${errors.about ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n          />\r\n          {errors.about && <p className=\"text-red-500 text-sm\">{errors.about}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateOfBirth\" className=\"block text-sm font-medium text-gray-700\">Date of Birth</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"dateOfBirth\"\r\n            name=\"dateOfBirth\"\r\n            value={formData.dateOfBirth}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border ${errors.dateOfBirth ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n          />\r\n          {errors.dateOfBirth && <p className=\"text-red-500 text-sm\">{errors.dateOfBirth}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"gender\" className=\"block text-sm font-medium text-gray-700\">Gender</label>\r\n          <select\r\n            id=\"gender\"\r\n            name=\"gender\"\r\n            value={formData.gender}\r\n            onChange={handleChange}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"\">Select Gender</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label htmlFor=\"skills\" className=\"block text-sm font-medium text-gray-700\">Skills (comma-separated)</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"skills\"\r\n            name=\"skills\"\r\n            value={formData.skills}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border ${errors.skills ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n          />\r\n          {errors.skills && <p className=\"text-red-500 text-sm\">{errors.skills}</p>}\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label htmlFor=\"profileImage\" className=\"block text-sm font-medium text-gray-700\">Profile Image</label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"profileImage\"\r\n            name=\"profileImage\"\r\n            onChange={handleFileChange}\r\n            accept=\"image/*\"\r\n            className=\"mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-purple-50 file:text-purple-700 hover:file:bg-purple-100\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full inline-flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\"\r\n        >\r\n          Update Profile\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUserResume } from '../../redux/slices/authSlice';\r\nimport { RootState, AppDispatch } from '../../redux/store';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Upload } from 'lucide-react';\r\n\r\nconst Resume: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n  const [resume, setResume] = useState<File | null>(null);\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      const selectedFile = files[0];\r\n      const allowedTypes = ['application/pdf'];\r\n      if (!allowedTypes.includes(selectedFile.type)) {\r\n        toast.error(\"Only PDF files are allowed.\");\r\n        return;\r\n      }\r\n      if (selectedFile.size > 5 * 1024 * 1024) { // 5 MB\r\n        toast.error(\"File size must be less than 5 MB.\");\r\n        return;\r\n      }\r\n      setResume(selectedFile);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (user && resume) {\r\n      try {\r\n        await dispatch(updateUserResume({ userId: user.id, resume }));\r\n        toast.success('Resume updated successfully!');\r\n      } catch (error) {\r\n        toast.error('Failed to update resume. Please try again later.');\r\n      }\r\n    } else {\r\n      toast.error('Please select a resume file to upload.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 flex flex-col items-center justify-center\">\r\n        <Upload className=\"w-12 h-12 text-gray-400 mb-4\" />\r\n        <p className=\"text-sm text-gray-600 mb-2\">Click to select a file</p>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n          accept=\".pdf,.doc,.docx\"\r\n          className=\"hidden\"\r\n          id=\"resume-upload\"\r\n        />\r\n        <label\r\n          htmlFor=\"resume-upload\"\r\n          className=\"px-4 py-2 bg-purple-400 text-dark rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 cursor-pointer\"\r\n        >\r\n          Select File\r\n        </label>\r\n        {resume && (\r\n          <p className=\"mt-2 text-sm text-gray-600\">Selected file: {resume.name}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"px-4 py-2 bg-purple-500 text-dark rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n          disabled={!resume}\r\n        >\r\n          Upload Resume\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUserProjects } from '../../redux/slices/authSlice';\r\nimport { RootState, AppDispatch } from '../../redux/store';\r\nimport { Project } from '../../types/auth';\r\nimport { toast } from 'react-toastify';\r\nimport { Plus, X } from 'lucide-react';\r\n\r\nconst Projects: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [errors, setErrors] = useState<{ [key: number]: { name?: string; link?: string; description?: string; imageUrl?: string } }>({});\r\n\r\n  useEffect(() => {\r\n    if (user && Array.isArray(user.projects)) {\r\n      setProjects(user.projects);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleChange = (index: number, field: keyof Project, value: string) => {\r\n    const updatedProjects = projects.map((project, i) =>\r\n      i === index ? { ...project, [field]: value } : project\r\n    );\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  const addProject = () => {\r\n    setProjects([...projects, { id: Date.now().toString(), name: '', description: '', link: '', imageUrl: '' }]);\r\n  };\r\n\r\n  const removeProject = (index: number) => {\r\n    const updatedProjects = projects.filter((_, i) => i !== index);\r\n    setProjects(updatedProjects);\r\n    setErrors((prevErrors) => {\r\n      const newErrors = { ...prevErrors };\r\n      delete newErrors[index];\r\n      return newErrors;\r\n    });\r\n  };\r\n\r\n  const validateProjects = () => {\r\n    const newErrors: { [key: number]: { name?: string; link?: string; description?: string; imageUrl?: string } } = {};\r\n    let isValid = true;\r\n\r\n    projects.forEach((project, index) => {\r\n      const projectErrors: { name?: string; link?: string; description?: string; imageUrl?: string } = {};\r\n      if (!project.name || project.name.length < 2 || project.name.length > 50) {\r\n        projectErrors.name = 'Name must be between 2 and 50 characters.';\r\n        isValid = false;\r\n      }\r\n      if (project.link && !/^https?:\\/\\/[^\\s]+$/.test(project.link)) {\r\n        projectErrors.link = 'Invalid URL format.';\r\n        isValid = false;\r\n      }\r\n      if (project.description && project.description.length > 500) {\r\n        projectErrors.description = 'Description must not exceed 500 characters.';\r\n        isValid = false;\r\n      }\r\n      if (project.imageUrl && !/^https?:\\/\\/[^\\s]+$/.test(project.imageUrl)) {\r\n        projectErrors.imageUrl = 'Invalid URL format.';\r\n        isValid = false;\r\n      }\r\n      if (Object.keys(projectErrors).length) {\r\n        newErrors[index] = projectErrors;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (validateProjects() && user) {\r\n      try {\r\n        await dispatch(updateUserProjects({ userId: user.id, projects }));\r\n        toast.success('Projects updated successfully!');\r\n      } catch (error) {\r\n        toast.error('Failed to update projects. Please try again later.');\r\n      }\r\n    } else {\r\n      toast.error('Please fix the errors before submitting.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">Projects</h2>\r\n      {projects.map((project, index) => (\r\n        <div key={`${project.id}-${index}`} className=\"bg-white shadow rounded-lg p-6 relative\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => removeProject(index)}\r\n            className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <X className=\"w-5 h-5\" />\r\n          </button>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label htmlFor={`project-name-${index}`} className=\"block text-sm font-medium text-gray-700\">Project Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id={`project-name-${index}`}\r\n                value={project.name}\r\n                onChange={(e) => handleChange(index, 'name', e.target.value)}\r\n                className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent ${errors[index]?.name ? 'border-red-500' : ''}`}\r\n              />\r\n              {errors[index]?.name && <p className=\"text-red-500 text-sm\">{errors[index].name}</p>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor={`project-link-${index}`} className=\"block text-sm font-medium text-gray-700\">Project Link</label>\r\n              <input\r\n                type=\"url\"\r\n                id={`project-link-${index}`}\r\n                value={project.link}\r\n                onChange={(e) => handleChange(index, 'link', e.target.value)}\r\n                className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent ${errors[index]?.link ? 'border-red-500' : ''}`}\r\n              />\r\n              {errors[index]?.link && <p className=\"text-red-500 text-sm\">{errors[index].link}</p>}\r\n            </div>\r\n            <div className=\"md:col-span-2\">\r\n              <label htmlFor={`project-description-${index}`} className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n              <textarea\r\n                id={`project-description-${index}`}\r\n                value={project.description}\r\n                onChange={(e) => handleChange(index, 'description', e.target.value)}\r\n                className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent ${errors[index]?.description ? 'border-red-500' : ''}`}\r\n                rows={3}\r\n              />\r\n              {errors[index]?.description && <p className=\"text-red-500 text-sm\">{errors[index].description}</p>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={addProject}\r\n          className=\"flex items-center px-4 py-2 text-sm sm:text-base bg-purple-500 text-white rounded-md hover:bg-purple-600 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2\"\r\n        >\r\n          <Plus className=\"w-5 h-5 mr-2\" />\r\n          Add Project\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"px-4 py-2 text-sm sm:text-base bg-purple-500 text-white rounded-md hover:bg-purple-600 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2\"\r\n        >\r\n          Update Projects\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserCertificates } from \"../../redux/slices/authSlice\";\r\nimport { RootState, AppDispatch } from \"../../redux/store\";\r\nimport { Certificate } from \"../../types/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport { X, Edit2 } from 'lucide-react';\r\n\r\ninterface CertificateWithFile extends Omit<Certificate, \"file\"> {\r\n  file: File | null;\r\n}\r\n\r\nconst Certificates: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n\r\n  const initialCertificates: CertificateWithFile[] =\r\n    user && Array.isArray(user.certificates)\r\n      ? user.certificates.map((cert) => ({ ...cert, file: null }))\r\n      : [];\r\n\r\n  const [certificates, setCertificates] = useState<CertificateWithFile[]>(initialCertificates);\r\n  const [currentCertificate, setCurrentCertificate] = useState<CertificateWithFile>({\r\n    id: '',\r\n    name: '',\r\n    issuingOrganization: '',\r\n    dateOfIssue: '',\r\n    imageUrl: '',\r\n    file: null,\r\n  });\r\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    addNewCertificate();\r\n  }, []);\r\n\r\n  const handleChange = (field: keyof Omit<Certificate, \"id\" | \"file\">, value: string) => {\r\n    setCurrentCertificate((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files ? e.target.files[0] : null;\r\n    setCurrentCertificate((prev) => ({ ...prev, file }));\r\n  };\r\n\r\n  const validateCertificate = (): boolean => {\r\n    const { name, issuingOrganization, dateOfIssue } = currentCertificate;\r\n    if (!name || !issuingOrganization || !dateOfIssue) {\r\n      toast.error(\"All fields are required.\");\r\n      return false;\r\n    }\r\n\r\n    if (name.length > 50 || issuingOrganization.length > 50) {\r\n      toast.error(\"Certificate name and issuing organization must be less than 50 characters.\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateCertificate()) return;\r\n\r\n    if (user) {\r\n      let updatedCertificates: CertificateWithFile[];\r\n\r\n      if (editingIndex !== null) {\r\n        updatedCertificates = certificates.map((cert, index) =>\r\n          index === editingIndex ? currentCertificate : cert\r\n        );\r\n        setEditingIndex(null);\r\n      } else {\r\n        updatedCertificates = [...certificates, currentCertificate];\r\n      }\r\n\r\n      const certificatesWithFiles = updatedCertificates.map((cert) => ({\r\n        file: cert.file,\r\n        details: {\r\n          id: cert.id,\r\n          name: cert.name,\r\n          issuingOrganization: cert.issuingOrganization,\r\n          dateOfIssue: cert.dateOfIssue,\r\n          imageUrl: cert.imageUrl,\r\n        },\r\n      }));\r\n\r\n      try {\r\n        await dispatch(updateUserCertificates({ userId: user.id, certificates: certificatesWithFiles }));\r\n        setCertificates(updatedCertificates);\r\n        addNewCertificate();\r\n        toast.success(\"Certificates updated successfully!\");\r\n      } catch (error) {\r\n        toast.error(\"Failed to update certificates. Please try again later.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const addNewCertificate = () => {\r\n    setCurrentCertificate({\r\n      id: Date.now().toString(),\r\n      name: \"\",\r\n      issuingOrganization: \"\",\r\n      dateOfIssue: \"\",\r\n      imageUrl: \"\",\r\n      file: null,\r\n    });\r\n    setEditingIndex(null);\r\n  };\r\n\r\n  const editCertificate = (index: number) => {\r\n    setCurrentCertificate(certificates[index]);\r\n    setEditingIndex(index);\r\n  };\r\n\r\n  const removeCertificate = (index: number) => {\r\n    setCertificates(certificates.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-3xl md:text-4xl font-bold mb-8 text-gray-800\">Certificates</h2>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\r\n        {certificates.map((certificate, index) => (\r\n          <div key={`${certificate.id}-${index}`} className=\"bg-white shadow-md rounded-lg p-6 relative\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => removeCertificate(index)}\r\n              className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600 transition-colors duration-200\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n            <h3 className=\"text-xl md:text-2xl font-semibold mb-2 text-gray-800\">{certificate.name}</h3>\r\n            <p className=\"text-gray-600 mb-1\">{certificate.issuingOrganization}</p>\r\n            <p className=\"text-sm md:text-base text-gray-500 mb-4\">{certificate.dateOfIssue}</p>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => editCertificate(index)}\r\n              className=\"inline-flex items-center px-3 py-2 text-sm md:text-base border border-transparent leading-4 font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors duration-200\"\r\n            >\r\n              <Edit2 className=\"w-4 h-4 mr-2\" />\r\n              Edit\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white shadow-md rounded-lg p-6\">\r\n        <h3 className=\"text-2xl md:text-3xl font-semibold mb-6 text-gray-800\">\r\n          {editingIndex !== null ? \"Edit Certificate\" : \"Add New Certificate\"}\r\n        </h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">Certificate Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={currentCertificate.name}\r\n              onChange={(e) => handleChange(\"name\", e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"issuingOrganization\" className=\"block text-sm font-medium text-gray-700 mb-1\">Issuing Organization</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"issuingOrganization\"\r\n              value={currentCertificate.issuingOrganization}\r\n              onChange={(e) => handleChange(\"issuingOrganization\", e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"dateOfIssue\" className=\"block text-sm font-medium text-gray-700 mb-1\">Date of Issue</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"dateOfIssue\"\r\n              value={currentCertificate.dateOfIssue}\r\n              onChange={(e) => handleChange(\"dateOfIssue\", e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"certificateFile\" className=\"block text-sm font-medium text-gray-700 mb-1\">Certificate File</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"certificateFile\"\r\n              onChange={handleFileChange}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-purple-50 file:text-purple-700 hover:file:bg-purple-100\"\r\n              accept=\"image/*,application/pdf\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-6\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full md:w-auto px-6 py-3 bg-purple-600 text-white font-medium rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors duration-200\"\r\n          >\r\n            {editingIndex !== null ? \"Update Certificate\" : \"Add Certificate\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certificates;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserExperiences } from \"../../redux/slices/authSlice\";\r\nimport { RootState, AppDispatch } from \"../../redux/store\";\r\nimport { Experience } from \"../../types/auth\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { X } from \"lucide-react\";\r\n\r\nconst validateExperience = (experience: Experience): boolean => {\r\n  const { title, company, startDate, endDate, currentlyWorking, description } = experience;\r\n\r\n  const titleRegex = /^[a-zA-Z0-9\\s]{1,30}$/;\r\n  const companyRegex = /^[a-zA-Z0-9\\s]{1,20}$/;\r\n  const dateRegex = /^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s\\d{4}$/i;\r\n\r\n  if (!title || !company || !startDate || !description) {\r\n    toast.error(\"All fields except 'End Date' are required.\");\r\n    return false;\r\n  }\r\n\r\n  if (!titleRegex.test(title)) {\r\n    toast.error(\"Job title must be 1-30 characters and alphanumeric.\");\r\n    return false;\r\n  }\r\n\r\n  if (!companyRegex.test(company)) {\r\n    toast.error(\"Company name must be 1-20 characters and alphanumeric.\");\r\n    return false;\r\n  }\r\n\r\n  if (!dateRegex.test(startDate)) {\r\n    toast.error(\"Start date must be in the format 'MMM YYYY' (e.g., Jan 2020).\");\r\n    return false;\r\n  }\r\n\r\n  if (!currentlyWorking && !endDate) {\r\n    toast.error(\"Please provide an end date or check 'Currently Working'.\");\r\n    return false;\r\n  }\r\n\r\n  if (!currentlyWorking && endDate && !dateRegex.test(endDate)) {\r\n    toast.error(\"End date must be in the format 'MMM YYYY' (e.g., Dec 2022).\");\r\n    return false;\r\n  }\r\n\r\n  if (endDate && new Date(startDate) > new Date(endDate)) {\r\n    toast.error(\"End date cannot be earlier than the start date.\");\r\n    return false;\r\n  }\r\n\r\n  if (description.length > 500) {\r\n    toast.error(\"Job description must be less than 500 characters.\");\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst Experiences: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user, error } = useSelector((state: RootState) => state.auth);\r\n\r\n  const [experiences, setExperiences] = useState<Experience[]>(\r\n    user?.experiences ?? []\r\n  );\r\n\r\n  const [currentExperience, setCurrentExperience] = useState<Experience>({\r\n    id: \"\",\r\n    title: \"\",\r\n    company: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    currentlyWorking: false,\r\n    description: \"\",\r\n  });\r\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (user && Array.isArray(user.experiences)) {\r\n      setExperiences(user.experiences);\r\n    } else {\r\n      setExperiences([]);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleChange = (field: keyof Experience, value: string | boolean) => {\r\n    setCurrentExperience((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateExperience(currentExperience)) return;\r\n\r\n    let updatedExperiences;\r\n    if (editingIndex !== null) {\r\n      updatedExperiences = experiences.map((exp, index) =>\r\n        index === editingIndex ? currentExperience : exp\r\n      );\r\n      setEditingIndex(null);\r\n    } else {\r\n      updatedExperiences = [\r\n        ...experiences,\r\n        { ...currentExperience, id: Date.now().toString() },\r\n      ];\r\n    }\r\n\r\n    setExperiences(updatedExperiences);\r\n\r\n    setCurrentExperience({\r\n      id: \"\",\r\n      title: \"\",\r\n      company: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      currentlyWorking: false,\r\n      description: \"\",\r\n    });\r\n\r\n    try {\r\n      await dispatch(\r\n        updateUserExperiences({\r\n          userId: user?.id ?? \"\",\r\n          experiences: updatedExperiences,\r\n        })\r\n      );\r\n      toast.success(\"Experiences updated successfully!\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to update experiences. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (index: number) => {\r\n    setCurrentExperience(experiences[index]);\r\n    setEditingIndex(index);\r\n  };\r\n\r\n  const removeExperience = async (index: number) => {\r\n    const updatedExperiences = experiences.filter((_, i) => i !== index);\r\n    setExperiences(updatedExperiences);\r\n\r\n    try {\r\n      await dispatch(\r\n        updateUserExperiences({\r\n          userId: user?.id ?? \"\",\r\n          experiences: updatedExperiences,\r\n        })\r\n      );\r\n      toast.success(\"Experience removed successfully!\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to remove experience. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <div className=\"space-y-8\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-center\">Your Experiences</h2>\r\n        {error && <p className=\"text-red-500\">{error}</p>}\r\n        \r\n \r\n        <div className=\"space-y-4\">\r\n          {experiences.length > 0 ? (\r\n            experiences.map((experience, index) => (\r\n              <div\r\n                key={experience.id}\r\n                className=\"bg-white shadow rounded-lg p-4 sm:p-6 relative\"\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeExperience(index)}\r\n                  className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X className=\"w-5 h-5\" />\r\n                </button>\r\n                <h3 className=\"text-lg font-bold\">{experience.title}</h3>\r\n                <p className=\"text-gray-600\">{experience.company}</p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  {experience.startDate} -{\" \"}\r\n                  {experience.currentlyWorking ? \"Present\" : experience.endDate}\r\n                </p>\r\n                <p className=\"mt-2\">{experience.description}</p>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleEdit(index)}\r\n                  className=\"mt-4 bg-purple-500 text-white py-1 px-3 rounded-lg hover:bg-purple-600 transition duration-300\"\r\n                >\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No experiences added yet.</p>\r\n          )}\r\n        </div>\r\n   \r\n        <form onSubmit={handleSubmit} className=\"bg-white shadow rounded-lg p-4 sm:p-6\">\r\n          <h3 className=\"text-lg font-bold mb-4\">\r\n            {editingIndex !== null ? \"Edit Experience\" : \"Add New Experience\"}\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"title\"\r\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n              >\r\n                Job Title\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                value={currentExperience.title}\r\n                onChange={(e) => handleChange(\"title\", e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"company\"\r\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n              >\r\n                Company\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"company\"\r\n                value={currentExperience.company}\r\n                onChange={(e) => handleChange(\"company\", e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"startDate\"\r\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n              >\r\n                Start Date\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"startDate\"\r\n                value={currentExperience.startDate}\r\n                onChange={(e) => handleChange(\"startDate\", e.target.value)}\r\n                placeholder=\"e.g., Jan 2020\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"endDate\"\r\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n              >\r\n                End Date\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"endDate\"\r\n                value={currentExperience.endDate}\r\n                onChange={(e) => handleChange(\"endDate\", e.target.value)}\r\n                placeholder={\r\n                  currentExperience.currentlyWorking\r\n                    ? \"Currently Working\"\r\n                    : \"e.g., Dec 2022\"\r\n                }\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n                disabled={currentExperience.currentlyWorking}\r\n              />\r\n            </div>\r\n            <div className=\"sm:col-span-2\">\r\n              <label\r\n                htmlFor=\"description\"\r\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n              >\r\n                Job Description\r\n              </label>\r\n              <textarea\r\n                id=\"description\"\r\n                value={currentExperience.description}\r\n                onChange={(e) => handleChange(\"description\", e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n                rows={4}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"sm:col-span-2\">\r\n              <label className=\"inline-flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={currentExperience.currentlyWorking}\r\n                  onChange={(e) =>\r\n                    handleChange(\"currentlyWorking\", e.target.checked)\r\n                  }\r\n                  className=\"rounded border-gray-300 text-purple-500 focus:ring-purple-500\"\r\n                />\r\n                <span className=\"ml-2\">Currently Working Here</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-6 text-right\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full sm:w-auto bg-purple-500 text-white py-2 px-4 rounded-lg hover:bg-purple-600 transition duration-300\"\r\n            >\r\n              {editingIndex !== null ? \"Update Experience\" : \"Add Experience\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Experiences;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport Resume from './Resume';\r\nimport Projects from './Project';\r\nimport Certificates from './Certificates';\r\nimport Experiences from './Experiences';\r\nimport Header from './Header';\r\n\r\nconst UpdateProfile: React.FC = () => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Header />\r\n      <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 max-w-7xl\">\r\n        <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-8 text-center text-gray-800\">\r\n          Update Your Profile\r\n        </h1>\r\n\r\n        <div className=\"space-y-12\">\r\n          <Section title=\"Personal Information\">\r\n            <Profile />\r\n          </Section>\r\n\r\n          <Section title=\"Resume\">\r\n            <Resume />\r\n          </Section>\r\n\r\n          <Section title=\"Projects\">\r\n            <Projects />\r\n          </Section>\r\n\r\n          <Section title=\"Certificates\">\r\n            <Certificates />\r\n          </Section>\r\n\r\n          <Section title=\"Work Experience\">\r\n            <Experiences />\r\n          </Section>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Section: React.FC<{ title: string; children: React.ReactNode }> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n      <h2 className=\"text-2xl font-semibold bg-gradient-to-r from-purple-600 to-purple-300 text-white p-4\">\r\n        {title}\r\n      </h2>\r\n      <div className=\"p-6\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport Header from '../admin/AdminHeader'; \r\nimport Sidebar from '../admin/AdminSidebar'; \r\n\r\nconst AdminProfile: React.FC = () => {\r\n  const { token, name,email,role } = useSelector((state: RootState) => state.admin);\r\n\r\n  useEffect(() => {\r\n  }, [token]);\r\n\r\n\r\n  const adminDetails ={name,email,role}\r\n  return (\r\n    <div className=\"flex\">\r\n      <Sidebar /> \r\n      <div className=\"flex-1\">\r\n        <Header /> \r\n        <div className=\"container mx-auto p-4\">\r\n          <h1 className=\"text-2xl font-bold mb-6\">Admin Profile</h1>\r\n          <div className=\"bg-white shadow-md rounded-lg p-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"font-semibold text-gray-700\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={adminDetails.name}\r\n                  readOnly\r\n                  className=\"mt-1 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-400\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <label className=\"font-semibold text-gray-700\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={adminDetails.email}\r\n                  readOnly\r\n                  className=\"mt-1 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-400\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-col md:col-span-2\">\r\n                <label className=\"font-semibold text-gray-700\">Role</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={adminDetails.role}\r\n                  readOnly\r\n                  className=\"mt-1 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-400\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { fetchProfile, selectRecruiter } from '../../redux/slices/recruiterSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RecruiterHeader from '../recruiter/RecruiterHeader'; // Adjust the path if needed\r\n\r\nconst RecruiterProfile: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const { profile, loading, error, recruiter } = useSelector(selectRecruiter);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (recruiter?.id) {\r\n      dispatch(fetchProfile(recruiter.id));\r\n    }\r\n  }, [dispatch, recruiter]);\r\n\r\n  if (loading) return <div className=\"text-center p-4\">Loading...</div>;\r\n  if (error) return <div className=\"text-center p-4\">Error: {error}</div>;\r\n\r\n  return (\r\n    <>\r\n      <RecruiterHeader />\r\n      <div className=\"max-w-4xl mx-auto p-6 lg:p-8 bg-white shadow-lg rounded-lg mt-6\">\r\n        <h1 className=\"text-3xl font-bold mb-6 text-center text-purple-700\">Recruiter Profile</h1>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div><strong>Name:</strong> {profile?.name}</div>\r\n            <div><strong>Email:</strong> {profile?.email}</div>\r\n            <div><strong>Company Name:</strong> {profile?.companyName}</div>\r\n            <div><strong>Company Location:</strong> {profile?.location}</div>\r\n            <div><strong>Phone:</strong> {profile?.phone}</div>\r\n          </div>\r\n\r\n          {profile?.governmentId && (\r\n            <div>\r\n              <p><strong>Government ID:</strong></p>\r\n              <img src={`${profile.governmentId}`} alt=\"Government ID\" className=\"w-24 h-auto border border-gray-300 rounded\" />\r\n            </div>\r\n          )}\r\n\r\n          {profile?.employeeIdImage && (\r\n            <div>\r\n              <p><strong>Employee ID Image:</strong></p>\r\n              <img src={`${profile.employeeIdImage}`} alt=\"Employee ID\" className=\"w-24 h-auto border border-gray-300 rounded\" />\r\n            </div>\r\n          )}\r\n\r\n          <button \r\n            onClick={() => navigate('/recruiter/update-profile')} \r\n            className=\"mt-4 bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition duration-300 w-full\">\r\n            Update Profile\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecruiterProfile;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { updateProfile, selectRecruiter } from '../../redux/slices/recruiterSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RecruiterHeader from '../recruiter/RecruiterHeader';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\ninterface FormData {\r\n  name: string;\r\n  email: string;\r\n  companyName: string;\r\n  phone: string;\r\n  location: string;\r\n  governmentId: File | null;\r\n  employeeIdImage: File | null;\r\n}\r\n\r\nconst RecruiterProfileUpdate: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const { profile, recruiter } = useSelector(selectRecruiter);\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState<FormData>({\r\n    name: profile?.name || '',\r\n    email: profile?.email || '',\r\n    companyName: profile?.companyName || '',\r\n    phone: profile?.phone || '',\r\n    location: profile?.location || '',\r\n    governmentId: null,\r\n    employeeIdImage: null,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    name: '',\r\n    email: '',\r\n    companyName: '',\r\n    phone: '',\r\n    location: '',\r\n    governmentId: '',\r\n    employeeIdImage: '',\r\n  });\r\n\r\n\r\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-z]+\\.[a-z]{2,}$/;\r\n  const phoneRegex = /^\\d{10}$/;\r\n  const nameRegex = /^[a-zA-Z\\s]{3,20}$/;\r\n  const locationRegex = /^[a-zA-Z\\s,]{3,15}$/;\r\n\r\n  const validateForm = () => {\r\n    let valid = true;\r\n    const newErrors = {\r\n      name: '',\r\n      email: '',\r\n      companyName: '',\r\n      phone: '',\r\n      location: '',\r\n      governmentId: '',\r\n      employeeIdImage: '',\r\n    };\r\n\r\n\r\n    if (!nameRegex.test(formData.name)) {\r\n      newErrors.name = 'Name must be 3-20 characters and contain only letters and spaces.';\r\n      valid = false;\r\n    }\r\n\r\n   \r\n    if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address.';\r\n      valid = false;\r\n    }\r\n\r\n\r\n    if (!nameRegex.test(formData.companyName)) {\r\n      newErrors.companyName = 'Company name must be 3-20 characters and contain only letters and spaces.';\r\n      valid = false;\r\n    }\r\n\r\n\r\n    if (!phoneRegex.test(formData.phone)) {\r\n      newErrors.phone = 'Phone number must be a valid 10-digit number.';\r\n      valid = false;\r\n    }\r\n\r\n    if (!locationRegex.test(formData.location)) {\r\n      newErrors.location = 'Location must be 3-15 characters and can contain letters, spaces, and commas.';\r\n      valid = false;\r\n    }\r\n\r\n    if (formData.governmentId) {\r\n      const fileName = formData.governmentId.name; \r\n      const validExtensions = /\\.(jpg|jpeg|png|pdf|webp)$/i;\r\n\r\n      if (!validExtensions.test(fileName)) {\r\n        newErrors.governmentId = 'Government ID must be a valid jpg, jpeg, png, or pdf file.';\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (formData.employeeIdImage) {\r\n      const fileName = formData.employeeIdImage.name; \r\n      const validExtensions = /\\.(jpg|jpeg|png|pdf|webp)$/i;\r\n\r\n      if (!validExtensions.test(fileName)) {\r\n        newErrors.employeeIdImage = 'Employee ID Image must be a valid jpg, jpeg, png, or pdf file.';\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n\r\n    setErrors(newErrors);\r\n    return valid;\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value, files } = e.target;\r\n    if (files) {\r\n      setFormData((prevData) => ({ ...prevData, [name]: files[0] }));\r\n    } else {\r\n      setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      toast.error('Please fix the errors in the form.');\r\n      return;\r\n    }\r\n\r\n    const updatedData = new FormData();\r\n    updatedData.append('name', formData.name);\r\n    updatedData.append('email', formData.email);\r\n    updatedData.append('companyName', formData.companyName);\r\n    updatedData.append('phone', formData.phone);\r\n    updatedData.append('location', formData.location);\r\n\r\n    if (formData.governmentId) updatedData.append('governmentId', formData.governmentId);\r\n    if (formData.employeeIdImage) updatedData.append('employeeIdImage', formData.employeeIdImage);\r\n\r\n    dispatch(updateProfile({ recruiterId: recruiter?.id, profileData: updatedData }))\r\n      .then(() => {\r\n        navigate('/recruiter/profile');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RecruiterHeader />\r\n      <div className=\"max-w-4xl mx-auto p-6 lg:p-8 bg-white shadow-lg rounded-lg mt-6\">\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <h1 className=\"text-3xl font-bold mb-6 text-center text-purple-700\">Update Profile</h1>\r\n\r\n          {/* Name */}\r\n          <div>\r\n            <label className=\"block font-semibold\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={`w-full border ${errors.name ? 'border-red-500' : 'border-gray-300'} rounded-lg p-2`}\r\n              disabled\r\n            />\r\n            {errors.name && <p className=\"text-red-500 text-sm\">{errors.name}</p>}\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div>\r\n            <label className=\"block font-semibold\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className={`w-full border ${errors.email ? 'border-red-500' : 'border-gray-300'} rounded-lg p-2`}\r\n              disabled\r\n            />\r\n            {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n          </div>\r\n\r\n          {/* Company Name */}\r\n          <div>\r\n            <label className=\"block font-semibold\">Company Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"companyName\"\r\n              value={formData.companyName}\r\n              onChange={handleChange}\r\n              className={`w-full border ${errors.companyName ? 'border-red-500' : 'border-gray-300'} rounded-lg p-2`}\r\n              required\r\n            />\r\n            {errors.companyName && <p className=\"text-red-500 text-sm\">{errors.companyName}</p>}\r\n          </div>\r\n\r\n    \r\n          <div>\r\n            <label className=\"block font-semibold\">Company Location:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={formData.location}\r\n              onChange={handleChange}\r\n              className={`w-full border ${errors.location ? 'border-red-500' : 'border-gray-300'} rounded-lg p-2`}\r\n              required\r\n            />\r\n            {errors.location && <p className=\"text-red-500 text-sm\">{errors.location}</p>}\r\n          </div>\r\n\r\n       \r\n          <div>\r\n            <label className=\"block font-semibold\">Phone:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={`w-full border ${errors.phone ? 'border-red-500' : 'border-gray-300'} rounded-lg p-2`}\r\n              required\r\n            />\r\n            {errors.phone && <p className=\"text-red-500 text-sm\">{errors.phone}</p>}\r\n          </div>\r\n\r\n        \r\n          <div>\r\n            <label className=\"block font-semibold\">Employee ID Image:</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"employeeIdImage\"\r\n              onChange={handleChange}\r\n              className={`w-full p-2`}\r\n            />\r\n            {errors.employeeIdImage && <p className=\"text-red-500 text-sm\">{errors.employeeIdImage}</p>}\r\n          </div>\r\n\r\n       \r\n          <div>\r\n            <button type=\"submit\" className=\"bg-purple-700 text-white py-2 px-4 rounded-lg hover:bg-purple-600\">\r\n              Update Profile\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecruiterProfileUpdate;\r\n","import React from \"react\";\nimport { BasicJobPost } from \"../../../types/jobPostTypes\";\nimport {\n  Briefcase,\n  MapPin,\n  IndianRupee,\n  Users,\n  Edit,\n  Trash2,\n  ToggleLeft,\n  ToggleRight,\n  Eye,\n  AlertTriangle,\n} from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface JobPostProps {\n  jobPosts: BasicJobPost[];\n  onDelete: (id: string) => Promise<void>;\n  onEdit: (post: { _id: string }) => void;\n  onToggleStatus: (post: BasicJobPost) => Promise<void>;\n  onViewContestants: (postId: string) => void;\n}\n\nconst JobPost: React.FC<JobPostProps> = ({\n  jobPosts,\n  onDelete,\n  onEdit,\n  onToggleStatus,\n  onViewContestants,\n}) => {\n  const navigate = useNavigate();\n\n  const handleViewDetails = (postId: string) => {\n    navigate(`/recruiter/jobPost/${postId}`);\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {jobPosts.map((post) => (\n        <div\n          key={post._id}\n          className={`bg-white border ${\n            post.isBlock ? \"border-red-500\" : \"border-purple-200\"\n          } p-4 md:p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300`}\n        >\n          <h3 className=\"text-lg md:text-xl font-bold mb-2 text-purple-800\">\n            {post.title}\n          </h3>\n          {post.isBlock && (\n            <div className=\"flex items-center text-red-500 mb-2\">\n              <AlertTriangle size={18} className=\"mr-2\" />\n              <span className=\"font-semibold text-sm md:text-base\">Blocked by Admin</span>\n            </div>\n          )}\n          <p className=\"mb-2 text-gray-600 text-sm md:text-base\">\n            {post.description.substring(0, 100)}...\n          </p>\n          <div className=\"space-y-1 mb-2\">\n            <div className=\"flex items-center text-gray-700 text-sm md:text-base\">\n              <Briefcase size={18} className=\"mr-1 text-purple-600\" />\n              <span>{post.company?.name}</span>\n            </div>\n            <div className=\"flex items-center text-gray-700 text-sm md:text-base\">\n              <MapPin size={18} className=\"mr-1 text-purple-600\" />\n              <span>{post.location}</span>\n            </div>\n            <div className=\"flex items-center text-gray-700 text-sm md:text-base\">\n              <IndianRupee size={18} className=\"mr-1 text-purple-600\" />\n              <span>\n                ₹{post.salaryRange.min.toLocaleString()} - ₹\n                {post.salaryRange.max.toLocaleString()}\n              </span>\n            </div>\n            <div className=\"flex items-center text-gray-700 text-sm md:text-base\">\n              <Users size={18} className=\"mr-1 text-purple-600\" />\n              <span>{post.wayOfWork}</span>\n            </div>\n          </div>\n          <div className=\"mb-2\">\n            <span\n              className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                post.status === \"Open\"\n                  ? \"bg-green-100 text-green-800\"\n                  : \"bg-red-100 text-red-800\"\n              }`}\n            >\n              {post.status === \"Open\" ? (\n                <ToggleRight size={14} className=\"mr-1\" />\n              ) : (\n                <ToggleLeft size={14} className=\"mr-1\" />\n              )}\n              {post.status}\n            </span>\n          </div>\n          <div className=\"flex flex-wrap justify-between mt-2 gap-2\">\n            <button\n              onClick={() => onEdit(post)}\n              className=\"flex items-center bg-purple-100 text-purple-700 px-3 py-1 rounded hover:bg-purple-200 transition-colors duration-300 text-sm md:text-base\"\n            >\n              <Edit size={16} className=\"mr-1\" />\n              Edit\n            </button>\n            <button\n              onClick={() => onDelete(post._id)}\n              className=\"flex items-center bg-purple-100 text-purple-700 px-3 py-1 rounded hover:bg-purple-200 transition-colors duration-300 text-sm md:text-base\"\n            >\n              <Trash2 size={16} className=\"mr-1\" />\n              Delete\n            </button>\n            <button\n              onClick={() => onToggleStatus(post)}\n              className={`flex items-center px-3 py-1 rounded transition-colors duration-300 text-sm md:text-base ${\n                post.status === \"Open\"\n                  ? \"bg-purple-100 text-purple-700 hover:bg-purple-200\"\n                  : \"bg-purple-100 text-purple-700 hover:bg-purple-200\"\n              }`}\n            >\n              {post.status === \"Open\" ? (\n                <ToggleLeft size={16} className=\"mr-1\" />\n              ) : (\n                <ToggleRight size={16} className=\"mr-1\" />\n              )}\n              {post.status === \"Open\" ? \"Close\" : \"Reopen\"}\n            </button>\n            <button\n              onClick={() => onViewContestants(post._id)}\n              className=\"flex items-center bg-purple-500 text-white px-3 py-1 rounded hover:bg-purple-600 transition-colors duration-300 text-sm md:text-base\"\n            >\n              <Eye size={16} className=\"mr-1\" />\n              View Applicants\n            </button>\n            <button\n              onClick={() => handleViewDetails(post._id)}\n              className=\"flex items-center bg-purple-500 text-white px-3 py-1 rounded hover:bg-purple-600 transition-colors duration-300 text-sm md:text-base\"\n            >\n              <Eye size={16} className=\"mr-1\" />\n              View Details\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default JobPost;\n","import React from 'react';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface ConfirmationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  title: string;\r\n  message: string;\r\n}\r\n\r\n\r\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  title,\r\n  message,\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n\r\n  const handleConfirm = () => {\r\n    try {\r\n      onConfirm();\r\n      onClose();\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        console.error('Error in confirmation action:', error.message);\r\n      } else {\r\n        console.error('An unknown error occurred during confirmation');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-auto\">\r\n        <div className=\"flex justify-between items-center border-b p-4\">\r\n          <h3 className=\"text-xl font-semibold text-gray-900 break-words\">{title}</h3>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-500 transition-colors duration-200\"\r\n            aria-label=\"Close modal\"\r\n          >\r\n            <X size={24} />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          <p className=\"text-gray-600 break-words\">{message}</p>\r\n        </div>\r\n        <div className=\"flex flex-col sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-4 p-4 border-t\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"w-full sm:w-auto px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-800 rounded-lg transition-colors duration-200\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleConfirm}\r\n            className=\"w-full sm:w-auto px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors duration-200\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppDispatch, RootState } from \"../../../redux/store\";\nimport {\n  fetchJobPosts,\n  deleteJobPost,\n  updateJobPost,\n} from \"../../../redux/slices/jobPostSlice\";\nimport JobPost from \"./JobPost\";\nimport { BasicJobPost } from \"../../../types/jobPostTypes\";\nimport { Plus, Loader, AlertCircle } from \"lucide-react\";\nimport RecruiterHeader from \"../RecruiterHeader\";\nimport ConfirmationModal from \"./ConfirmationModal\";\n\nconst JobPostWrapper: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const { posts, loading, error } = useSelector((state: RootState) => state.jobPosts);\n  const { recruiter } = useSelector((state: RootState) => state.recruiter);\n\n \n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [postToDelete, setPostToDelete] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (recruiter && recruiter._id) {\n      dispatch(fetchJobPosts(recruiter._id));\n    }\n  }, [dispatch, recruiter]);\n\n  const handleDelete = useCallback(async (id: string): Promise<void> => {\n    setPostToDelete(id);\n    setIsModalOpen(true);\n  }, []);\n  \n  const confirmDelete = useCallback(async (): Promise<void> => {\n    if (postToDelete) {\n      try {\n        await dispatch(deleteJobPost(postToDelete)).unwrap();\n      } catch (error) {\n        console.error(\"Failed to delete job post:\", error);\n      }\n    }\n    setIsModalOpen(false);\n    setPostToDelete(null);\n  }, [dispatch, postToDelete]);\n\n  const handleEdit = useCallback((post: { _id: string }) => {\n    navigate(`/recruiter/jobs/edit/${post._id}`);\n  }, [navigate]);\n\n  const handleCreate = useCallback(() => {\n    navigate(\"/recruiter/jobs/create\");\n  }, [navigate]);\n\n  const handleToggleStatus = useCallback((post: BasicJobPost): Promise<void> => {\n    const updatedPost = { ...post, status: post.status === \"Open\" ? \"Closed\" : \"Open\" };\n    return dispatch(updateJobPost({ id: post._id, postData: updatedPost })).unwrap();\n  }, [dispatch]);\n\n  const handleViewContestants = useCallback((postId: string) => {\n    navigate(`/recruiter/job-applicants/${postId}`);\n  }, [navigate]);\n\n  if (!recruiter) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\n        <AlertCircle size={48} className=\"text-yellow-500 mb-4\" />\n        <p className=\"text-xl text-gray-800 font-semibold mb-2\">Access Restricted</p>\n        <p className=\"text-gray-600\">Please log in to view job posts.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen\">\n      <RecruiterHeader />\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-extrabold text-purple-900\">Job Posts</h2>\n            <div className=\"flex space-x-4\">\n              <button \n                onClick={handleCreate}\n                className=\"bg-purple-600 text-white py-2 px-3 sm:px-4 rounded-lg hover:bg-purple-700 transition duration-300 flex items-center shadow-md text-sm sm:text-base\"\n              >\n                <Plus size={20} className=\"mr-2\" />\n                Create New Job Post\n              </button>\n            </div>\n          </div>\n\n          {loading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <Loader className=\"animate-spin h-12 w-12 text-purple-500\" />\n            </div>\n          ) : error ? (\n            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg shadow-md\" role=\"alert\">\n              <div className=\"flex items-center\">\n                <AlertCircle className=\"h-6 w-6 mr-2\" />\n                <p className=\"font-bold\">Error</p>\n              </div>\n              <p className=\"mt-2\">{error}</p>\n            </div>\n          ) : posts.length === 0 ? (\n            <div className=\"bg-white rounded-xl shadow-lg p-8 text-center\">\n              <AlertCircle size={48} className=\"text-yellow-500 mx-auto mb-4\" />\n              <p className=\"text-xl text-gray-800 font-semibold mb-2\">No Job Posts Available</p>\n              <p className=\"text-gray-600 mb-4\">Click 'Create New Job Post' to add your first job listing.</p>\n              <button \n                onClick={handleCreate}\n                className=\"bg-purple-600 text-white py-2 px-3 sm:px-4 rounded-lg hover:bg-purple-700 transition duration-300 inline-flex items-center text-sm sm:text-base\"\n              >\n                <Plus size={20} className=\"mr-2\" />\n                Create New Job Post\n              </button>\n            </div>\n          ) : (\n            <div className=\"bg-white rounded-xl shadow-lg p-8\">\n              <JobPost \n                jobPosts={posts} \n                onDelete={handleDelete} \n                onEdit={handleEdit}\n                onToggleStatus={handleToggleStatus}\n                onViewContestants={handleViewContestants}\n              />\n            </div>\n          )}\n        </div>\n        <ConfirmationModal\n          isOpen={isModalOpen}\n          onClose={() => setIsModalOpen(false)}\n          onConfirm={confirmDelete}\n          title=\"Delete Job Post\"\n          message=\"Are you sure you want to delete this job post? This action cannot be undone.\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default JobPostWrapper;\n","\r\n\r\nimport { BasicJobPostFormData } from '../../../types/jobPostTypes';\r\n\r\nexport const validateJobPostForm = (formData: BasicJobPostFormData): { [key: string]: string } => {\r\n  const errors: { [key: string]: string } = {};\r\n\r\n  if (!formData.title.trim()) errors.title = 'Job title is required';\r\n  if (!formData.description.trim()) errors.description = 'Job description is required';\r\n  if (!formData.company?.name.trim()) errors.companyName = 'Company name is required';\r\n  if (formData.company?.website && !/^https?:\\/\\/\\S+$/.test(formData.company.website)) {\r\n    errors.companyWebsite = 'Invalid website URL';\r\n  }\r\n  if (!formData.location.trim()) errors.location = 'Location is required';\r\n  if (formData.salaryRange.min > formData.salaryRange.max) {\r\n    errors.salaryRange = 'Minimum salary cannot be greater than maximum salary';\r\n  }\r\n  if (!formData.wayOfWork.trim()) errors.wayOfWork = 'Way of work is required';\r\n  if (formData.skillsRequired.length === 0) errors.skillsRequired = 'At least one skill is required';\r\n  if (formData.qualifications.length === 0) errors.qualifications = 'At least one qualification is required';\r\n\r\n  return errors;\r\n};","import React, { useState, useEffect } from \"react\";\nimport { BasicJobPostFormData } from \"../../../types/jobPostTypes\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux/store\";\nimport {\n  Briefcase,\n  Building,\n  Globe,\n  MapPin,\n  IndianRupee,\n  Users,\n  Book,\n  CheckSquare,\n  Laptop,\n} from \"lucide-react\";\nimport { validateJobPostForm } from \"./formValidation\";\n\ninterface JobPostFormProps {\n  initialData?: BasicJobPostFormData;\n  recruiterId: string;\n  isEditing: boolean;\n  onSubmit: (formData: BasicJobPostFormData) => void;\n}\n\nconst JobPostForm: React.FC<JobPostFormProps> = ({\n  initialData,\n  recruiterId,\n  isEditing,\n  onSubmit,\n}) => {\n  const { recruiter } = useSelector((state: RootState) => state.recruiter);\n  const [formData, setFormData] = useState<BasicJobPostFormData>({\n    title: \"\",\n    description: \"\",\n    company: { name: \"\", website: \"\", logo: \"\" },\n    location: \"\",\n    salaryRange: { min: 0, max: 0 },\n    wayOfWork: \"\",\n    skillsRequired: [],\n    qualifications: [],\n    status: \"Open\",\n    recruiterId: recruiter.id,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  });\n\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\n\n  useEffect(() => {\n    if (isEditing && initialData) {\n      setFormData({\n        ...initialData,\n        salaryRange: initialData.salaryRange || { min: 0, max: 0 },\n        recruiterId: recruiter.id,\n      });\n    }\n  }, [initialData, isEditing, recruiter.id]);\n\n  const handleChange = (\n    e: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    const { name, value } = e.target;\n    if (name.includes(\".\")) {\n      const [parent, child] = name.split(\".\");\n      setFormData((prev) => ({\n        ...prev,\n        [parent]: {\n          ...(prev[parent as keyof BasicJobPostFormData] as Record<\n            string,\n            any\n          >),\n          [child]: value,\n        },\n      }));\n    } else {\n      setFormData((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleArrayChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    fieldName: \"skillsRequired\" | \"qualifications\"\n  ) => {\n    const value = e.target.value;\n    setFormData((prev) => ({\n      ...prev,\n      [fieldName]: value.split(\",\").map((item) => item.trim()),\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const newErrors = validateJobPostForm(formData);\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      onSubmit(formData);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div>\n        <label\n          htmlFor=\"title\"\n          className=\"mb-1 font-medium text-gray-700 flex items-center\"\n        >\n          <Briefcase className=\"mr-2 text-purple-600\" size={20} />\n          Job Title\n        </label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          value={formData.title}\n          onChange={handleChange}\n          className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500 text-sm md:text-base\"\n        />\n        {errors.title && (\n          <p className=\"text-red-500 text-sm mt-1\">{errors.title}</p>\n        )}\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"description\"\n          className=\"mb-1 font-medium text-gray-700 flex items-center\"\n        >\n          <Book className=\"mr-2 text-purple-600\" size={20} />\n          Job Description\n        </label>\n        <textarea\n          name=\"description\"\n          id=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500 text-sm md:text-base\"\n          rows={4}\n        />\n        {errors.description && (\n          <p className=\"text-red-500 text-sm mt-1\">{errors.description}</p>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label\n            htmlFor=\"company.name\"\n            className=\"mb-1 font-medium text-gray-700 flex items-center\"\n          >\n            <Building className=\"mr-2 text-purple-600\" size={20} />\n            Company Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"company.name\"\n            id=\"company.name\"\n            value={formData.company?.name}\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n          />\n          {errors.companyName && (\n            <p className=\"text-red-500 text-sm mt-1\">{errors.companyName}</p>\n          )}\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"company.website\"\n            className=\"mb-1 font-medium text-gray-700 flex items-center\"\n          >\n            <Globe className=\"mr-2 text-purple-600\" size={20} />\n            Company Website\n          </label>\n          <input\n            type=\"text\"\n            name=\"company.website\"\n            id=\"company.website\"\n            value={formData.company?.website}\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n          />\n          {errors.companyWebsite && (\n            <p className=\"text-red-500 text-sm mt-1\">{errors.companyWebsite}</p>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"location\"\n          className=\"mb-1 font-medium text-gray-700 flex items-center\"\n        >\n          <MapPin className=\"mr-2 text-purple-600\" size={20} />\n          Location\n        </label>\n        <input\n          type=\"text\"\n          name=\"location\"\n          id=\"location\"\n          value={formData.location}\n          onChange={handleChange}\n          className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n        />\n        {errors.location && (\n          <p className=\"text-red-500 text-sm mt-1\">{errors.location}</p>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label\n            htmlFor=\"salaryRange.min\"\n            className=\"mb-1 font-medium text-gray-700 flex items-center\"\n          >\n            <IndianRupee className=\"mr-2 text-purple-600\" size={20} />\n            Minimum Salary\n          </label>\n          <input\n            type=\"number\"\n            name=\"salaryRange.min\"\n            id=\"salaryRange.min\"\n            value={formData.salaryRange.min}\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n          />\n        </div>\n        <div>\n          <label\n            htmlFor=\"salaryRange.max\"\n            className=\"mb-1 font-medium text-gray-700 flex items-center\"\n          >\n            <IndianRupee className=\"mr-2 text-purple-600\" size={20} />\n            Maximum Salary\n          </label>\n          <input\n            type=\"number\"\n            name=\"salaryRange.max\"\n            id=\"salaryRange.max\"\n            value={formData.salaryRange.max}\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n          />\n        </div>\n      </div>\n      {errors.salaryRange && (\n        <p className=\"text-red-500 text-sm mt-1\">{errors.salaryRange}</p>\n      )}\n\n      <div>\n        <label\n          htmlFor=\"wayOfWork\"\n          className=\"mb-1 font-medium text-gray-700 flex items-center\"\n        >\n          <Laptop className=\"mr-2 text-purple-600\" size={20} />\n          Way of Work\n        </label>\n        <select\n          name=\"wayOfWork\"\n          id=\"wayOfWork\"\n          value={formData.wayOfWork}\n          onChange={handleChange}\n          className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n        >\n          <option value=\"\">Select work type</option>\n          <option value=\"Remote\">Remote</option>\n          <option value=\"On-site\">On-site</option>\n          <option value=\"Hybrid\">Hybrid</option>\n        </select>\n        {errors.wayOfWork && (\n          <p className=\"text-red-500 text-sm mt-1\">{errors.wayOfWork}</p>\n        )}\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"skillsRequired\"\n          className=\"mb-1 font-medium text-gray-700 flex items-center\"\n        >\n          <Users className=\"mr-2 text-purple-600\" size={20} />\n          Skills Required (comma separated)\n        </label>\n        <input\n          type=\"text\"\n          id=\"skillsRequired\"\n          value={formData.skillsRequired.join(\", \")}\n          onChange={(e) => handleArrayChange(e, \"skillsRequired\")}\n          className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n        />\n        {errors.skillsRequired && (\n          <p className=\"text-red-500 text-sm mt-1\">{errors.skillsRequired}</p>\n        )}\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"qualifications\"\n          className=\"mb-1 font-medium text-gray-700 flex items-center\"\n        >\n          <CheckSquare className=\"mr-2 text-purple-600\" size={20} />\n          Qualifications (comma separated)\n        </label>\n        <input\n          type=\"text\"\n          id=\"qualifications\"\n          value={formData.qualifications.join(\", \")}\n          onChange={(e) => handleArrayChange(e, \"qualifications\")}\n          className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n        />\n        {errors.qualifications && (\n          <p className=\"text-red-500 text-sm mt-1\">{errors.qualifications}</p>\n        )}\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"status\"\n          className=\"mb-1 font-medium text-gray-700 flex items-center\"\n        >\n          <CheckSquare className=\"mr-2 text-purple-600\" size={20} />\n          Status\n        </label>\n        <select\n          name=\"status\"\n          id=\"status\"\n          value={formData.status}\n          onChange={handleChange}\n          className=\"w-full p-2 border rounded focus:ring-purple-500 focus:border-purple-500\"\n        >\n          <option value=\"Open\">Open</option>\n          <option value=\"Closed\">Closed</option>\n        </select>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full p-3 bg-purple-600 text-white rounded hover:bg-purple-700 transition duration-300 ease-in-out flex items-center justify-center text-sm md:text-base\"\n      >\n        <Briefcase className=\"mr-2\" size={20} />\n        {isEditing ? \"Update Job Post\" : \"Create Job Post\"}\n      </button>\n    </form>\n  );\n};\n\nexport default JobPostForm;\n","import React from 'react';\r\n\r\ninterface Plan {\r\n  name: string;\r\n  price: number;\r\n  duration: string;\r\n}\r\n\r\nconst plans: Plan[] = [\r\n  {\r\n    name: 'Monthly',\r\n    price: 200,\r\n    duration: '1 month',\r\n  },\r\n  {\r\n    name: '3 Months',\r\n    price: 550,\r\n    duration: '3 months',\r\n  },\r\n  {\r\n    name: 'Yearly',\r\n    price: 2000,\r\n    duration: '1 year',\r\n  },\r\n];\r\n\r\ninterface SubscriptionPlansProps {\r\n  onSelectPlan: (plan: Plan) => void;\r\n}\r\n\r\nconst SubscriptionPlans: React.FC<SubscriptionPlansProps> = ({ onSelectPlan }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-8\">\r\n      {plans.map((plan) => (\r\n        <div key={plan.name} className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n          <div className=\"px-6 py-8 bg-purple-600 text-white text-center\">\r\n            <h3 className=\"text-2xl font-bold\">{plan.name}</h3>\r\n            <div className=\"mt-4 flex items-center justify-center\">\r\n              <span className=\"text-4xl font-bold\">₹{plan.price}</span>\r\n              <span className=\"ml-2 text-purple-200\">/{plan.duration}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"px-6 py-8\">\r\n            <button\r\n              onClick={() => onSelectPlan(plan)}\r\n              className=\"w-full bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition duration-300\"\r\n            >\r\n              Select Plan\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionPlans;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from '../../../redux/store';\r\nimport { updateSubscription } from '../../../redux/slices/recruiterSlice';\r\nimport { updateSubscriptionApi } from '../../../api/recruiterApi';\r\n\r\ninterface RazorpayPaymentProps {\r\n  amount: number;\r\n  planDuration: string;\r\n  onSuccess: () => void;\r\n  onFailure: (error: string) => void;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    Razorpay: any;\r\n  }\r\n}\r\n\r\nconst RazorpayPayment: React.FC<RazorpayPaymentProps> = ({ amount, planDuration, onSuccess, onFailure }) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const [isScriptLoaded, setIsScriptLoaded] = useState(false);\r\n  const { recruiter } = useSelector((state: RootState) => state.recruiter);\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n    script.async = true;\r\n    script.onload = () => setIsScriptLoaded(true);\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  const handlePayment = () => {\r\n    if (!isScriptLoaded) {\r\n      onFailure('Razorpay script not loaded yet. Please try again.');\r\n      return;\r\n    }\r\n\r\n    if (typeof window.Razorpay !== 'function') {\r\n      onFailure('Razorpay is not available. Please check your internet connection and try again.');\r\n      return;\r\n    }\r\n\r\n    const options = {\r\n      key: \"rzp_test_mRydipg2bgDZmQ\", \r\n      amount: amount * 100, \r\n      currency: 'INR',\r\n      name: '4JOBS',\r\n      description: `${planDuration} Subscription`,\r\n      handler: async function (response: any) {\r\n        try {\r\n          const expiryDate = calculateExpiryDate(planDuration);\r\n          const subscriptionData = { \r\n            subscribed: true, \r\n            planDuration, \r\n            expiryDate: expiryDate.toISOString(),\r\n            subscriptionAmount:amount,\r\n          };\r\n\r\n          // Update subscription on the server\r\n          await updateSubscriptionApi(recruiter.id, subscriptionData);\r\n\r\n          // Update subscription in Redux state\r\n          dispatch(updateSubscription(subscriptionData));\r\n\r\n          onSuccess();\r\n        } catch (error) {\r\n          console.error('Error updating subscription:', error);\r\n          onFailure('Payment successful, but failed to update subscription. Please contact support.');\r\n        }\r\n      },\r\n      prefill: {\r\n        name: 'Recruiter Name',\r\n        email: 'recruiter@example.com',\r\n      },\r\n      theme: {\r\n        color: '#7C3AED',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const razorpay = new window.Razorpay(options);\r\n      razorpay.open();\r\n    } catch (error) {\r\n      console.error('Error creating Razorpay instance:', error);\r\n      onFailure('Failed to initialize payment. Please try again.');\r\n    }\r\n  };\r\n\r\n  const calculateExpiryDate = (duration: string) => {\r\n    const now = new Date();\r\n    switch (duration) {\r\n      case '1 month':\r\n        return new Date(now.setMonth(now.getMonth() + 1));\r\n      case '3 months':\r\n        return new Date(now.setMonth(now.getMonth() + 3));\r\n      case '1 year':\r\n        return new Date(now.setFullYear(now.getFullYear() + 1));\r\n      default:\r\n        return now;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handlePayment}\r\n      className=\"bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition duration-300\"\r\n      disabled={!isScriptLoaded}\r\n    >\r\n      {isScriptLoaded ? 'Pay Now' : 'Loading...'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RazorpayPayment;\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { AppDispatch, RootState } from '../../../redux/store';\nimport { createJobPost } from '../../../redux/slices/jobPostSlice';\nimport JobPostForm from './JobPostForm';\nimport { BasicJobPostFormData } from '../../../types/jobPostTypes';\nimport RecruiterHeader from '../RecruiterHeader';\nimport { toast } from 'react-toastify';\nimport { PlusCircle } from 'lucide-react';\nimport SubscriptionPlans from '../subscription/SubscriptionPlans';\nimport RazorpayPayment from '../subscription/RazorpayPayment';\n\nconst CreateJobPost: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const { recruiter } = useSelector((state: RootState) => state.recruiter);\n  const [showSubscriptionPlans, setShowSubscriptionPlans] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState<any>(null);\n\n  const checkSubscriptionStatus = useCallback(() => {\n    if (recruiter) {\n      const isSubscribed = recruiter.subscribed;\n      const expiryDate = recruiter.expiryDate ? new Date(recruiter.expiryDate) : null;\n      const isExpired = expiryDate ? expiryDate < new Date() : true;\n\n      if (!isSubscribed || isExpired) {\n        setShowSubscriptionPlans(true);\n      } else {\n        setShowSubscriptionPlans(false);\n      }\n    }\n  }, [recruiter]);\n\n  useEffect(() => {\n    checkSubscriptionStatus();\n  }, [checkSubscriptionStatus]);\n\n  const handleSubmit = async (formData: BasicJobPostFormData) => {\n    if (recruiter && recruiter.id) {\n      if (!recruiter.subscribed || (recruiter.expiryDate && new Date(recruiter.expiryDate) < new Date())) {\n        toast.error('Please subscribe to a plan to create job posts.');\n        setShowSubscriptionPlans(true);\n        return;\n      }\n\n      try {\n        const jobPostData = {\n          ...formData,\n          recruiterId: recruiter.id,\n        };\n        await dispatch(createJobPost({ recruiterId: recruiter.id, postData: jobPostData })).unwrap();\n        toast.success('Job post created successfully');\n        navigate('/recruiter/jobs');\n      } catch (error) {\n        console.error('Failed to create job post:', error);\n        toast.error('Failed to create job post. Please try again.');\n      }\n    } else {\n      toast.error('Recruiter ID is not available. Please log in.');\n    }\n  };\n\n  const handleSelectPlan = (plan: any) => {\n    setSelectedPlan(plan);\n  };\n\n  const handlePaymentSuccess = () => {\n    setShowSubscriptionPlans(false);\n    toast.success('Subscription successful! You can now create job posts.');\n    checkSubscriptionStatus();\n  };\n\n  const handlePaymentFailure = (error: string) => {\n    toast.error(`Payment failed: ${error}`);\n  };\n\n  if (!recruiter) {\n    return (\n      <div className=\"flex justify-center items-center h-screen text-purple-700\">\n        Please log in to create a job post.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <RecruiterHeader />\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 max-w-7xl\">\n        {showSubscriptionPlans ? (\n          <div className=\"bg-white shadow-md rounded-lg p-6\">\n            <h2 className=\"text-2xl sm:text-3xl font-bold mb-6 text-purple-700\">Subscribe to Create Job Posts</h2>\n            <SubscriptionPlans onSelectPlan={handleSelectPlan} />\n            {selectedPlan && (\n              <div className=\"mt-8 text-center\">\n                <RazorpayPayment\n                  amount={selectedPlan.price}\n                  planDuration={selectedPlan.duration}\n                  onSuccess={handlePaymentSuccess}\n                  onFailure={handlePaymentFailure}\n                />\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"bg-white shadow-md rounded-lg p-6\">\n            <h2 className=\"text-2xl sm:text-3xl font-bold mb-6 text-purple-700 flex items-center\">\n              <PlusCircle className=\"mr-2 w-6 h-6 sm:w-8 sm:h-8\" /> Create New Job Post\n            </h2>\n            <JobPostForm\n              recruiterId={recruiter.id}\n              isEditing={false}\n              onSubmit={handleSubmit}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CreateJobPost;\n","import React from 'react';\r\nimport { AlertCircle, CheckCircle } from 'lucide-react'; \r\ninterface ToastProps {\r\n  message: string;\r\n  type: 'success' | 'error';\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({ message, type }) => {\r\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\r\n  const Icon = type === 'success' ? CheckCircle : AlertCircle;\r\n\r\n  return (\r\n    <div className={`flex items-center p-4 mb-4 text-white ${bgColor} rounded-lg shadow-md`}>\r\n      <Icon className=\"mr-2\" size={20} />\r\n      <span>{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../../../redux/store';\nimport { updateJobPost } from '../../../redux/slices/jobPostSlice';\nimport JobPostForm from './JobPostForm';\nimport { BasicJobPostFormData } from '../../../types/jobPostTypes';\nimport RecruiterHeader from '../RecruiterHeader';\nimport Toast from './Toast';\nimport { Edit } from 'lucide-react';\n\nconst EditJobPost: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const { posts } = useSelector((state: RootState) => state.jobPosts);\n  const { recruiter } = useSelector((state: RootState) => state.recruiter);\n  const [jobPost, setJobPost] = useState<BasicJobPostFormData | null>(null);\n\n  useEffect(() => {\n    const post = posts.find(p => p._id === id);\n    if (post) {\n      setJobPost(post);\n    } else {\n      Toast({ message: 'Job post not found.', type: 'error' });\n      navigate('/recruiter/jobs');\n    }\n  }, [id, posts, navigate]);\n\n  const handleSubmit = async (formData: BasicJobPostFormData) => {\n    if (id && recruiter?.id) {\n      try {\n        await dispatch(updateJobPost({ id, postData: formData })).unwrap();\n        Toast({ message: 'Job post updated successfully', type: 'success' });\n        navigate('/recruiter/jobs');\n      } catch (error) {\n        console.error('Failed to update job post:', error);\n        Toast({ message: 'Failed to update job post. Please try again.', type: 'error' });\n      }\n    } else {\n      Toast({ message: 'Recruiter ID is not available.', type: 'error' });\n    }\n  };\n\n  if (!jobPost) {\n    return <div className=\"flex justify-center items-center h-screen\">\n      <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500\"></div>\n    </div>;\n  }\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <RecruiterHeader />\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 max-w-7xl\">\n        <div className=\"bg-white shadow-md rounded-lg p-6\">\n          <h2 className=\"text-2xl font-bold mb-6 text-purple-700 flex items-center\">\n            <Edit className=\"mr-2\" /> Edit Job Post\n          </h2>\n          <JobPostForm\n            initialData={jobPost}\n            recruiterId={recruiter?.id || ''}\n            isEditing={true}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditJobPost;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport {\r\n  fetchJobPostsAsync,\r\n  applyForJobAsync,\r\n  fetchJobPost,\r\n  reportJobAsync,\r\n} from \"../../redux/slices/authSlice\";\r\nimport { BasicJobPost } from \"../../types/jobPostTypes\";\r\nimport Header from \"../user/Header\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Pagination,\r\n  Box,\r\n  IconButton,\r\n  CircularProgress,\r\n  SelectChangeEvent,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { Business, LocationOn, CalendarToday, Flag } from \"@mui/icons-material\";\r\n\r\nconst JobList: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const navigate = useNavigate();\r\n  const { jobPosts, user } = useSelector((state: RootState) => state.auth);\r\n  const { posts, loading, error, totalPages, totalCount, currentPage } = jobPosts;\r\n  const appliedJobs = user?.appliedJobs || [];\r\n\r\n  const [page, setPage] = useState(currentPage);\r\n  const [limit, setLimit] = useState(10);\r\n  const [sortBy, setSortBy] = useState(\"createdAt\");\r\n  const [sortOrder, setSortOrder] = useState(\"desc\");\r\n  const [filter, setFilter] = useState({});\r\n  const [reportDialog, setReportDialog] = useState(false);\r\n  const [reportReason, setReportReason] = useState(\"\");\r\n  const [selectedJobId, setSelectedJobId] = useState<string | null>(null);\r\n  const isSmallScreen = useMediaQuery('(max-width:400px)'); // Check if screen is below 400px\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchJobPostsAsync({ page, limit, sortBy, sortOrder, filter }));\r\n  }, [dispatch, page, limit, sortBy, sortOrder, filter]);\r\n\r\n  const handleApply = async (jobId: string) => {\r\n    if (user?.id) {\r\n      try {\r\n        const resultAction = await dispatch(\r\n          applyForJobAsync({ userId: user.id, jobId })\r\n        );\r\n\r\n        if (applyForJobAsync.fulfilled.match(resultAction)) {\r\n          toast.success(\"Successfully applied for the job!\");\r\n          dispatch(fetchJobPostsAsync({ page, limit, sortBy, sortOrder, filter }));\r\n        } else if (applyForJobAsync.rejected.match(resultAction)) {\r\n          toast.error(resultAction.payload as string);\r\n        }\r\n      } catch (err) {\r\n        toast.error(\"Error occurred while applying.\");\r\n      }\r\n    } else {\r\n      toast.error(\"User ID not found. Please log in.\");\r\n    }\r\n  };\r\n\r\n  const handleReportClick = (jobId: string) => {\r\n    setSelectedJobId(jobId);\r\n    setReportDialog(true);\r\n  };\r\n\r\n  const handleReport = async () => {\r\n    if (user?.id && selectedJobId) {\r\n      try {\r\n        const resultAction = await dispatch(\r\n          reportJobAsync({ userId: user.id, jobId: selectedJobId, reason: reportReason })\r\n        );\r\n\r\n        if (reportJobAsync.fulfilled.match(resultAction)) {\r\n          toast.success('Job reported successfully');\r\n          setReportDialog(false);\r\n          setReportReason(\"\");\r\n          setSelectedJobId(null);\r\n        } else if (reportJobAsync.rejected.match(resultAction)) {\r\n          toast.error(resultAction.payload as string);\r\n        }\r\n      } catch (err) {\r\n        toast.error('Error occurred while reporting the job.');\r\n      }\r\n    } else {\r\n      toast.error('User ID not found. Please log in.');\r\n    }\r\n  };\r\n\r\n  const handleViewDetails = async (jobId: string) => {\r\n    try {\r\n      await dispatch(fetchJobPost(jobId));\r\n      navigate(`/jobs/${jobId}`);\r\n    } catch (error) {\r\n      toast.error(\"Error fetching job details. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleSortChange = (event: SelectChangeEvent<string>) => {\r\n    setSortBy(event.target.value as string);\r\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\r\n  };\r\n\r\n  const handleLimitChange = (event: SelectChangeEvent<number>) => {\r\n    setLimit(event.target.value as number);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleFilterChange = () => {\r\n    setFilter({});\r\n    setPage(1);\r\n  };\r\n\r\n  const renderApplyButton = (jobId: string) => {\r\n    if (!user?.id) {\r\n      return (\r\n        <Link\r\n          to=\"/login\"\r\n          className=\"px-4 py-2 bg-gradient-to-r from-purple-600 to-purple-400 hover:from-purple-700 hover:to-purple-500 text-white font-bold rounded-full shadow-md hover:shadow-lg text-sm\"\r\n        >\r\n          Login to Apply\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    if (!user.resume) {\r\n      return (\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          onClick={() => navigate(`/profile/${user.id}`)}\r\n          className=\"text-sm\"\r\n          sx={{\r\n            bgcolor: '#EAB308', // yellow-500\r\n            '&:hover': {\r\n              bgcolor: '#CA8A04' // yellow-600\r\n            }\r\n          }}\r\n        >\r\n          Update Profile\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        onClick={() => handleApply(jobId)}\r\n        disabled={appliedJobs?.includes(jobId)}\r\n        sx={{\r\n          bgcolor: '#9333EA', // purple-600\r\n          '&:hover': {\r\n            bgcolor: '#7E22CE' // purple-700\r\n          },\r\n          '&.Mui-disabled': {\r\n            bgcolor: '#E9D5FF', // purple-200\r\n            color: '#6B7280' // gray-500\r\n          }\r\n        }}\r\n      >\r\n        {appliedJobs?.includes(jobId) ? \"Applied\" : \"Apply Now\"}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  if (error) return <Typography color=\"error\" align=\"center\" p={4}>{error}</Typography>;\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: 'background.default', minHeight: '100vh' }}>\r\n      <Header />\r\n      <ToastContainer />\r\n\r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom className={`text-purple-700 font-bold ${isSmallScreen ? 'text-xl' : 'text-2xl sm:text-3xl'}`}>\r\n          Job Listings\r\n        </Typography>\r\n\r\n        <Grid container spacing={2} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} sm={4} md={3}>\r\n            <FormControl fullWidth sx={{ minWidth: 120 }}>\r\n              <InputLabel id=\"sort-by-label\" className=\"text-purple-700\">Sort By</InputLabel>\r\n              <Select\r\n                labelId=\"sort-by-label\"\r\n                value={sortBy}\r\n                label=\"Sort By\"\r\n                onChange={handleSortChange}\r\n                className=\"text-purple-700\"\r\n                size=\"small\"\r\n              >\r\n                <MenuItem value=\"createdAt\">Date Posted</MenuItem>\r\n                <MenuItem value=\"title\">Job Title</MenuItem>\r\n                <MenuItem value=\"company.name\">Company Name</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={3}>\r\n            <FormControl fullWidth sx={{ minWidth: 120 }}>\r\n              <InputLabel id=\"limit-label\" className=\"text-purple-700\">Per Page</InputLabel>\r\n              <Select\r\n                labelId=\"limit-label\"\r\n                value={limit}\r\n                label=\"Per Page\"\r\n                onChange={handleLimitChange}\r\n                className=\"text-purple-700\"\r\n                size=\"small\"\r\n              >\r\n                <MenuItem value={10}>10</MenuItem>\r\n                <MenuItem value={20}>20</MenuItem>\r\n                <MenuItem value={50}>50</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={3}>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={handleFilterChange}\r\n              sx={{\r\n                height: '100%',\r\n                bgcolor: '#9333EA', // purple-600\r\n                '&:hover': {\r\n                  bgcolor: '#7E22CE' // purple-700\r\n                }\r\n              }}\r\n              size=\"small\"\r\n            >\r\n              Clear Filters\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          {posts.map((job: BasicJobPost) => (\r\n            <Grid item xs={12} key={job._id} md={12} lg={12}>\r\n              <Box sx={{\r\n                boxShadow: 2,\r\n                border: '1px solid',\r\n                borderColor: 'purple.300',\r\n                borderRadius: 2,\r\n                p: isSmallScreen ? 1 : 2, // Adjust padding for small screens\r\n                mb: 2,\r\n                bgcolor: 'white'\r\n              }}>\r\n                <Typography variant=\"h6\" component=\"h2\" className={`text-purple-700 ${isSmallScreen ? 'text-lg' : 'text-lg sm:text-xl'}`}>\r\n                  {job.title}\r\n                </Typography>\r\n                <Typography color=\"text.secondary\" gutterBottom className={`flex items-center text-sm ${isSmallScreen ? 'text-xs' : 'sm:text-base'}`}>\r\n                  <Business className=\"mr-1 text-purple-600\" /> {job.company?.name}\r\n                </Typography>\r\n                <Typography color=\"text.secondary\" gutterBottom className={`flex items-center text-sm ${isSmallScreen ? 'text-xs' : 'sm:text-base'}`}>\r\n                  <LocationOn className=\"mr-1 text-purple-600\" /> {job.location}\r\n                </Typography>\r\n                <Typography color=\"text.secondary\" gutterBottom className={`flex items-center text-sm ${isSmallScreen ? 'text-xs' : 'sm:text-base'}`}>\r\n                  <CalendarToday className=\"mr-1 text-purple-600\" /> Posted on {new Date(job.createdAt).toLocaleDateString()}\r\n                </Typography>\r\n                <CardActions sx={{ justifyContent: 'flex-end' }}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleViewDetails(job._id)}\r\n                    sx={{\r\n                      bgcolor: '#9333EA', // purple-600\r\n                      '&:hover': {\r\n                        bgcolor: '#7E22CE' // purple-700\r\n                      }\r\n                    }}\r\n                    className={`text-sm ${isSmallScreen ? 'text-xs' : 'sm:text-base'}`}\r\n                  >\r\n                    View Details\r\n                  </Button>\r\n                  {renderApplyButton(job._id)}\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    color=\"error\"\r\n                    onClick={() => handleReportClick(job._id)}\r\n                    title=\"Report Job\"\r\n                    className={`text-sm ${isSmallScreen ? 'text-xs' : 'sm:text-base'}`}\r\n                  >\r\n                    <Flag className={`text-sm ${isSmallScreen ? 'text-xs' : 'sm:text-base'}`} />\r\n                  </IconButton>\r\n                </CardActions>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n          <Pagination\r\n            count={totalPages}\r\n            page={page}\r\n            onChange={handlePageChange}\r\n            color=\"secondary\"\r\n          />\r\n        </Box>\r\n\r\n        <Typography align=\"center\" color=\"textSecondary\" className=\"mt-2\">\r\n          Total Jobs: {totalCount}\r\n        </Typography>\r\n      </Container>\r\n\r\n      <Dialog open={reportDialog} onClose={() => setReportDialog(false)}>\r\n        <DialogTitle>Report Job</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"reason\"\r\n            label=\"Reason\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={reportReason}\r\n            onChange={(e) => setReportReason(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setReportDialog(false)}\r\n            sx={{\r\n              bgcolor: '#9333EA', // purple-600\r\n              color: 'white',\r\n              '&:hover': {\r\n                bgcolor: '#7E22CE' // purple-700\r\n              }\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleReport}\r\n            sx={{\r\n              bgcolor: '#9333EA', // purple-600\r\n              color: 'white',\r\n              '&:hover': {\r\n                bgcolor: '#7E22CE' // purple-700\r\n              }\r\n            }}\r\n          >\r\n            Submit Report\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchJobPost, applyForJobAsync } from \"../../redux/slices/authSlice\";\nimport { AppDispatch, RootState } from \"../../redux/store\";\nimport Header from \"../user/Header\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BasicJobPost } from \"../../types/jobPostTypes\";\nimport {\n  Briefcase,\n  MapPin,\n  Clock,\n  IndianRupee,\n  Calendar,\n  Award,\n  BookOpen,\n  AlertCircle,\n} from \"lucide-react\";\n\nconst LoadingSpinner: React.FC = () => (\n  <div className=\"flex justify-center items-center h-screen\">\n    <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-purple-600\"></div>\n  </div>\n);\n\nconst JobDetail: React.FC = () => {\n  const { jobId } = useParams<{ jobId: string }>();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n\n  const jobPost = useSelector((state: RootState) => {\n    const authJobPost = state.auth.jobPosts.posts.find(\n      (job: BasicJobPost) => job._id === jobId\n    );\n    if (authJobPost) return authJobPost;\n    return state.userSearch.jobPosts.find(\n      (job: BasicJobPost) => job._id === jobId\n    );\n  });\n\n  const user = useSelector((state: RootState) => state.auth.user);\n  const userId = user?.id;\n  const error = useSelector((state: RootState) => state.auth.error);\n\n  const [applying, setApplying] = useState(false);\n\n  useEffect(() => {\n    if (!jobPost && jobId) {\n      dispatch(fetchJobPost(jobId));\n    }\n  }, [dispatch, jobId, jobPost]);\n\n  const handleApply = async () => {\n    if (jobId && userId) {\n      try {\n        setApplying(true);\n        await dispatch(applyForJobAsync({ userId, jobId })).unwrap();\n        toast.success(\"Successfully applied for the job!\");\n      } catch (error) {\n        console.error(\"Error applying for job:\", error);\n        toast.error(\n          \"Error occurred while applying for the job. Please try again.\"\n        );\n      } finally {\n        setApplying(false);\n      }\n    } else {\n      console.error(\"Missing jobId or userId\");\n      toast.error(\"Missing jobId or userId\");\n    }\n  };\n\n  if (!jobPost) return <LoadingSpinner />;\n\n  const hasApplied = user?.appliedJobs?.includes(jobPost._id);\n  const hasResume = user?.resume;\n\n  const renderApplyButton = () => {\n    if (!userId) {\n      return (\n        <Link\n          to=\"/login\"\n          className=\"px-6 py-3 rounded-full bg-gradient-to-r from-purple-600 to-purple-600 hover:from-purple-700 hover:to-purple-700 text-white font-bold text-lg shadow-md hover:shadow-lg w-full sm:w-auto text-center\"\n        >\n          Login to Apply\n        </Link>\n      );\n    }\n\n    if (!hasResume) {\n      return (\n        <button\n          onClick={() => navigate(`/profile/${userId}`)}\n          className=\"px-6 py-3 rounded-full bg-yellow-500 hover:bg-yellow-600 text-white font-bold text-lg shadow-md hover:shadow-lg w-full sm:w-auto text-center\"\n        >\n          Update Profile to Apply\n        </button>\n      );\n    }\n\n    return (\n      <button\n        onClick={handleApply}\n        disabled={applying || hasApplied}\n        className={`px-6 py-3 rounded-full transition-all duration-300 ease-in-out ${\n          hasApplied\n            ? \"bg-gray-300 text-gray-600 cursor-not-allowed\"\n            : applying\n            ? \"bg-purple-400\"\n            : \"bg-gradient-to-r from-purple-600 to-purple-400 hover:from-purple-700 hover:to-purple-500\"\n        } text-white font-bold text-lg sm:text-base shadow-md hover:shadow-lg w-full sm:w-auto`}\n      >\n        {applying\n          ? \"Applying...\"\n          : hasApplied\n          ? \"Already Applied\"\n          : \"Apply Now\"}\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <Header />\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\n          <div className=\"bg-gradient-to-r from-purple-600 to-purple-300 text-white p-6\">\n            <h1 className=\"text-3xl font-bold mb-2 md:text-2xl sm:text-xl\">\n              {jobPost.title}\n            </h1>\n            <p className=\"text-xl flex items-center md:text-lg sm:text-base\">\n              <Briefcase className=\"mr-2 text-base sm:text-lg\" />\n              {jobPost.company?.name}\n            </p>\n          </div>\n          <div className=\"p-6\">\n            {error && (\n              <div\n                className=\"mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 flex items-center\"\n                role=\"alert\"\n              >\n                <AlertCircle className=\"mr-2\" size={20} />\n                <p>{error}</p>\n              </div>\n            )}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n              <div className=\"space-y-4\">\n                <h2 className=\"text-xl font-semibold mb-2\">Job Details</h2>\n                <p className=\"flex items-center text-base md:text-sm\">\n                  <MapPin className=\"mr-2 text-gray-600\" size={20} />\n                  <span className=\"font-semibold mr-2\">Location:</span>{\" \"}\n                  {jobPost.location}\n                </p>\n                <p className=\"flex items-center text-base md:text-sm\">\n                  <Clock className=\"mr-2 text-gray-600\" size={20} />\n                  <span className=\"font-semibold mr-2\">Work Type:</span>{\" \"}\n                  {jobPost.wayOfWork}\n                </p>\n                <p className=\"flex items-center text-base md:text-sm\">\n                  <IndianRupee className=\"mr-2 text-gray-600\" size={20} />\n                  <span className=\"font-semibold mr-2\">Salary Range:</span> ₹\n                  {jobPost.salaryRange.min} - ₹{jobPost.salaryRange.max}\n                </p>\n                <p className=\"flex items-center text-base md:text-sm\">\n                  <AlertCircle className=\"mr-2 text-gray-600\" size={20} />\n                  <span className=\"font-semibold mr-2\">Status:</span>{\" \"}\n                  {jobPost.status}\n                </p>\n              </div>\n              <div className=\"space-y-4\">\n                <h2 className=\"text-xl font-semibold mb-2\">Date Information</h2>\n                <p className=\"flex items-center text-base md:text-sm\">\n                  <Calendar className=\"mr-2 text-gray-600\" size={20} />\n                  <span className=\"font-semibold mr-2\">Posted Date:</span>{\" \"}\n                  {new Date(jobPost.createdAt).toLocaleDateString()}\n                </p>\n                <p className=\"flex items-center text-base md:text-sm\">\n                  <Calendar className=\"mr-2 text-gray-600\" size={20} />\n                  <span className=\"font-semibold mr-2\">Last Updated:</span>{\" \"}\n                  {new Date(jobPost.updatedAt).toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"mb-6\">\n              <h2 className=\"text-2xl font-bold mb-2 flex items-center\">\n                <Award className=\"mr-2 text-purple-600\" size={24} />\n                Description\n              </h2>\n              <p className=\"text-gray-700 leading-relaxed\">\n                {jobPost.description}\n              </p>\n            </div>\n\n            <div className=\"mb-6\">\n              <h2 className=\"text-2xl font-bold mb-2 flex items-center\">\n                <BookOpen className=\"mr-2 text-purple-600\" size={24} />\n                Required Skills\n              </h2>\n              <div className=\"flex flex-wrap gap-2\">\n                {jobPost.skillsRequired.map((skill, index) => (\n                  <span\n                    key={index}\n                    className=\"bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-medium\"\n                  >\n                    {skill}\n                  </span>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"mb-6\">\n              <h2 className=\"text-2xl font-bold mb-2 flex items-center\">\n                <Award className=\"mr-2 text-purple-600\" size={24} />\n                Required Qualifications\n              </h2>\n              <div className=\"flex flex-wrap gap-2\">\n                {jobPost.qualifications.map((qualification, index) => (\n                  <span\n                    key={index}\n                    className=\"bg-indigo-100 text-indigo-800 px-3 py-1 rounded-full text-sm font-medium\"\n                  >\n                    {qualification}\n                  </span>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"mt-8 flex justify-center\">\n              {renderApplyButton()}\n            </div>\n\n            {!hasResume && userId && (\n              <div className=\"mt-4 text-center text-red-600\">\n                Please update your profile and add a resume before applying.\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n      />\n    </div>\n  );\n};\n\nexport default JobDetail;\n","import React from 'react';\r\n\r\ninterface PaginationProps {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  onPageChange: (page: number) => void;\r\n}\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({ currentPage, totalPages, onPageChange }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav className=\"flex justify-center mt-6\">\r\n      <ul className=\"flex\">\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className=\"mx-1\">\r\n            <button\r\n              onClick={() => onPageChange(number)}\r\n              className={`px-3 py-2 rounded ${\r\n                currentPage === number\r\n                  ? 'bg-blue-500 text-white'\r\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n              }`}\r\n            >\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\ninterface ErrorMessageProps {\r\n  message: string;\r\n}\r\n\r\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({ message }) => {\r\n  return (\r\n    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\r\n      <strong className=\"font-bold\">Error: </strong>\r\n      <span className=\"block sm:inline\">{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: number;\r\n  className?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ size = 24, className = '' }) => {\r\n  return (\r\n    <svg\r\n      className={`animate-spin ${className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../../redux/store\";\nimport {\n  fetchContestantsForJob,\n  fetchFilteredContestantsForJob,\n  clearContestants,\n} from \"../../../redux/slices/contestantSlice\";\nimport { User, Mail, Eye, FileText, Filter } from \"lucide-react\";\nimport Pagination from \"../jobPost/common/agination\";\nimport ErrorMessage from \"../jobPost/common/ErrorMessage\";\nimport LoadingSpinner from \"../jobPost/common/LoadingSpinner\";\nimport RecruiterHeader from \"../RecruiterHeader\";\n\nconst JobContestantsList: React.FC = () => {\n  const { jobId } = useParams<{ jobId: string }>();\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const {\n    contestants,\n    filteredContestants,\n    loading,\n    error,\n    totalPages,\n    currentPage,\n  } = useSelector((state: RootState) => state.contestants);\n\n  const [page, setPage] = useState(1);\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [isFiltering, setIsFiltering] = useState(false);\n  \n\n  useEffect(() => {\n    if (jobId) {\n      dispatch(fetchContestantsForJob({ jobId, page }));\n    }\n    return () => {\n      dispatch(clearContestants());\n    };\n  }, [dispatch, jobId, page]);\n\n  const handleViewContestant = (contestantId: string) => {\n    navigate(`/recruiter/contestant/${contestantId}`);\n  };\n\n  const handlePageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleFilterApplicants = async () => {\n    if (jobId) {\n      setIsFiltering(true);\n      await dispatch(fetchFilteredContestantsForJob(jobId));\n      setIsFiltered(true);\n      setIsFiltering(false);\n    }\n  };\n\n  const handleResetFilter = () => {\n    if (jobId) {\n      dispatch(fetchContestantsForJob({ jobId, page }));\n      setIsFiltered(false);\n    }\n  };\n\n  if (loading) return <LoadingSpinner />;\n  if (error) return <ErrorMessage message={error} />;\n\n  const displayedContestants = isFiltered ? filteredContestants : contestants;\n  const contestantsToRender = Array.isArray(displayedContestants) ? displayedContestants : [displayedContestants];\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <RecruiterHeader />\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 max-w-7xl\">\n        <h2 className=\"text-3xl font-bold mb-6 text-purple-800\">\n          Job Applicants\n        </h2>\n        <div className=\"mb-4\">\n          <button\n            onClick={isFiltered ? handleResetFilter : handleFilterApplicants}\n            className=\"bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition duration-300 flex items-center\"\n            disabled={isFiltering}\n          >\n            {isFiltering ? (\n              <>\n                <LoadingSpinner size={18} className=\"mr-2\" />\n                Filtering...\n              </>\n            ) : (\n              <>\n                <Filter size={18} className=\"mr-2\" />\n                {isFiltered ? \"Reset Filter\" : \"Filter Skilled Applicants\"}\n              </>\n            )}\n          </button>\n        </div>\n        {contestantsToRender.length === 0 ? (\n          <p className=\"text-center text-gray-600\">\n            No applicants for this job post yet.\n          </p>\n        ) : (\n          <>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {contestantsToRender.map((contestant) => (\n                <div\n                  key={contestant.id}\n                  className=\"bg-white border border-purple-200 p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\"\n                >\n                  <div className=\"flex items-center mb-4\">\n                    {contestant.profileImage ? (\n                      <img\n                        src={`${contestant.profileImage}`}\n                        alt={contestant.name}\n                        className=\"w-16 h-16 rounded-full mr-4 object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-16 h-16 rounded-full bg-purple-200 flex items-center justify-center mr-4\">\n                        <User size={32} className=\"text-purple-600\" />\n                      </div>\n                    )}\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-purple-800\">\n                        {contestant.name}\n                      </h3>\n                      <div className=\"flex items-center text-gray-600\">\n                        <Mail size={14} className=\"mr-1\" />\n                        <span>{contestant.email}</span>\n                      </div>\n                      {isFiltered && 'matchPercentage' in contestant && (\n                        <div className=\"text-green-600 font-semibold mt-1\">\n                          Match: {contestant.matchPercentage}%\n                        </div>\n                      )}\n                      <div className=\"flex items-center text-gray-600 mt-2\">\n                        <FileText size={14} className=\"mr-1\" />\n                        {contestant?.resume ? (\n                          <a\n                            href={`${contestant.resume}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            download\n                            className=\"text-purple-600 hover:underline\"\n                          >\n                            Download Resume\n                          </a>\n                        ) : (\n                          <span>No resume uploaded</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => handleViewContestant(contestant.id)}\n                    className=\"w-full bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition duration-300 flex items-center justify-center\"\n                  >\n                    <Eye size={18} className=\"mr-2\" />\n                    View Details\n                  </button>\n                </div>\n              ))}\n            </div>\n            {totalPages > 1 && (\n              <div className=\"mt-8\">\n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={handlePageChange}\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default JobContestantsList;\n","import React, { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../../../redux/store';\nimport { fetchContestantDetailsAsync, clearSelectedContestant } from '../../../redux/slices/contestantSlice';\nimport ErrorMessage from '../jobPost/common/ErrorMessage';\nimport LoadingSpinner from '../jobPost/common/LoadingSpinner';\nimport { startConversationApi } from '../../../api/recruiterApi';\nimport RecruiterHeader from '../RecruiterHeader';\nimport { User, Mail , Phone, Calendar, Award, FileText, ArrowLeft,  Globe } from 'lucide-react';\n\nconst ContestantDetails: React.FC = () => {\n  const { contestantId } = useParams<{ contestantId: string }>();\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const { selectedContestant, loading, error } = useSelector((state: RootState) => state.contestants);\n  const recruiterId = useSelector((state: RootState) => state.recruiter.recruiter?.id);\n  const handleStartConversation = async () => {\n    try {\n      await startConversationApi(selectedContestant?.id?selectedContestant?.id:\"\",recruiterId);\n      navigate(`/recruiter/messages`);\n    } catch (error) {\n      console.error('Error starting conversation:', error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  useEffect(() => {\n    if (contestantId) {\n      dispatch(fetchContestantDetailsAsync(contestantId));\n    }\n    return () => {\n      dispatch(clearSelectedContestant());\n    };\n  }, [dispatch, contestantId]);\n\n  if (loading) return <LoadingSpinner />;\n  if (error) return <ErrorMessage message={error} />;\n  if (!selectedContestant) return <div>No contestant data available.</div>;\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen\">\n      <RecruiterHeader />\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h2 className=\"text-4xl font-extrabold mb-8 text-purple-900 border-b-2 border-purple-200 pb-2\">Applicant Profile</h2>\n          <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n            <div className=\"p-8\">\n              <div className=\"flex flex-col md:flex-row items-center mb-8\">\n                {selectedContestant.profileImage ? (\n                  <img \n                    src={`${selectedContestant.profileImage}`} \n                    alt={selectedContestant.name} \n                    className=\"w-32 h-32 rounded-full border-4 border-purple-200 mr-6 mb-4 md:mb-0\" \n                  />\n                ) : (\n                  <div className=\"w-32 h-32 rounded-full bg-purple-100 flex items-center justify-center mr-6 mb-4 md:mb-0\">\n                    <User size={48} className=\"text-purple-500\" />\n                  </div>\n                )}\n                <div>\n                  <h3 className=\"text-3xl font-bold text-purple-900 mb-2\">{selectedContestant.name}</h3>\n                  <div className=\"flex flex-wrap items-center text-gray-600\">\n                    <Mail size={16} className=\"mr-2 text-purple-500\" />\n                    <span className=\"mr-4\">{selectedContestant.email}</span>\n                  </div>\n                  <div className=\"flex flex-wrap items-center text-gray-600\">\n                    <Phone size={16} className=\"mr-2 text-purple-500\" />\n                    <span className=\"mr-4\">{selectedContestant.phone}</span>\n                  </div>\n                </div>\n              </div>\n\n              {(selectedContestant.bio || selectedContestant.about) && (\n                <div className=\"mb-8 bg-purple-50 rounded-lg p-6\">\n                  <h4 className=\"text-xl font-semibold text-purple-900 mb-3\">About Me</h4>\n                  <p className=\"text-gray-700 leading-relaxed\">{selectedContestant.bio || selectedContestant.about}</p>\n                </div>\n              )}\n\n              {selectedContestant.skills && selectedContestant.skills.length > 0 && (\n                <div className=\"mb-8\">\n                  <h4 className=\"text-xl font-semibold text-purple-900 mb-3\">Skills</h4>\n                  <div className=\"flex flex-wrap\">\n                    {selectedContestant.skills.map((skill, index) => (\n                      <span key={index} className=\"bg-purple-100 text-purple-800 rounded-full px-4 py-2 text-sm font-medium mr-2 mb-2 shadow-sm\">\n                        {skill}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {selectedContestant.experiences && selectedContestant.experiences.length > 0 && (\n                <div className=\"mb-8\">\n                  <h4 className=\"text-xl font-semibold text-purple-900 mb-3\">Professional Experience</h4>\n                  <div className=\"space-y-6\">\n                    {selectedContestant.experiences.map((exp) => (\n                      <div key={exp.id} className=\"bg-white rounded-lg shadow-md p-6 border-l-4 border-purple-500\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <div>\n                            <p className=\"font-semibold text-lg text-purple-900\">{exp.title}</p>\n                            <p className=\"text-purple-700\">{exp.company}</p>\n                          </div>\n                          <p className=\"text-sm text-gray-600\">{exp.startDate} - {exp.endDate || 'Present'}</p>\n                        </div>\n                        <p className=\"text-gray-700 mt-2\">{exp.description}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {selectedContestant.projects && selectedContestant.projects.length > 0 && (\n                <div className=\"mb-8\">\n                  <h4 className=\"text-xl font-semibold text-purple-900 mb-3\">Projects</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {selectedContestant.projects.map((project) => (\n                      <div key={project.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                        {project.imageUrl && (\n                          <img \n                            src={`${project.imageUrl}`} \n                            alt={project.name} \n                            className=\"w-full h-48 object-cover\" \n                          />\n                        )}\n                        <div className=\"p-6\">\n                          <p className=\"font-semibold text-lg text-purple-900 mb-2\">{project.name}</p>\n                          <p className=\"text-gray-700 mb-4\">{project.description}</p>\n                          {project.link && (\n                            <a \n                              href={`${project.link}`} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\" \n                              className=\"inline-flex items-center text-purple-600 hover:text-purple-800 transition-colors duration-300\"\n                            >\n                              <Globe size={16} className=\"mr-2\" />\n                              View Project\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {selectedContestant.certificates && selectedContestant.certificates.length > 0 && (\n                <div className=\"mb-8\">\n                  <h4 className=\"text-xl font-semibold text-purple-900 mb-3\">Certifications</h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n                    {selectedContestant.certificates.map((cert) => (\n                      <div key={cert.id} className=\"bg-white rounded-lg shadow-md p-6\">\n                        <Award size={24} className=\"text-purple-500 mb-2\" />\n                        <p className=\"font-semibold text-purple-900\">{cert.name}</p>\n                        <p className=\"text-sm text-gray-600 mt-1\">\n                          {cert.issuingOrganization}\n                        </p>\n                        <p className=\"text-sm text-gray-600 mt-1\">\n                          Issued: {new Date(cert.dateOfIssue).toLocaleDateString()}\n                        </p>\n                        {cert.imageUrl && (\n                          <img \n                            src={`${cert.imageUrl}`} \n                            alt={cert.name} \n                            className=\"mt-2 w-full h-32 object-cover rounded-md\" \n                          />\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8\">\n                {selectedContestant.dateOfBirth && (\n                  <div className=\"flex items-center text-gray-700 bg-gray-100 rounded-lg p-4\">\n                    <Calendar size={20} className=\"mr-3 text-purple-600\" />\n                    <div>\n                      <p className=\"text-sm text-gray-500\">Date of Birth</p>\n                      <p className=\"font-medium\">{new Date(selectedContestant.dateOfBirth).toLocaleDateString()}</p>\n                    </div>\n                  </div>\n                )}\n                {selectedContestant.gender && (\n                  <div className=\"flex items-center text-gray-700 bg-gray-100 rounded-lg p-4\">\n                    <User size={20} className=\"mr-3 text-purple-600\" />\n                    <div>\n                      <p className=\"text-sm text-gray-500\">Gender</p>\n                      <p className=\"font-medium\">{selectedContestant.gender}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {selectedContestant.resume && (\n                <div className=\"mt-8\">\n                  <a\n                    href={`${selectedContestant.resume}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"inline-flex items-center bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors duration-300 shadow-md\"\n                  >\n                    <FileText size={20} className=\"mr-2\" />\n                    View Full Resume\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n          <button\n            onClick={() => navigate(-1)}\n            className=\"mt-8 inline-flex items-center bg-gray-200 text-gray-800 px-6 py-3 rounded-lg hover:bg-gray-300 transition-colors duration-300 shadow-md\"\n          >\n            <ArrowLeft size={20} className=\"mr-2\" />\n            Back to Applicants\n          </button>\n          <button\n        onClick={handleStartConversation}\n        className=\"mt-4 bg-purple-500 text-white py-2 px-4 rounded hover:bg-purple-600 transition duration-300\"\n      >\n        Start Conversation\n      </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContestantDetails;","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchUsers,\r\n  blockUser,\r\n  unblockUser,\r\n} from \"../../redux/slices/adminSlice\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport { User } from \"../../types/auth\";\r\nimport Header from \"./AdminHeader\";\r\nimport Sidebar from \"./AdminSidebar\";\r\nimport {\r\n  FaBan,\r\n  FaUnlock,\r\n  FaSearch,\r\n  FaTimes,\r\n  FaChevronLeft,\r\n  FaChevronRight,\r\n} from \"react-icons/fa\";\r\n\r\nconst UserList: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const { users, loading, error } = useSelector(\r\n    (state: RootState) => state.admin\r\n  );\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [usersPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const handleBlock = (userId: string) => {\r\n    dispatch(blockUser(userId));\r\n  };\r\n\r\n  const handleUnblock = (userId: string) => {\r\n    dispatch(unblockUser(userId));\r\n  };\r\n\r\n  const filteredUsers = users.filter(\r\n    (user: User) =>\r\n      user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = filteredUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  const totalPages = Math.ceil(filteredUsers.length / usersPerPage);\r\n\r\n  const handleClearSearch = () => {\r\n    setSearchTerm(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen text-purple-600\">\r\n        Loading...\r\n      </div>\r\n    );\r\n  if (error)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen text-red-500\">\r\n        Error: {error}\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row min-h-screen bg-gray-100\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <Header />\r\n        <main className=\"p-2 sm:p-4 md:p-6 flex-grow overflow-auto\">\r\n          <div className=\"mb-4 flex flex-col sm:flex-row\">\r\n            <div className=\"relative flex-grow mb-2 sm:mb-0 sm:mr-2\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search users...\"\r\n                value={searchTerm}\r\n                onChange={(e) => {\r\n                  setSearchTerm(e.target.value);\r\n                  setCurrentPage(1);\r\n                }}\r\n                className=\"w-full px-3 sm:px-4 py-2 text-sm sm:text-base border rounded-lg text-gray-700 focus:outline-none focus:border-purple-500\"\r\n              />\r\n              {searchTerm && (\r\n                <button\r\n                  onClick={handleClearSearch}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-600 hover:text-gray-800\"\r\n                >\r\n                  <FaTimes className=\"text-sm sm:text-base\" />\r\n                </button>\r\n              )}\r\n            </div>\r\n            <button className=\"bg-purple-500 text-white px-3 sm:px-4 py-2 rounded-lg hover:bg-purple-600 text-sm sm:text-base\">\r\n              <FaSearch className=\"inline mr-1\" /> Search\r\n            </button>\r\n          </div>\r\n          <div className=\"bg-white p-3 sm:p-4 md:p-6 rounded-lg shadow-md\">\r\n            <h1 className=\"text-xl sm:text-2xl font-semibold mb-4 sm:mb-6 text-purple-800\">\r\n              User List\r\n            </h1>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full bg-white text-sm sm:text-base\">\r\n                <thead className=\"bg-purple-100\">\r\n                  <tr>\r\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">\r\n                      Name\r\n                    </th>\r\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">\r\n                      Email\r\n                    </th>\r\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">\r\n                      Status\r\n                    </th>\r\n                    <th className=\"py-2 sm:py-3 px-3 sm:px-6 text-left text-xs sm:text-sm font-medium text-purple-800 uppercase tracking-wider\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-purple-200\">\r\n                  {currentUsers.map((user: User) => (\r\n                    <tr key={user.id} className=\"hover:bg-purple-50\">\r\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">{user.name}</td>\r\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">\r\n                        {user.email}\r\n                      </td>\r\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">\r\n                        <span\r\n                          className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                            user.isBlocked\r\n                              ? \"bg-red-100 text-red-800\"\r\n                              : \"bg-green-100 text-green-800\"\r\n                          }`}\r\n                        >\r\n                          {user.isBlocked ? \"Blocked\" : \"Active\"}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"py-2 sm:py-4 px-3 sm:px-6\">\r\n                        {user.isBlocked ? (\r\n                          <button\r\n                            onClick={() => handleUnblock(user.id)}\r\n                            className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-1 sm:py-2 px-2 sm:px-4 rounded text-xs sm:text-sm inline-flex items-center\"\r\n                          >\r\n                            <FaUnlock className=\"mr-1 sm:mr-2\" /> Unblock\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            onClick={() => handleBlock(user.id)}\r\n                            className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-1 sm:py-2 px-2 sm:px-4 rounded text-xs sm:text-sm inline-flex items-center\"\r\n                          >\r\n                            <FaBan className=\"mr-1 sm:mr-2\" /> Block\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {/* Pagination controls */}\r\n            <div className=\"mt-4 flex justify-between items-center\">\r\n              <span className=\"text-purple-800\">\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"bg-purple-500 text-white px-3 py-2 rounded-lg hover:bg-purple-600 disabled:bg-purple-300 disabled:cursor-not-allowed\"\r\n                >\r\n                  <FaChevronLeft className=\"inline mr-1\" /> Previous\r\n                </button>\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"bg-purple-500 text-white px-3 py-2 rounded-lg hover:bg-purple-600 disabled:bg-purple-300 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next <FaChevronRight className=\"inline ml-1\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  fetchPostsByUserId,\n  deletePost,\n} from \"../../../redux/slices/postSlice\";\nimport { RootState, AppDispatch } from \"../../../redux/store\";\nimport { Post as PostType } from \"../../../types/postTypes\";\nimport { Trash2, Edit, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport Header from \"../Header\";\n\nconst Modal: React.FC<{\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  title: string;\n  message: string;\n}> = ({ isOpen, onClose, onConfirm, title, message }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n      <div className=\"bg-white p-6 rounded-lg max-w-sm w-full\">\n        <h2 className=\"text-xl font-bold mb-4\">{title}</h2>\n        <p className=\"mb-6\">{message}</p>\n        <div className=\"flex justify-end space-x-4\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Toast: React.FC<{\n  message: string;\n  type: \"success\" | \"error\";\n  onClose: () => void;\n}> = ({ message, type, onClose }) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  return (\n    <div\n      className={`fixed bottom-4 right-4 p-4 rounded-lg text-white ${\n        type === \"success\" ? \"bg-green-500\" : \"bg-red-500\"\n      }`}\n    >\n      {message}\n    </div>\n  );\n};\n\nconst UserPostsList: React.FC = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const {\n    userPosts = [],\n    status,\n    error,\n    totalPages,\n  } = useSelector((state: RootState) => state.posts);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [postToDelete, setPostToDelete] = useState<string | null>(null);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: \"success\" | \"error\";\n  } | null>(null);\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(fetchPostsByUserId({ userId, page: currentPage, limit: 10 }));\n    }\n  }, [userId, dispatch, currentPage]);\n\n  const handleDeleteClick = (postId: string) => {\n    setPostToDelete(postId);\n    setIsDeleteModalOpen(true);\n  };\n\n  const handleDeleteConfirm = async () => {\n    if (postToDelete) {\n      try {\n        await dispatch(deletePost(postToDelete)).unwrap();\n        setToast({ message: \"Post deleted successfully\", type: \"success\" });\n        if (userId) {\n          dispatch(\n            fetchPostsByUserId({ userId, page: currentPage, limit: 10 })\n          );\n        }\n      } catch (error) {\n        setToast({\n          message: \"Failed to delete post. Please try again.\",\n          type: \"error\",\n        });\n      } finally {\n        setIsDeleteModalOpen(false);\n        setPostToDelete(null);\n      }\n    }\n  };\n\n  const handleEdit = (postId: string) => {\n    navigate(`/edit-post/${postId}`);\n  };\n\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"min-h-screen bg-purple-100\">\n      <Header />\n      {status === \"loading\" ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500\"></div>\n        </div>\n      ) : status === \"failed\" ? (\n        <div className=\"text-red-500 text-center py-4 bg-red-100 border border-red-300 mx-4 mt-4\">\n          Error: {error}\n        </div>\n      ) : userPosts.length === 0 ? (\n        <div className=\"text-center py-4 bg-yellow-100 border border-yellow-300 text-yellow-800 mx-4 mt-4\">\n          No posts found for this user.\n        </div>\n      ) : (\n        <div className=\"container mx-auto px-4 py-8\">\n          <h2 className=\"text-3xl font-bold text-purple-700 mb-6\">\n            User Posts\n          </h2>\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {userPosts.map((post: PostType) => (\n              <PostCard\n                key={post._id}\n                post={post}\n                onDelete={() => handleDeleteClick(post._id)}\n                onEdit={() => handleEdit(post._id)}\n              />\n            ))}\n          </div>\n          <Pagination\n            postsPerPage={10}\n            totalPages={totalPages}\n            paginate={paginate}\n            currentPage={currentPage}\n          />\n        </div>\n      )}\n\n      <Modal\n        isOpen={isDeleteModalOpen}\n        onClose={() => {\n          console.log(\"Modal closed\");\n          setIsDeleteModalOpen(false);\n          setPostToDelete(null);\n        }}\n        onConfirm={handleDeleteConfirm}\n        title=\"Delete Post\"\n        message=\"Are you sure you want to delete this post? This action cannot be undone.\"\n      />\n\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nconst PostCard: React.FC<{\n  post: PostType;\n  onDelete: () => void;\n  onEdit: () => void;\n}> = ({ post, onDelete, onEdit }) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg\">\n      <div className=\"p-4\">\n        {post.status === \"blocked\" && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n            <strong className=\"font-bold\">Notice: </strong>\n            <span className=\"block sm:inline\">This post has been blocked by an admin.</span>\n          </div>\n        )}\n        <p className=\"text-gray-600 mb-4\">{post.content}</p>\n        {post.imageUrl && (\n          <img\n            src={post.imageUrl}\n            alt=\"Post\"\n            className=\"w-full h-48 object-cover rounded-md mb-4\"\n          />\n        )}\n        {post.videoUrl && (\n          <video\n            src={post.videoUrl}\n            controls\n            className=\"w-full h-48 object-cover rounded-md mb-4\"\n          >\n            Your browser does not support the video tag.\n          </video>\n        )}\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            onClick={onEdit}\n            className=\"p-2 text-purple-600 hover:bg-purple-100 rounded-full transition-colors duration-300\"\n          >\n            <Edit size={20} />\n          </button>\n          <button\n            onClick={onDelete}\n            className=\"p-2 text-red-600 hover:bg-red-100 rounded-full transition-colors duration-300\"\n          >\n            <Trash2 size={20} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Pagination: React.FC<{\n  postsPerPage: number;\n  totalPages: number;\n  paginate: (number: number) => void;\n  currentPage: number;\n}> = ({ totalPages, paginate, currentPage }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav className=\"flex justify-center mt-8\">\n      <ul className=\"flex space-x-2\">\n        <li>\n          <button\n            onClick={() => paginate(currentPage - 1)}\n            disabled={currentPage === 1}\n            className=\"px-3 py-2 rounded-md bg-purple-100 text-purple-700 hover:bg-purple-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <ChevronLeft size={20} />\n          </button>\n        </li>\n        {pageNumbers.map((number) => (\n          <li key={number}>\n            <button\n              onClick={() => paginate(number)}\n              className={`px-3 py-2 rounded-md ${\n                currentPage === number\n                  ? \"bg-purple-600 text-white\"\n                  : \"bg-purple-100 text-purple-700 hover:bg-purple-200\"\n              }`}\n            >\n              {number}\n            </button>\n          </li>\n        ))}\n        <li>\n          <button\n            onClick={() => paginate(currentPage + 1)}\n            disabled={currentPage === totalPages}\n            className=\"px-3 py-2 rounded-md bg-purple-100 text-purple-700 hover:bg-purple-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <ChevronRight size={20} />\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default UserPostsList;\n","export const formatFileSize = (bytes: number): string => {\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  if (bytes === 0) return '0 Byte';\r\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)).toString());\r\n  return Math.round((bytes / Math.pow(1024, i)) * 100) / 100 + ' ' + sizes[i];\r\n};\r\n\r\nexport const MAX_IMAGE_SIZE = 10 * 1024 * 1024; \r\nexport const MAX_VIDEO_SIZE = 200 * 1024 * 1024; \r\nexport const TARGET_VIDEO_SIZE = 40 * 1024 * 1024; \r\nexport const MAX_CONTENT_LENGTH = 2000; \r\n","import React from 'react';\r\n\r\nconst CompressionLoader: React.FC = () => {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <div className=\"relative w-8 h-8\">\r\n        <div className=\"absolute inset-0 bg-purple-300 rounded-full animate-ping opacity-75\"></div>\r\n        <div className=\"absolute inset-1 bg-purple-500 rounded-full animate-spin\">\r\n          <div className=\"w-2 h-2 bg-white rounded-full absolute top-0 left-1/2 transform -translate-x-1/2\"></div>\r\n        </div>\r\n      </div>\r\n      <span className=\"text-purple-600 font-medium\">Compressing video...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompressionLoader;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfessionalIcon: React.FC<{ path: string; delay: string }> = ({ path, delay }) => (\r\n  <div \r\n    className={`absolute text-purple-300 animate-float opacity-30`} \r\n    style={{ \r\n      animationDelay: delay,\r\n      left: `${Math.random() * 100}%`,\r\n      top: `${Math.random() * 100}%`,\r\n    }}\r\n  >\r\n    <svg className=\"w-12 h-12\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={path} />\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nconst FullScreenLoader: React.FC = () => {\r\n  const [likes, setLikes] = useState(0);\r\n  const [shares, setShares] = useState(0);\r\n  const [comments, setComments] = useState(0);\r\n  const [level, setLevel] = useState(1);\r\n  const [isViral, setIsViral] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!isViral) {\r\n        setLikes((prev) => Math.max(0, prev - 2));\r\n        setShares((prev) => Math.max(0, prev - 1));\r\n        setComments((prev) => Math.max(0, prev - 1));\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isViral]);\r\n\r\n  useEffect(() => {\r\n    if (likes >= 1000 && shares >= 500 && comments >= 750) {\r\n      setIsViral(true);\r\n    } else {\r\n      setIsViral(false);\r\n    }\r\n  }, [likes, shares, comments]);\r\n\r\n  useEffect(() => {\r\n    setLevel(Math.floor((likes + shares * 2 + comments * 1.5) / 1000) + 1);\r\n  }, [likes, shares, comments]);\r\n\r\n  const handleLike = () => {\r\n    if (!isViral) setLikes((prev) => prev + 50);\r\n  };\r\n\r\n  const handleShare = () => {\r\n    if (!isViral) setShares((prev) => prev + 25);\r\n  };\r\n\r\n  const handleComment = () => {\r\n    if (!isViral) setComments((prev) => prev + 35);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gradient-to-br from-purple-900 to-indigo-900 bg-opacity-90 flex flex-col items-center justify-center z-50 overflow-hidden backdrop-blur-sm\">\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <ProfessionalIcon path=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z\" delay=\"0s\" />\r\n        <ProfessionalIcon path=\"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\" delay=\"2s\" />\r\n        <ProfessionalIcon path=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z\" delay=\"4s\" />\r\n        <ProfessionalIcon path=\"M6 3a1 1 0 011-1h.01a1 1 0 010 2H7a1 1 0 01-1-1zm2 3a1 1 0 00-2 0v1a2 2 0 00-2 2v1a2 2 0 00-2 2v.683a3.7 3.7 0 011.055.485 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0A3.7 3.7 0 0118 12.683V12a2 2 0 00-2-2V9a2 2 0 00-2-2V6a1 1 0 10-2 0v1h-1V6a1 1 0 10-2 0v1H8V6zm10 8.868a3.704 3.704 0 01-4.055-.036 1.704 1.704 0 00-1.89 0 3.704 3.704 0 01-4.11 0 1.704 1.704 0 00-1.89 0A3.704 3.704 0 012 14.868V17a1 1 0 001 1h14a1 1 0 001-1v-2.132zM9 3a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm3 0a1 1 0 011-1h.01a1 1 0 110 2H13a1 1 0 01-1-1z\" delay=\"6s\" />\r\n      </div>\r\n      <div className=\"absolute top-0 left-0 right-0 bg-purple-700 bg-opacity-75 text-white py-2 text-center font-semibold animate-pulse\">\r\n        Uploading your post...\r\n      </div>\r\n      <div className=\"bg-white bg-opacity-90 rounded-xl p-8 shadow-2xl max-w-md w-full mt-12 transform hover:scale-105 transition-transform duration-300 relative z-10\">\r\n        <h2 className=\"text-3xl font-bold text-purple-700 mb-6 text-center animate-bounce\">Make Your Post Viral!</h2>\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-gradient-to-r from-purple-100 to-pink-100 rounded-lg p-4 shadow-inner relative overflow-hidden\">\r\n            <div className=\"absolute inset-0 bg-confetti opacity-10 animate-confetti\"></div>\r\n            <p className=\"text-gray-700 font-medium mb-2\">Your amazing post content goes here...</p>\r\n            <div className=\"flex justify-between items-center\">\r\n              <button\r\n                onClick={handleLike}\r\n                className=\"flex items-center space-x-1 text-pink-500 hover:text-pink-600 transition-colors duration-200 transform hover:scale-110\"\r\n              >\r\n                <svg className=\"w-5 h-5 animate-pulse\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z\" />\r\n                </svg>\r\n                <span>{likes} Likes</span>\r\n              </button>\r\n              <button\r\n                onClick={handleComment}\r\n                className=\"flex items-center space-x-1 text-blue-500 hover:text-blue-600 transition-colors duration-200 transform hover:scale-110\"\r\n              >\r\n                <svg className=\"w-5 h-5 animate-bounce\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                <span>{comments} Comments</span>\r\n              </button>\r\n              <button\r\n                onClick={handleShare}\r\n                className=\"flex items-center space-x-1 text-green-500 hover:text-green-600 transition-colors duration-200 transform hover:scale-110\"\r\n              >\r\n                <svg className=\"w-5 h-5 animate-spin\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z\" />\r\n                </svg>\r\n                <span>{shares} Shares</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-purple-700\">\r\n              <span className=\"text-2xl font-bold animate-pulse\">Level {level}</span>\r\n            </div>\r\n            <div className=\"text-yellow-500\">\r\n              {isViral && (\r\n                <div className=\"flex items-center space-x-2 animate-bounce\">\r\n                  <svg className=\"w-6 h-6 animate-spin\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  <span className=\"text-xl font-bold\">Viral!</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p className=\"mt-6 text-center text-gray-600 animate-pulse\">\r\n          {isViral\r\n            ? \"Congratulations! Your post went viral!\"\r\n            : \"Interact with your post to make it go viral!\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullScreenLoader;\r\n","import React, { useState, useCallback, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost } from \"../../../redux/slices/postSlice\";\nimport { RootState, AppDispatch } from \"../../../redux/store\";\nimport { ImageIcon, VideoIcon, XIcon } from \"lucide-react\";\nimport Header from \"../Header\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { FFmpeg } from \"@ffmpeg/ffmpeg\";\nimport { fetchFile } from \"@ffmpeg/util\";\nimport {\n  formatFileSize,\n  MAX_IMAGE_SIZE,\n  MAX_VIDEO_SIZE,\n  TARGET_VIDEO_SIZE,\n  MAX_CONTENT_LENGTH,\n} from \"../../../utils/fileUtils\";\nimport CompressionLoader from \"../../common/CompressionLoader\";\nimport FullScreenLoader from \"../../common/FullScreenLoader\";\n\nconst ALLOWED_IMAGE_TYPES = [\"image/jpeg\", \"image/png\", \"image/gif\"];\nconst ALLOWED_VIDEO_TYPES = [\"video/mp4\", \"video/quicktime\", \"video/x-msvideo\"];\n\nconst CreatePost: React.FC = () => {\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState<File | null>(null);\n  const [video, setVideo] = useState<File | null>(null);\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\n  const [previewVideo, setPreviewVideo] = useState<string | null>(null);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [contentError, setContentError] = useState<string | null>(null);\n  const [fileError, setFileError] = useState<string | null>(null);\n  const [isCompressing, setIsCompressing] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const dispatch = useDispatch<AppDispatch>();\n  const user = useSelector((state: RootState) => state.auth.user);\n  const [compressedVideo, setCompressedVideo] = useState<File | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const validateContent = (text: string) => {\n    if (text.length > MAX_CONTENT_LENGTH) {\n      setContentError(\n        `Content must be ${MAX_CONTENT_LENGTH} characters or less`\n      );\n      return false;\n    }\n    setContentError(null);\n    return true;\n  };\n\n  const validateFile = (file: File, isImage: boolean) => {\n    const maxSize = isImage ? MAX_IMAGE_SIZE : MAX_VIDEO_SIZE;\n    if (file.size > maxSize) {\n      setFileError(\n        `File size exceeds the maximum allowed (${formatFileSize(maxSize)})`\n      );\n      return false;\n    }\n    const allowedTypes = isImage ? ALLOWED_IMAGE_TYPES : ALLOWED_VIDEO_TYPES;\n    if (!allowedTypes.includes(file.type)) {\n      setFileError(\n        `Invalid file type. Allowed types: ${allowedTypes.join(\", \")}`\n      );\n      return false;\n    }\n    setFileError(null);\n    return true;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (isSubmitting) return; // Prevent double submission\n\n    setIsSubmitting(true); // Set submitting state to true\n\n    if (!validateContent(content)) {\n      setIsSubmitting(false); // Reset submitting state if validation fails\n      return;\n    }\n    if (\n      (image && !validateFile(image, true)) ||\n      (video && !validateFile(video, false))\n    ) {\n      setIsSubmitting(false); // Reset submitting state if validation fails\n      return;\n    }\n\n    if (content.trim() || image || video) {\n      setShowConfirmModal(true);\n    } else {\n      toast.error(\n        \"Please add some content, an image, or a video to your post.\"\n      );\n      setIsSubmitting(false); // Reset submitting state if no content\n    }\n  };\n\n  const confirmPost = async () => {\n    if (!user?.id) {\n      console.error(\"User ID is missing.\");\n      return;\n    }\n    setIsConfirmed(true);\n    setShowConfirmModal(false);\n    setIsProcessing(true);\n\n    if (video && video.size > TARGET_VIDEO_SIZE) {\n      toast.info(\n        `Compressing video to approximately ${formatFileSize(\n          TARGET_VIDEO_SIZE\n        )}, please wait...`\n      );\n      try {\n        const compressed = await compressVideo(video);\n        setCompressedVideo(compressed);\n        toast.success(`Video compressed to ${formatFileSize(compressed.size)}`);\n      } catch (error) {\n        toast.error(\"Error compressing video. Please try again.\");\n        setIsProcessing(false);\n        setIsConfirmed(false);\n        return;\n      }\n    }\n\n    setIsUploading(true);\n    const postData = {\n      content: content.trim() ? content : undefined,\n      image: image || undefined,\n      video: compressedVideo || video || undefined,\n    };\n\n    await createPostInBackend(postData, user.id);\n    setIsUploading(false);\n    setIsProcessing(false);\n    setIsConfirmed(false);\n    setIsSubmitting(false); // Reset submitting state after processing\n  };\n\n  const createPostInBackend = useCallback(\n    async (postData: any, userId: string) => {\n      try {\n        await dispatch(createPost({ postData, userId })).unwrap();\n        toast.success(\"Post created successfully!\");\n        resetForm();\n      } catch (error) {\n        if (error instanceof Error) {\n          toast.error(`Error creating post: ${error.message}`);\n        } else {\n          toast.error(\"An unknown error occurred while creating the post\");\n        }\n      }\n    },\n    [dispatch]\n  );\n\n  const resetForm = () => {\n    setContent(\"\");\n    setImage(null);\n    setVideo(null);\n    setCompressedVideo(null);\n    setPreviewImage(null);\n    setPreviewVideo(null);\n  };\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      if (validateFile(file, true)) {\n        setImage(file);\n        setPreviewImage(URL.createObjectURL(file));\n      } else {\n        e.target.value = \"\";\n      }\n    }\n  };\n\n  const compressVideo = useCallback(async (inputFile: File): Promise<File> => {\n    setIsCompressing(true);\n    const ffmpeg = new FFmpeg();\n    await ffmpeg.load();\n\n    try {\n      const inputFileName = \"input.mp4\";\n      const outputFileName = \"output.mp4\";\n      await ffmpeg.writeFile(inputFileName, await fetchFile(inputFile));\n\n      // Calculate target bitrate based on the desired file size\n      const duration = await getDuration(inputFile);\n      const targetBitrate = Math.floor((TARGET_VIDEO_SIZE * 8) / duration);\n\n      console.log(`Input file size: ${formatFileSize(inputFile.size)}`);\n      console.log(`Target bitrate: ${targetBitrate} bps`);\n\n      await ffmpeg.exec([\n        \"-i\",\n        inputFileName,\n        \"-b:v\",\n        `${targetBitrate}`,\n        \"-maxrate\",\n        `${targetBitrate * 2}`,\n        \"-bufsize\",\n        `${targetBitrate * 4}`,\n        \"-c:v\",\n        \"libx264\",\n        \"-preset\",\n        \"medium\",\n        \"-c:a\",\n        \"aac\",\n        \"-b:a\",\n        \"128k\",\n        outputFileName,\n      ]);\n\n      const data = await ffmpeg.readFile(outputFileName);\n      const compressedBlob = new Blob([data], { type: \"video/mp4\" });\n      const compressedFile = new File(\n        [compressedBlob],\n        \"compressed_video.mp4\",\n        {\n          type: \"video/mp4\",\n        }\n      );\n\n      console.log(\n        `Compressed file size: ${formatFileSize(compressedFile.size)}`\n      );\n\n      return compressedFile;\n    } catch (error) {\n      console.error(\"Error compressing video:\", error);\n      throw error;\n    } finally {\n      setIsCompressing(false);\n    }\n  }, []);\n\n  const getDuration = (file: File): Promise<number> => {\n    return new Promise((resolve) => {\n      const video = document.createElement(\"video\");\n      video.preload = \"metadata\";\n      video.onloadedmetadata = () => {\n        window.URL.revokeObjectURL(video.src);\n        resolve(video.duration);\n      };\n      video.src = URL.createObjectURL(file);\n    });\n  };\n\n  const handleVideoChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      if (validateFile(file, false)) {\n        setVideo(file);\n        setPreviewVideo(URL.createObjectURL(file));\n\n        if (file.size > TARGET_VIDEO_SIZE) {\n          toast.info(\n            `Compressing video to approximately ${formatFileSize(\n              TARGET_VIDEO_SIZE\n            )}, please wait...`\n          );\n          try {\n            const compressed = await compressVideo(file);\n            setCompressedVideo(compressed);\n            setPreviewVideo(URL.createObjectURL(compressed));\n            toast.success(\n              `Video compressed to ${formatFileSize(compressed.size)}`\n            );\n          } catch (error) {\n            toast.error(\"Error compressing video. Using original file.\");\n            setCompressedVideo(file);\n          }\n        } else {\n          setCompressedVideo(file);\n        }\n      } else {\n        e.target.value = \"\";\n      }\n    }\n  };\n\n  const removeImage = () => {\n    setImage(null);\n    setPreviewImage(null);\n  };\n\n  const removeVideo = () => {\n    setVideo(null);\n    setCompressedVideo(null);\n    setPreviewVideo(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white-100 to-white-200\">\n      <Header />\n      <ToastContainer position=\"top-right\" autoClose={5000} />\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"max-w-2xl mx-auto bg-gradient-to-br from-purple-50 to-purple-100 shadow-lg rounded-lg overflow-hidden\">\n          <div className=\"p-6\">\n            <h2 className=\"text-2xl sm:text-3xl font-bold text-purple-700 mb-6\">\n              Create a Post\n            </h2>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-full flex-shrink-0 overflow-hidden\">\n                  <img\n                    src={`${user?.profileImage}`}\n                    alt=\"User avatar\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <textarea\n                  value={content}\n                  onChange={(e) => {\n                    setContent(e.target.value);\n                    validateContent(e.target.value);\n                  }}\n                  placeholder=\"What's on your mind?\"\n                  rows={4}\n                  className={`w-full px-3 py-2 text-purple-700 border ${\n                    contentError ? \"border-red-500\" : \"border-purple-300\"\n                  } rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent resize-none text-sm sm:text-base`}\n                />\n                {contentError && (\n                  <p className=\"text-red-500 text-sm mt-1\">{contentError}</p>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <label className=\"flex items-center space-x-2 cursor-pointer text-purple-600 hover:bg-purple-100 p-2 rounded-full transition duration-300 text-sm sm:text-base\">\n                  <ImageIcon size={20} />\n                  <span className=\"text-sm sm:text-base\">Add Image</span>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                    className=\"hidden\"\n                  />\n                </label>\n                <label className=\"flex items-center space-x-2 cursor-pointer text-purple-600 hover:bg-purple-100 p-2 rounded-full transition duration-300 text-sm sm:text-base\">\n                  <VideoIcon size={20} />\n                  <span className=\"text-sm sm:text-base\">Add Video</span>\n                  <input\n                    type=\"file\"\n                    accept=\"video/*\"\n                    onChange={handleVideoChange}\n                    className=\"hidden\"\n                    disabled={isCompressing}\n                  />\n                </label>\n                {isCompressing && <CompressionLoader />}\n              </div>\n              {previewImage && (\n                <div className=\"relative\">\n                  <img\n                    src={previewImage}\n                    alt=\"Preview\"\n                    className=\"max-w-full h-auto rounded-lg\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={removeImage}\n                    className=\"absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition duration-300\"\n                  >\n                    <XIcon size={16} />\n                  </button>\n                </div>\n              )}\n              {previewVideo && (\n                <div className=\"relative\">\n                  <video\n                    src={previewVideo}\n                    controls\n                    className=\"max-w-full h-auto rounded-lg\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={removeVideo}\n                    className=\"absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition duration-300\"\n                  >\n                    <XIcon size={16} />\n                  </button>\n                </div>\n              )}\n              {fileError && (\n                <p className=\"text-red-500 text-sm mt-1\">{fileError}</p>\n              )}\n              <div className=\"flex justify-end items-center\">\n                <button\n                  type=\"submit\"\n                  className=\"px-4 sm:px-6 py-2 bg-purple-600 text-white rounded-full hover:bg-purple-700 transition duration-300 disabled:opacity-50 text-sm sm:text-base\"\n                  disabled={isUploading || isProcessing}\n                >\n                  {isUploading\n                    ? \"Posting...\"\n                    : isProcessing\n                    ? \"Processing...\"\n                    : \"Post\"}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      {isConfirmed && (isProcessing || isUploading) && <FullScreenLoader />}\n      {showConfirmModal && (\n        <ConfirmModal\n          onConfirm={confirmPost}\n          onCancel={() => {\n            setShowConfirmModal(false);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst ConfirmModal: React.FC<{\n  onConfirm: () => void;\n  onCancel: () => void;\n}> = ({ onConfirm, onCancel }) => {\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 max-w-sm w-full\">\n        <h3 className=\"text-xl font-semibold mb-4\">Confirm Post</h3>\n        <p className=\"mb-6\">Are you sure you want to publish this post?</p>\n        <div className=\"flex justify-end space-x-4\">\n          <button\n            onClick={onCancel}\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition duration-300\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 transition duration-300\"\n          >\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import React from 'react';\r\nimport { XIcon } from 'lucide-react';\r\n\r\ninterface ConfirmationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  title: string;\r\n  message: string;\r\n}\r\n\r\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({ isOpen, onClose, onConfirm, title, message }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-bold text-gray-800\">{title}</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <XIcon size={24} />\r\n          </button>\r\n        </div>\r\n        <p className=\"text-gray-600 mb-6\">{message}</p>\r\n        <div className=\"flex justify-end space-x-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors duration-200\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              onConfirm();\r\n              onClose();\r\n            }}\r\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors duration-200\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { editPost, deleteComment } from '../../../redux/slices/postSlice';\r\nimport { RootState, AppDispatch } from '../../../redux/store';\r\nimport { CreatePostData, Comment } from '../../../types/postTypes';\r\nimport Header from '../Header';\r\nimport { ImageIcon, VideoIcon, XIcon, TrashIcon } from 'lucide-react';\r\nimport ConfirmationModal from '../../common/ConfirmationModal';\r\nimport { toast } from 'react-toastify';\r\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\r\nimport { fetchFile } from '@ffmpeg/util';\r\nimport { formatFileSize, MAX_IMAGE_SIZE, MAX_VIDEO_SIZE, TARGET_VIDEO_SIZE, MAX_CONTENT_LENGTH } from '../../../utils/fileUtils';\r\nimport CompressionLoader from '../../common/CompressionLoader';\r\nimport FullScreenLoader from '../../common/FullScreenLoader';\r\n\r\n// Update these constants to match CreatePost.tsx\r\nconst ALLOWED_IMAGE_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\r\nconst ALLOWED_VIDEO_TYPES = ['video/mp4', 'video/quicktime', 'video/x-msvideo'];\r\n\r\nfunction formatDate(dateString: string): string {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleString('en-US', { \r\n    year: 'numeric', \r\n    month: 'short', \r\n    day: 'numeric', \r\n    hour: '2-digit', \r\n    minute: '2-digit'\r\n  });\r\n}\r\n\r\nconst EditPost: React.FC = () => {\r\n  const { postId } = useParams<{ postId: string }>();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const navigate = useNavigate();\r\n  const userId = useSelector((state: RootState) => state.auth.user?.id || \"\");\r\n  const post = useSelector((state: RootState) => \r\n    state.posts.list.find(p => p._id === postId) || state.posts.userPosts.find(p => p._id === postId)\r\n  );\r\n\r\n  const [content, setContent] = useState('');\r\n  const [image, setImage] = useState<File | null>(null);\r\n  const [video, setVideo] = useState<File | null>(null);\r\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n  const [previewVideo, setPreviewVideo] = useState<string | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [commentToDelete, setCommentToDelete] = useState<string | null>(null);\r\n  const [contentError, setContentError] = useState<string | null>(null);\r\n  const [fileError, setFileError] = useState<string | null>(null);\r\n  const [isCompressing, setIsCompressing] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [pendingUpdate, setPendingUpdate] = useState<{ postData: Partial<CreatePostData>; postId: string; userId: string } | null>(null);\r\n  const [compressedVideo, setCompressedVideo] = useState<File | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setContent(post.content || '');\r\n      setPreviewImage(post.imageUrl || null);\r\n      setPreviewVideo(post.videoUrl || null);\r\n    }\r\n  }, [post]);\r\n\r\n  const validateContent = (text: string) => {\r\n    if (text.length > MAX_CONTENT_LENGTH) {\r\n      setContentError(`Content must be ${MAX_CONTENT_LENGTH} characters or less`);\r\n      return false;\r\n    }\r\n    setContentError(null);\r\n    return true;\r\n  };\r\n\r\n  const validateFile = (file: File, isImage: boolean) => {\r\n    const maxSize = isImage ? MAX_IMAGE_SIZE : MAX_VIDEO_SIZE;\r\n    if (file.size > maxSize) {\r\n      setFileError(`File size exceeds the maximum allowed (${formatFileSize(maxSize)})`);\r\n      return false;\r\n    }\r\n    const allowedTypes = isImage ? ALLOWED_IMAGE_TYPES : ALLOWED_VIDEO_TYPES;\r\n    if (!allowedTypes.includes(file.type)) {\r\n      setFileError(`Invalid file type. Allowed types: ${allowedTypes.join(', ')}`);\r\n      return false;\r\n    }\r\n    setFileError(null);\r\n    return true;\r\n  };\r\n\r\n  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newContent = e.target.value;\r\n    setContent(newContent);\r\n    validateContent(newContent);\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      if (validateFile(file, true)) {\r\n        setImage(file);\r\n        setPreviewImage(URL.createObjectURL(file));\r\n      } else {\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const updatePostInBackend = useCallback(async (postData: Partial<CreatePostData>, postId: string, userId: string) => {\r\n    setIsUploading(true);\r\n    try {\r\n      await dispatch(editPost({ postId, userId, postData }));\r\n      toast.success('Post updated successfully!');\r\n      navigate(-1);\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        toast.error(`Error updating post: ${error.message}`);\r\n      } else {\r\n        toast.error('An unknown error occurred while updating the post');\r\n      }\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  }, [dispatch, navigate]);\r\n\r\n  const compressVideo = useCallback(async (inputFile: File): Promise<File> => {\r\n    setIsCompressing(true);\r\n    const ffmpeg = new FFmpeg();\r\n    await ffmpeg.load();\r\n\r\n    try {\r\n      const inputFileName = 'input.mp4';\r\n      const outputFileName = 'output.mp4';\r\n      ffmpeg.writeFile(inputFileName, await fetchFile(inputFile));\r\n\r\n      // Calculate target bitrate based on the desired file size\r\n      const duration = await getDuration(inputFile);\r\n      const targetBitrate = Math.floor((TARGET_VIDEO_SIZE * 8 * 1024 * 1024) / duration);\r\n\r\n      await ffmpeg.exec([\r\n        '-i', inputFileName,\r\n        '-b:v', `${targetBitrate}`,\r\n        '-maxrate', `${targetBitrate * 2}`,\r\n        '-bufsize', `${targetBitrate * 4}`,\r\n        '-c:v', 'libx264',\r\n        '-preset', 'slow',\r\n        '-c:a', 'aac',\r\n        '-b:a', '128k',\r\n        outputFileName\r\n      ]);\r\n\r\n      const compressedData = await ffmpeg.readFile(outputFileName);\r\n      const compressedBlob = new Blob([compressedData], { type: 'video/mp4' });\r\n      const compressedFile = new File([compressedBlob], 'compressed_video.mp4', { type: 'video/mp4' });\r\n\r\n      return compressedFile;\r\n    } finally {\r\n      setIsCompressing(false);\r\n      if (pendingUpdate) {\r\n        const updatedPostData = { ...pendingUpdate.postData, video: inputFile };\r\n        await updatePostInBackend(updatedPostData, pendingUpdate.postId, pendingUpdate.userId);\r\n        setPendingUpdate(null);\r\n      }\r\n    }\r\n  }, [pendingUpdate, updatePostInBackend]);\r\n\r\n  const getDuration = (file: File): Promise<number> => {\r\n    return new Promise((resolve) => {\r\n      const video = document.createElement('video');\r\n      video.preload = 'metadata';\r\n      video.onloadedmetadata = () => {\r\n        window.URL.revokeObjectURL(video.src);\r\n        resolve(video.duration);\r\n      };\r\n      video.src = URL.createObjectURL(file);\r\n    });\r\n  };\r\n\r\n  const handleVideoChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      if (validateFile(file, false)) {\r\n        setVideo(file);\r\n        setPreviewVideo(URL.createObjectURL(file));\r\n        \r\n        if (file.size > TARGET_VIDEO_SIZE) {\r\n          toast.info(`Compressing video to approximately ${formatFileSize(TARGET_VIDEO_SIZE)}, please wait...`);\r\n          const compressed = await compressVideo(file);\r\n          setCompressedVideo(compressed);\r\n          setPreviewVideo(URL.createObjectURL(compressed));\r\n          toast.success(`Video compressed to ${formatFileSize(compressed.size)}`);\r\n        } else {\r\n          setCompressedVideo(file);\r\n        }\r\n      } else {\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateContent(content)) return;\r\n    if ((image && !validateFile(image, true)) || (video && !validateFile(video, false))) return;\r\n    \r\n    if (postId) {\r\n      setIsUploading(true);\r\n      if (video && video.size > TARGET_VIDEO_SIZE) {\r\n        toast.info(`Compressing video to approximately ${formatFileSize(TARGET_VIDEO_SIZE)}, please wait...`);\r\n        try {\r\n          const compressed = await compressVideo(video);\r\n          setCompressedVideo(compressed);\r\n          toast.success(`Video compressed to ${formatFileSize(compressed.size)}`);\r\n        } catch (error) {\r\n          toast.error(\"Error compressing video. Please try again.\");\r\n          return;\r\n        }\r\n      }\r\n\r\n      const postData: Partial<CreatePostData> = { content };\r\n      if (image) postData.image = image;\r\n      if (compressedVideo) {\r\n        postData.video = compressedVideo;\r\n      } else if (video) {\r\n        postData.video = video;\r\n      }\r\n      \r\n      if (!content.trim() && !image && !postData.video) {\r\n        toast.error('Please add some content, an image, or a video to your post.');\r\n        return;\r\n      }\r\n      \r\n      await updatePostInBackend(postData, postId, userId);\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (commentId: string) => {\r\n    setCommentToDelete(commentId);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const confirmDeleteComment = async () => {\r\n    if (postId && commentToDelete) {\r\n      await dispatch(deleteComment({ postId, commentId: commentToDelete }));\r\n      setCommentToDelete(null);\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setImage(null);\r\n    setPreviewImage(null);\r\n  };\r\n\r\n  const removeVideo = () => {\r\n    setVideo(null);\r\n    setCompressedVideo(null);\r\n    setPreviewVideo(null);\r\n  };\r\n\r\n  if (!post) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-100 to-purple-200\">\r\n      <Header />\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-2xl mx-auto bg-white shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-3xl font-bold text-purple-700 mb-6\">Edit Post</h2>\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div>\r\n                <label htmlFor=\"content\" className=\"block text-purple-700 font-bold mb-2\">\r\n                  Content\r\n                </label>\r\n                <textarea\r\n                  id=\"content\"\r\n                  value={content}\r\n                  onChange={handleContentChange}\r\n                  className={`w-full px-3 py-2 text-purple-700 border ${\r\n                    contentError ? 'border-red-500' : 'border-purple-300'\r\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent`}\r\n                  rows={4}\r\n                  placeholder=\"What's on your mind?\"\r\n                />\r\n                {contentError && <p className=\"text-red-500 text-sm mt-1\">{contentError}</p>}\r\n              </div>\r\n              <div className=\"flex items-center space-x-4\">\r\n                <label className=\"flex items-center space-x-2 cursor-pointer text-purple-600 hover:bg-purple-100 p-2 rounded-full transition duration-300\">\r\n                  <ImageIcon size={20} />\r\n                  <span className=\"text-sm\">Add Image</span>\r\n                  <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n                </label>\r\n                <label className=\"flex items-center space-x-2 cursor-pointer text-purple-600 hover:bg-purple-100 p-2 rounded-full transition duration-300\">\r\n                  <VideoIcon size={20} />\r\n                  <span className=\"text-sm\">Add Video</span>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"video/*\"\r\n                    onChange={handleVideoChange}\r\n                    className=\"hidden\"\r\n                    disabled={isCompressing}\r\n                  />\r\n                </label>\r\n                {isCompressing && <CompressionLoader />}\r\n              </div>\r\n              {previewImage && (\r\n                <div className=\"relative\">\r\n                  <img src={previewImage} alt=\"Preview\" className=\"max-w-full h-auto rounded-lg\" />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={removeImage}\r\n                    className=\"absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition duration-300\"\r\n                  >\r\n                    <XIcon size={16} />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {previewVideo && (\r\n                <div className=\"relative\">\r\n                  <video src={previewVideo} controls className=\"max-w-full h-auto rounded-lg\" />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={removeVideo}\r\n                    className=\"absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition duration-300\"\r\n                  >\r\n                    <XIcon size={16} />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              <div className=\"flex justify-end items-center\">\r\n                {isCompressing && <span className=\"text-purple-600 mr-4\">Compressing video...</span>}\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-6 py-2 bg-purple-600 text-white rounded-full hover:bg-purple-700 transition-colors duration-300 disabled:opacity-50\"\r\n                  disabled={isUploading}\r\n                >\r\n                  {isUploading ? 'Updating...' : 'Update Post'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"p-6 border-t border-purple-200\">\r\n            <h3 className=\"text-xl font-bold text-purple-700 mb-4\">Post Details</h3>\r\n            <p className=\"text-purple-600 mb-2\">Likes: {post.likes.length}</p>\r\n            <p className=\"text-purple-600 mb-4\">Comments: {post.comments.length}</p>\r\n            <h4 className=\"text-lg font-semibold text-purple-700 mb-2\">Comments</h4>\r\n            <div className=\"space-y-4 max-h-60 overflow-y-auto\">\r\n              {post.comments.map((comment: Comment) => (\r\n                <div key={comment.id} className=\"bg-purple-50 p-3 rounded-lg flex justify-between items-start\">\r\n                  <div>\r\n                    <p className=\"text-purple-800 font-medium\">{comment.userId.name}</p>\r\n                    <p className=\"text-purple-600\">{comment.content}</p>\r\n                    <p className=\"text-purple-400 text-sm\">{formatDate(comment.createdAt)}</p>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => handleDeleteComment(comment.id)}\r\n                    className=\"text-red-500 hover:text-red-700 transition-colors duration-200\"\r\n                  >\r\n                    <TrashIcon size={16} />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ConfirmationModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onConfirm={confirmDeleteComment}\r\n        title=\"Delete Comment\"\r\n        message=\"Are you sure you want to delete this comment? This action cannot be undone.\"\r\n      />\r\n      {fileError && <p className=\"text-red-500 text-sm mt-1\">{fileError}</p>}\r\n      {(isCompressing || isUploading) && <FullScreenLoader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../../redux/store\";\r\nimport {\r\n  fetchJobPosts,\r\n  blockJobPost,\r\n  unblockJobPost,\r\n} from \"../../redux/slices/adminJobPostSlice\";\r\nimport { BasicJobPost } from \"../../types/jobPostTypes\";\r\nimport {\r\n  FaExclamationTriangle,\r\n  FaUserFriends,\r\n  FaEye,\r\n  FaBan,\r\n  FaUnlock,\r\n  FaSearch,\r\n  FaChevronLeft,\r\n  FaChevronRight,\r\n  FaCalendarAlt,\r\n  FaMapMarkerAlt,\r\n  FaBuilding,\r\n} from \"react-icons/fa\";\r\nimport Header from \"../admin/AdminHeader\";\r\nimport Sidebar from \"../admin/AdminSidebar\";\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\nconst AdminJobPost: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const { jobPosts, loading, error } = useSelector(\r\n    (state: RootState) => state.adminJobPost\r\n  );\r\n  const [selectedPost, setSelectedPost] = useState<BasicJobPost | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [confirmAction, setConfirmAction] = useState<{\r\n    type: \"block\" | \"unblock\";\r\n    postId: string;\r\n  } | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [localJobPosts, setLocalJobPosts] = useState<BasicJobPost[]>([]);\r\n  const [sortCriteria, setSortCriteria] = useState<\"reports\" | \"date\">(\r\n    \"reports\"\r\n  );\r\n  const [showApplicants, setShowApplicants] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchJobPosts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const sortedPosts = [...jobPosts].sort((a, b) => {\r\n      if (sortCriteria === \"reports\") {\r\n        const aReportCount = a.reports?.length || 0;\r\n        const bReportCount = b.reports?.length || 0;\r\n        if (bReportCount !== aReportCount) {\r\n          return bReportCount - aReportCount;\r\n        }\r\n      }\r\n      return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\r\n    });\r\n    setLocalJobPosts(sortedPosts);\r\n  }, [jobPosts, sortCriteria]);\r\n\r\n  const handleViewDetails = (post: BasicJobPost) => {\r\n    setSelectedPost(post);\r\n  };\r\n\r\n  const handleBlockPost = (postId: string) => {\r\n    setConfirmAction({ type: \"block\", postId });\r\n  };\r\n\r\n  const handleUnblockPost = (postId: string) => {\r\n    setConfirmAction({ type: \"unblock\", postId });\r\n  };\r\n\r\n  const confirmBlockUnblock = () => {\r\n    if (confirmAction) {\r\n      if (confirmAction.type === \"block\") {\r\n        dispatch(blockJobPost(confirmAction.postId));\r\n      } else {\r\n        dispatch(unblockJobPost(confirmAction.postId));\r\n      }\r\n      setLocalJobPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post._id === confirmAction.postId\r\n            ? { ...post, isBlock: confirmAction.type === \"block\" }\r\n            : post\r\n        )\r\n      );\r\n      setConfirmAction(null);\r\n    }\r\n  };\r\n\r\n  const filteredPosts = localJobPosts.filter(\r\n    (post) =>\r\n      post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (post.company?.name\r\n        ? post.company.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        : false)\r\n  );\r\n\r\n  const totalPages = Math.ceil(filteredPosts.length / ITEMS_PER_PAGE);\r\n  const paginatedPosts = filteredPosts.slice(\r\n    (currentPage - 1) * ITEMS_PER_PAGE,\r\n    currentPage * ITEMS_PER_PAGE\r\n  );\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        Loading...\r\n      </div>\r\n    );\r\n  if (error)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen text-red-500\">\r\n        Error: {error}\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row min-h-screen bg-gray-100\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 overflow-hidden\">\r\n        <Header />\r\n        <div className=\"p-4 md:p-8 overflow-y-auto h-[calc(100vh-64px)]\">\r\n          <h1 className=\"text-2xl font-bold mb-4 text-purple-800\">Job Posts</h1>\r\n          <div className=\"mb-4 flex flex-col sm:flex-row justify-between items-center\">\r\n            <div className=\"relative w-full sm:w-64 mb-2 sm:mb-0\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search job posts...\"\r\n                className=\"w-full pl-10 pr-4 py-2 rounded-lg border border-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-600\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n              <FaSearch className=\"absolute left-3 top-3 text-purple-400\" />\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"mr-2 text-sm text-purple-600\">Sort by:</span>\r\n              <select\r\n                value={sortCriteria}\r\n                onChange={(e) =>\r\n                  setSortCriteria(e.target.value as \"reports\" | \"date\")\r\n                }\r\n                className=\"border border-purple-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-purple-600\"\r\n              >\r\n                <option value=\"reports\">Reports</option>\r\n                <option value=\"date\">Date</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"overflow-x-auto bg-white rounded-lg shadow\">\r\n            <table className=\"min-w-full divide-y divide-purple-200\">\r\n              <thead className=\"bg-purple-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">\r\n                    Job Details\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-purple-800 uppercase tracking-wider hidden md:table-cell\">\r\n                    Company\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-purple-800 uppercase tracking-wider hidden lg:table-cell\">\r\n                    Location\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-purple-800 uppercase tracking-wider hidden xl:table-cell\">\r\n                    Posted Date\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">\r\n                    Reports\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-purple-200\">\r\n                {paginatedPosts.map((post) => (\r\n                  <tr\r\n                    key={post._id}\r\n                    className=\"hover:bg-purple-50 transition-colors duration-200\"\r\n                  >\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm font-medium text-purple-900\">\r\n                        {post.title}\r\n                      </div>\r\n                      <div className=\"text-sm text-purple-500\">\r\n                        {post.company?.name || \"N/A\"}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap hidden md:table-cell\">\r\n                      <div className=\"flex items-center text-sm text-purple-600\">\r\n                        <FaBuilding className=\"mr-2\" />\r\n                        {post.company?.name || \"N/A\"}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap hidden lg:table-cell\">\r\n                      <div className=\"flex items-center text-sm text-purple-600\">\r\n                        <FaMapMarkerAlt className=\"mr-2\" />\r\n                        {post.location || \"N/A\"}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap hidden xl:table-cell\">\r\n                      <div className=\"flex items-center text-sm text-purple-600\">\r\n                        <FaCalendarAlt className=\"mr-2\" />\r\n                        {new Date(post.createdAt).toLocaleDateString()}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {post.reports && post.reports.length > 0 ? (\r\n                        <div className=\"flex items-center text-red-500\">\r\n                          <FaExclamationTriangle className=\"mr-2\" />\r\n                          <span>{post.reports.length} report(s)</span>\r\n                        </div>\r\n                      ) : (\r\n                        <span className=\"text-green-500\">No reports</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2\">\r\n                        <button\r\n                          onClick={() => handleViewDetails(post)}\r\n                          className=\"bg-purple-100 text-purple-800 px-3 py-1 rounded-full hover:bg-purple-200 transition-colors duration-200\"\r\n                          title=\"View Details\"\r\n                        >\r\n                          <FaEye className=\"inline mr-1\" /> View\r\n                        </button>\r\n                        {!post.isBlock ? (\r\n                          <button\r\n                            onClick={() => handleBlockPost(post._id)}\r\n                            className=\"bg-red-100 text-red-800 px-3 py-1 rounded-full hover:bg-red-200 transition-colors duration-200\"\r\n                            title=\"Block Post\"\r\n                          >\r\n                            <FaBan className=\"inline mr-1\" /> Block\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            onClick={() => handleUnblockPost(post._id)}\r\n                            className=\"bg-green-100 text-green-800 px-3 py-1 rounded-full hover:bg-green-200 transition-colors duration-200\"\r\n                            title=\"Unblock Post\"\r\n                          >\r\n                            <FaUnlock className=\"inline mr-1\" /> Unblock\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/* Pagination */}\r\n          <div className=\"mt-4 flex justify-between items-center\">\r\n            <span className=\"text-purple-800\">\r\n              Page {currentPage} of {totalPages}\r\n            </span>\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n                className=\"bg-purple-500 text-white px-3 py-2 rounded-lg hover:bg-purple-600 disabled:bg-purple-300 disabled:cursor-not-allowed\"\r\n              >\r\n                <FaChevronLeft className=\"inline mr-1\" /> Previous\r\n              </button>\r\n              <button\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n                className=\"bg-purple-500 text-white px-3 py-2 rounded-lg hover:bg-purple-600 disabled:bg-purple-300 disabled:cursor-not-allowed\"\r\n              >\r\n                Next <FaChevronRight className=\"inline ml-1\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {selectedPost && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center p-4 z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <h2 className=\"text-2xl font-bold mb-4 text-purple-800\">\r\n              {selectedPost.title}\r\n            </h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <p className=\"mb-2\">\r\n                  <strong>Company:</strong>{\" \"}\r\n                  {selectedPost.company?.name || \"N/A\"}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Location:</strong> {selectedPost.location || \"N/A\"}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Way of Work:</strong>{\" \"}\r\n                  {selectedPost.wayOfWork || \"N/A\"}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Salary Range:</strong> ₹\r\n                  {selectedPost.salaryRange?.min || \"N/A\"} - ₹\r\n                  {selectedPost.salaryRange?.max || \"N/A\"}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Status:</strong> {selectedPost.status || \"N/A\"}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Block Status:</strong>{\" \"}\r\n                  {selectedPost.isBlock ? \"Blocked\" : \"Active\"}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"mb-2\">\r\n                  <strong>Posted Date:</strong>{\" \"}\r\n                  {new Date(selectedPost.createdAt).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Last Updated:</strong>{\" \"}\r\n                  {new Date(selectedPost.updatedAt).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Job Priority:</strong>{\" \"}\r\n                  {selectedPost.jobPriority || \"N/A\"}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Recruiter:</strong>{\" \"}\r\n                  {selectedPost.recruiterId?.name || \"N/A\"}-{\" \"}\r\n                  {selectedPost.recruiterId?.email}\r\n                </p>\r\n                <p className=\"mb-2\">\r\n                  <strong>Applicants:</strong>{\" \"}\r\n                  {selectedPost.applicants?.length || 0}\r\n                </p>\r\n                <button\r\n                  onClick={() => setShowApplicants(true)}\r\n                  className=\"bg-purple-100 text-purple-800 px-3 py-1 rounded-full hover:bg-purple-200 transition-colors duration-200\"\r\n                >\r\n                  <FaUserFriends className=\"inline mr-1\" /> View Applicants\r\n                </button>\r\n                <p className=\"mb-2\">\r\n                  <strong>Reports:</strong> {selectedPost.reports?.length || 0}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <h3 className=\"text-lg font-semibold mb-2\">Description:</h3>\r\n              <p className=\"mb-4 text-gray-700\">\r\n                {selectedPost.description || \"N/A\"}\r\n              </p>\r\n              <h3 className=\"text-lg font-semibold mb-2\">Skills Required:</h3>\r\n              <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                {selectedPost.skillsRequired?.map((skill, index) => (\r\n                  <span\r\n                    key={index}\r\n                    className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded-full text-sm\"\r\n                  >\r\n                    {skill}\r\n                  </span>\r\n                )) || \"N/A\"}\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold mb-2\">Qualifications:</h3>\r\n              <ul className=\"list-disc list-inside mb-4 text-gray-700\">\r\n                {selectedPost.qualifications?.map((qualification, index) => (\r\n                  <li key={index}>{qualification}</li>\r\n                )) || <li>N/A</li>}\r\n              </ul>\r\n              {selectedPost.reports && selectedPost.reports.length > 0 && (\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold mb-2 text-red-600\">\r\n                    Reports:\r\n                  </h3>\r\n                  <ul className=\"list-disc list-inside mb-4 text-gray-700\">\r\n                    {selectedPost.reports.map((report, index) => (\r\n                      <li key={index}>\r\n                        <strong>{report.user?.name}</strong>: {report.reason}\r\n                        <span className=\"text-sm text-gray-500 ml-2\">\r\n                          ({new Date(report.createdAt).toLocaleDateString()})\r\n                        </span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {showApplicants && selectedPost && (\r\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center p-4 z-50\">\r\n                <div className=\"bg-white p-6 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n                  <h2 className=\"text-2xl font-bold mb-4 text-purple-800\">\r\n                    Applicants for {selectedPost.title}\r\n                  </h2>\r\n                  {selectedPost.applicants &&\r\n                  selectedPost.applicants.length > 0 ? (\r\n                    <table className=\"min-w-full divide-y divide-gray-200\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Name\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Email\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        {selectedPost.applicants.map((applicant, index) => (\r\n                          <tr key={index}>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                              {applicant.name}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                              {applicant.email}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  ) : (\r\n                    <p className=\"text-gray-700\">No applicants yet.</p>\r\n                  )}\r\n                  <div className=\"mt-6 flex justify-end\">\r\n                    <button\r\n                      onClick={() => setShowApplicants(false)}\r\n                      className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400 transition-colors duration-200\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"mt-6 flex justify-end space-x-2\">\r\n              {!selectedPost.isBlock ? (\r\n                <button\r\n                  onClick={() => {\r\n                    setConfirmAction({\r\n                      type: \"block\",\r\n                      postId: selectedPost._id,\r\n                    });\r\n                    setSelectedPost(null);\r\n                  }}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors duration-200\"\r\n                >\r\n                  Block Post\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={() => {\r\n                    setConfirmAction({\r\n                      type: \"unblock\",\r\n                      postId: selectedPost._id,\r\n                    });\r\n                    setSelectedPost(null);\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200\"\r\n                >\r\n                  Unblock Post\r\n                </button>\r\n              )}\r\n              <button\r\n                onClick={() => setSelectedPost(null)}\r\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400 transition-colors duration-200\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {confirmAction && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center p-4 z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg max-w-md w-full\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-purple-800\">\r\n              Confirm Action\r\n            </h2>\r\n            <p className=\"mb-4\">\r\n              Are you sure you want to{\" \"}\r\n              {confirmAction.type === \"block\" ? \"block\" : \"unblock\"} this job\r\n              post?\r\n              {confirmAction.type === \"block\"\r\n                ? \" This will prevent users from viewing or applying to this job.\"\r\n                : \" This will make the job post visible and allow users to apply again.\"}\r\n            </p>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={() => setConfirmAction(null)}\r\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400 transition-colors duration-200\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={confirmBlockUnblock}\r\n                className={`px-4 py-2 text-white rounded transition-colors duration-200 ${\r\n                  confirmAction.type === \"block\"\r\n                    ? \"bg-red-600 hover:bg-red-700\"\r\n                    : \"bg-green-600 hover:bg-green-700\"\r\n                }`}\r\n              >\r\n                Confirm {confirmAction.type === \"block\" ? \"Block\" : \"Unblock\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminJobPost;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { RootState, AppDispatch } from '../../redux/store';\r\nimport { fetchConnectionProfile } from '../../redux/slices/connectionSlice';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faEnvelope, faPhone, faBirthdayCake, faVenusMars, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { UserCircle } from 'lucide-react';\r\nimport Header from './Header'\r\n\r\n\r\nconst ConnectionProfile: React.FC = () => {\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { connectionProfile, loading, error } = useSelector((state: RootState) => state.connections);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(fetchConnectionProfile(userId));\r\n    }\r\n  }, [dispatch, userId]);\r\n\r\n  const handleClose = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <div className=\"flex justify-center m-3 items-center h-screen bg-gray-100\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500\"></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <div className=\"flex justify-center items-center h-screen bg-gray-100\">\r\n          <div className=\"text-red-500 text-xl\">{error}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (!connectionProfile) {\r\n    return (\r\n      <>\r\n        <div className=\"flex justify-center items-center h-screen bg-gray-100\">\r\n          <div className=\"text-gray-500 text-xl\">No profile found</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <button onClick={handleClose} className=\"mb-4 flex items-center text-purple-700 hover:text-purple-900\">\r\n          <FontAwesomeIcon icon={faArrowLeft} className=\"mr-2\" />\r\n          Back\r\n        </button>\r\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"bg-purple-700 p-4 sm:p-6 md:p-8\">\r\n            <div className=\"flex flex-col sm:flex-row items-center\">\r\n\r\n            {connectionProfile?.profileImage ? (\r\n          <img\r\n          src={`${connectionProfile.profileImage}`}\r\n            alt=\"Profile\"\r\n            className=\"w-32 h-32 rounded-full object-cover mb-4 sm:mb-0 sm:mr-6 border-4 border-white\"\r\n          />\r\n        ) : (\r\n          <UserCircle className=\"w-20 h-20 text-gray-400\" />\r\n        )}\r\n              <div className=\"text-center sm:text-left text-white\">\r\n                <h1 className=\"text-3xl font-bold\">{connectionProfile.name}</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-4 sm:p-6 md:p-8\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8\">\r\n              <div className=\"flex items-center\">\r\n                <FontAwesomeIcon icon={faEnvelope} className=\"text-purple-500 mr-2\" />\r\n                <span>{connectionProfile.email}</span>\r\n              </div>\r\n              {connectionProfile.phone && (\r\n                <div className=\"flex items-center\">\r\n                  <FontAwesomeIcon icon={faPhone} className=\"text-purple-500 mr-2\" />\r\n                  <span>{connectionProfile.phone}</span>\r\n                </div>\r\n              )}\r\n              {connectionProfile.dateOfBirth && (\r\n                <div className=\"flex items-center\">\r\n                  <FontAwesomeIcon icon={faBirthdayCake} className=\"text-purple-500 mr-2\" />\r\n                  <span>{connectionProfile.dateOfBirth}</span>\r\n                </div>\r\n              )}\r\n              {connectionProfile.gender && (\r\n                <div className=\"flex items-center\">\r\n                  <FontAwesomeIcon icon={faVenusMars} className=\"text-purple-500 mr-2\" />\r\n                  <span>{connectionProfile.gender}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {connectionProfile.bio && (\r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-2xl font-semibold mb-4 text-purple-700\">Bio</h2>\r\n                <p className=\"text-gray-700\">{connectionProfile.bio}</p>\r\n              </div>\r\n            )}\r\n\r\n            {connectionProfile.about && (\r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-2xl font-semibold mb-4 text-purple-700\">About</h2>\r\n                <p className=\"text-gray-700\">{connectionProfile.about}</p>\r\n              </div>\r\n            )}\r\n\r\n            {connectionProfile.skills && connectionProfile.skills.length > 0 && (\r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-2xl font-semibold mb-4 text-purple-700\">Skills</h2>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {connectionProfile.skills.map((skill, index) => (\r\n                    <span key={index} className=\"bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm\">\r\n                      {skill}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {connectionProfile.experiences && connectionProfile.experiences.length > 0 && (\r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-2xl font-semibold mb-4 text-purple-700\">Experiences</h2>\r\n                {connectionProfile.experiences.map((exp, index) => (\r\n                  <div key={index} className=\"mb-4 bg-gray-50 p-4 rounded-lg\">\r\n                    <h3 className=\"text-lg font-semibold text-purple-700\">{exp.title}</h3>\r\n                    <p className=\"text-gray-600\">{exp.company}</p>\r\n                    <p className=\"text-sm text-gray-500\">{exp.startDate} - {exp.endDate || 'Present'}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {connectionProfile.resume && (\r\n              <div>\r\n                <h2 className=\"text-2xl font-semibold mb-4 text-purple-700\">Resume</h2>\r\n                <a href={connectionProfile.resume} target=\"_blank\" rel=\"noopener noreferrer\" className=\"inline-block bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 transition duration-300\">\r\n                  View Resume\r\n                </a>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionProfile;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport {\r\n  fetchConnections,\r\n  searchConnections,\r\n  acceptConnectionRequest,\r\n  rejectConnectionRequest,\r\n  removeConnection,\r\n} from \"../../redux/slices/connectionSlice\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSearch,\r\n  faUserCheck,\r\n  faUserTimes,\r\n  faEnvelope,\r\n  faPhone,\r\n  faBriefcase,\r\n  faCalendarAlt,\r\n  faVenusMars,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport UserHeader from \"./Header\";\r\nimport { User } from \"../../types/auth\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { selectMemoizedConnections } from \"../../redux/store\"; // Ensure this import is present\r\n\r\ninterface ConnectionRequest {\r\n  _id: string;\r\n  requester: {\r\n    _id: string;\r\n    name: string;\r\n    profileImage: string;\r\n    bio?: string;\r\n  };\r\n  recipient: string;\r\n  status: string;\r\n  createdAt: string;\r\n}\r\n\r\nconst Connections: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { user, connections, connectionRequests, loading, error } = useSelector(\r\n    (state: RootState) => ({\r\n      user: state.auth.user,\r\n      connections: selectMemoizedConnections(state), // Use the memoized selector\r\n      connectionRequests: state.connections.connectionRequests,\r\n      loading: state.connections.loading, // Add loading\r\n      error: state.connections.error, // Add error\r\n    })\r\n  );\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [localLoading, setLocalLoading] = useState<{ [key: string]: boolean }>(\r\n    {}\r\n  );\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (user) {\r\n      dispatch(fetchConnections(user.id))\r\n        .unwrap()\r\n        .catch((err) => {\r\n          toast.error(\"Failed to fetch connections. Please try again later.\");\r\n        });\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleSearch = useCallback(() => {\r\n    if (user) {\r\n      dispatch(searchConnections({ userId: user.id, query: searchQuery }))\r\n        .unwrap()\r\n        .catch((err) => {\r\n          toast.error(\"Search failed. Please try again.\");\r\n        });\r\n    }\r\n  }, [dispatch, user, searchQuery]);\r\n\r\n  const handleAccept = async (requestId: string) => {\r\n    if (user && requestId) {\r\n      setLocalLoading((prev) => ({ ...prev, [requestId]: true }));\r\n      try {\r\n        await dispatch(\r\n          acceptConnectionRequest({ requestId, userId: user.id })\r\n        ).unwrap();\r\n        toast.success(\"Connection request accepted successfully.\");\r\n        fetchData();\r\n      } catch (error) {\r\n        toast.error(\"Failed to accept connection request. Please try again.\");\r\n      } finally {\r\n        setLocalLoading((prev) => ({ ...prev, [requestId]: false }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReject = async (requestId: string) => {\r\n    if (user) {\r\n      setLocalLoading((prev) => ({ ...prev, [requestId]: true }));\r\n      try {\r\n        await dispatch(\r\n          rejectConnectionRequest({ requestId, userId: user.id })\r\n        ).unwrap();\r\n        toast.success(\"Connection request rejected successfully.\");\r\n        fetchData();\r\n      } catch (error) {\r\n        toast.error(\"Failed to reject connection request. Please try again.\");\r\n      } finally {\r\n        setLocalLoading((prev) => ({ ...prev, [requestId]: false }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemove = async (connectionId: string) => {\r\n    if (user) {\r\n      try {\r\n        await dispatch(\r\n          removeConnection({ userId: user.id, connectionId })\r\n        ).unwrap();\r\n        toast.success(\"Connection removed successfully.\");\r\n        fetchData(); // Refresh the connections list\r\n      } catch (error) {\r\n        toast.error(\"Failed to remove connection. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const truncateBio = (bio: string | undefined, wordLimit: number = 10) => {\r\n    if (!bio) return \"No bio available\";\r\n    const words = bio.split(\" \");\r\n    return words.length > wordLimit\r\n      ? words.slice(0, wordLimit).join(\" \") + \"...\"\r\n      : bio;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(`An error occurred: ${error}`);\r\n    }\r\n  }, [error]); // Only show toast when error changes\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n      <UserHeader />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n      />\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-xl sm:text-2xl font-bold mb-4 text-purple-800\">\r\n          My Network\r\n        </h1>\r\n\r\n        {/* Search bar */}\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex items-center max-w-md mx-auto w-full\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search connections...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"flex-grow px-1 py-1 text-xs border border-purple-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n              aria-label=\"Search connections\"\r\n            />\r\n            <button\r\n              onClick={handleSearch}\r\n              className=\"bg-purple-600 text-white px-1 py-1 text-xs rounded-r-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n            >\r\n              <FontAwesomeIcon icon={faSearch} className=\"h-3 w-3\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-purple-500 mx-auto\"></div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Connection Requests Section */}\r\n            <div className=\"bg-white mb-4\">\r\n              <h2 className=\"text-lg sm:text-xl font-semibold mb-2 text-purple-800\">\r\n                Connection Requests\r\n              </h2>\r\n              {connectionRequests.length === 0 ? (\r\n                <p className=\"text-xs text-gray-600\">\r\n                  No pending connection requests.\r\n                </p>\r\n              ) : (\r\n                <ul className=\"divide-y divide-gray-200\">\r\n                  {connectionRequests.map((request: ConnectionRequest) => (\r\n                    <li\r\n                      key={request._id}\r\n                      className=\"py-2 flex items-center justify-between\"\r\n                    >\r\n                      <div className=\"flex items-center\">\r\n                        <img\r\n                          src={\r\n                            request.requester.profileImage ||\r\n                            \"/default-avatar.png\"\r\n                          }\r\n                          alt={request.requester.name}\r\n                          className=\"w-8 h-8 rounded-full object-cover\"\r\n                        />\r\n                        <div className=\"ml-1\">\r\n                          <h3 className=\"text-xs font-semibold text-purple-800\">\r\n                            {request.requester.name}\r\n                          </h3>\r\n                          <p className=\"text-xs text-gray-600\">\r\n                            {truncateBio(request.requester.bio)}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex space-x-1\">\r\n                        <button\r\n                          className=\"bg-purple-600 text-white px-1 py-1 rounded hover:bg-purple-700 transition duration-300 flex items-center text-xs\"\r\n                          onClick={() => handleAccept(request._id)}\r\n                          disabled={localLoading[request._id]}\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            icon={faUserCheck}\r\n                            className=\"mr-1 h-3 w-3\"\r\n                          />\r\n                          {localLoading[request._id]\r\n                            ? \"Processing...\"\r\n                            : \"Accept\"}\r\n                        </button>\r\n                        <button\r\n                          className=\"bg-gray-300 text-gray-700 px-1 py-1 rounded hover:bg-gray-400 transition duration-300 flex items-center text-xs\"\r\n                          onClick={() => handleReject(request._id)}\r\n                          disabled={localLoading[request._id]}\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            icon={faUserTimes}\r\n                            className=\"mr-1 h-3 w-3\"\r\n                          />\r\n                          {localLoading[request._id]\r\n                            ? \"Processing...\"\r\n                            : \"Decline\"}\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n\r\n            {/* Connections List Section */}\r\n            <div className=\"bg-white\">\r\n              <h2 className=\"text-lg sm:text-xl font-semibold mb-2 text-purple-800\">\r\n                Your Connections\r\n              </h2>\r\n              {connections?.length === 0 ? (\r\n                <p className=\"text-xs text-gray-600\">\r\n                  You don't have any connections yet.\r\n                </p>\r\n              ) : (\r\n                <ul className=\"divide-y divide-gray-200\">\r\n                  {connections?.map((connection: User) => (\r\n                    <li key={connection._id} className=\"py-2 flex items-start\">\r\n                      <img\r\n                        src={connection.profileImage || \"/default-avatar.png\"}\r\n                        alt={connection.name}\r\n                        className=\"w-10 h-10 rounded-full object-cover mr-2\"\r\n                      />\r\n                      <div className=\"flex-grow\">\r\n                        <h3\r\n                          className=\"text-xs font-semibold text-purple-800 cursor-pointer\"\r\n                          onClick={() =>\r\n                            navigate(`/connection/profile/${connection._id}`)\r\n                          }\r\n                        >\r\n                          {connection.name}\r\n                        </h3>\r\n                        <p className=\"text-xs text-gray-600 mb-1\">\r\n                          {truncateBio(connection.bio)}\r\n                        </p>\r\n                        <div className=\"flex flex-wrap gap-1 text-xs text-gray-500\">\r\n                          {connection.email && (\r\n                            <span className=\"flex items-center\">\r\n                              <FontAwesomeIcon\r\n                                icon={faEnvelope}\r\n                                className=\"mr-1 h-3 w-3\"\r\n                              />\r\n                              {connection.email}\r\n                            </span>\r\n                          )}\r\n                          {connection.phone && (\r\n                            <span className=\"flex items-center\">\r\n                              <FontAwesomeIcon\r\n                                icon={faPhone}\r\n                                className=\"mr-1 h-3 w-3\"\r\n                              />\r\n                              {connection.phone}\r\n                            </span>\r\n                          )}\r\n                          {connection.experiences &&\r\n                            connection.experiences.length > 0 && (\r\n                              <span className=\"flex items-center\">\r\n                                <FontAwesomeIcon\r\n                                  icon={faBriefcase}\r\n                                  className=\"mr-1 h-3 w-3\"\r\n                                />\r\n                                {connection.experiences[0].company}\r\n                              </span>\r\n                            )}\r\n                          {connection.dateOfBirth && (\r\n                            <span className=\"flex items-center\">\r\n                              <FontAwesomeIcon\r\n                                icon={faCalendarAlt}\r\n                                className=\"mr-1 h-3 w-3\"\r\n                              />\r\n                              {new Date(\r\n                                connection.dateOfBirth\r\n                              ).toLocaleDateString()}\r\n                            </span>\r\n                          )}\r\n                          {connection.gender && (\r\n                            <span className=\"flex items-center\">\r\n                              <FontAwesomeIcon\r\n                                icon={faVenusMars}\r\n                                className=\"mr-1 h-3 w-3\"\r\n                              />\r\n                              {connection.gender}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        {connection.skills && connection.skills.length > 0 && (\r\n                          <div className=\"mt-1\">\r\n                            <h4 className=\"text-xs font-semibold text-gray-700\">\r\n                              Skills:\r\n                            </h4>\r\n                            <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                              {connection.skills.map((skill, index) => (\r\n                                <span\r\n                                  key={`${connection._id}-skill-${index}`}\r\n                                  className=\"bg-purple-100 text-purple-800 text-xs px-1 py-0.5 rounded\"\r\n                                >\r\n                                  {skill}\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <button className=\"ml-2 bg-purple-100 text-purple-700 px-2 py-1 rounded-full hover:bg-purple-200 transition duration-300 text-xs flex items-center\">\r\n                        <FontAwesomeIcon\r\n                          icon={faUserCheck}\r\n                          className=\"mr-1 h-3 w-3\"\r\n                        />{\" \"}\r\n                        Connected\r\n                      </button>\r\n                      <button\r\n                        className=\"ml-2 bg-red-600 text-white px-2 py-1 rounded-full hover:bg-red-700 transition duration-300 text-xs flex items-center\"\r\n                        onClick={() => handleRemove(connection._id!)} // Ensure _id is not undefined\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          icon={faUserTimes}\r\n                          className=\"mr-1 h-3 w-3\"\r\n                        />{\" \"}\r\n                        Remove\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Connections;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { Message } from \"../../types/messageType\";\r\n\r\ninterface ConversationListProps {\r\n  onSelectConversation: (userId: string) => void;\r\n  currentUserId: string;\r\n}\r\n\r\nconst ConversationList: React.FC<ConversationListProps> = ({\r\n  onSelectConversation,\r\n  currentUserId,\r\n}) => {\r\n  const connections = useSelector(\r\n    (state: RootState) => state.messages.connections\r\n  );\r\n  const conversations = useSelector(\r\n    (state: RootState) => state.messages.conversations\r\n  );\r\n\r\n\r\n  const filteredConnections = connections.filter(\r\n    (connection) => connection.user.id !== currentUserId\r\n  );\r\n\r\n  const getUnreadCount = (userId: string): number => {\r\n    const conversationId = currentUserId < userId\r\n      ? `${currentUserId}-${userId}`\r\n      : `${userId}-${currentUserId}`;\r\n    const conversation = conversations[conversationId] || [];\r\n    return conversation.filter((message: Message) => \r\n      message.sender.id === userId && !message.isRead && message.status !== 'read'\r\n    ).length;\r\n  };\r\n\r\n  return (\r\n    <div className=\"overflow-y-auto h-full\">\r\n      {filteredConnections.map((connection) => {\r\n        const unreadCount = getUnreadCount(connection.user.id);\r\n        return (\r\n          <div\r\n            key={connection.user.id}\r\n            className=\"p-4 border-b border-gray-200 cursor-pointer hover:bg-purple-50 transition duration-300\"\r\n            onClick={() => onSelectConversation(connection.user.id)}\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <div className=\"relative\">\r\n                <img\r\n                  src={connection.user.profileImage || \"/default-avatar.png\"}\r\n                  alt={connection.user.name}\r\n                  className=\"w-12 h-12 rounded-full object-cover\"\r\n                />\r\n                {connection.isOnline && (\r\n                  <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white\"></div>\r\n                )}\r\n              </div>\r\n              <div className=\"ml-4 flex-grow\">\r\n                <h3 className=\"text-lg font-semibold text-purple-800\">\r\n                  {connection.user.name}\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600 truncate\">\r\n                  {connection.lastMessage?.content || \"No messages yet\"}\r\n                </p>\r\n              </div>\r\n              <div className=\"flex flex-col items-end\">\r\n                <div className=\"text-xs text-gray-500\">\r\n                  {connection.lastMessage && new Date(connection.lastMessage.createdAt).toLocaleTimeString(\r\n                    [],\r\n                    { hour: \"2-digit\", minute: \"2-digit\" }\r\n                  )}\r\n                </div>\r\n                {unreadCount > 0 && (\r\n                  <div className=\"mt-1 bg-purple-600 text-white text-xs font-bold rounded-full px-2 py-1\">\r\n                    {unreadCount}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {connection.isTyping && (\r\n              <p className=\"text-sm text-gray-500 mt-1\">Typing...</p>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n","import { Buffer } from 'buffer';\r\n\r\nclass UserVideoCallService {\r\n  private peerConnection: RTCPeerConnection | null = null;\r\n  private localStream: MediaStream | null = null;\r\n  private remoteStream: MediaStream | null = null;\r\n  private onRemoteStreamUpdate: ((stream: MediaStream) => void) | null = null;\r\n  private onCallStateChange: ((state: string) => void) | null = null;\r\n\r\n  constructor() {\r\n    this.initializePeerConnection();\r\n  }\r\n\r\n  private initializePeerConnection() {\r\n    this.peerConnection = new RTCPeerConnection({\r\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n    });\r\n\r\n    this.peerConnection.ontrack = (event) => {\r\n      this.remoteStream = event.streams[0];\r\n      if (this.onRemoteStreamUpdate) {\r\n        this.onRemoteStreamUpdate(this.remoteStream);\r\n      }\r\n    };\r\n\r\n    this.peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        // Send the ICE candidate to the other peer\r\n        // This should be implemented using your signaling mechanism (e.g., WebSocket)\r\n      }\r\n    };\r\n  }\r\n\r\n  private resetPeerConnection() {\r\n    if (this.peerConnection) {\r\n      this.peerConnection.close();\r\n    }\r\n    this.initializePeerConnection();\r\n  }\r\n\r\n  async startLocalStream(): Promise<MediaStream> {\r\n    this.localStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n    return this.localStream;\r\n  }\r\n\r\n  async makeCall(recipientId: string): Promise<string> {\r\n    this.resetPeerConnection();\r\n\r\n    if (!this.localStream) {\r\n      await this.startLocalStream();\r\n    }\r\n\r\n    this.localStream!.getTracks().forEach(track => {\r\n      if (this.peerConnection) {\r\n        this.peerConnection.addTrack(track, this.localStream!);\r\n      }\r\n    });\r\n\r\n    const offer = await this.peerConnection!.createOffer();\r\n    await this.peerConnection!.setLocalDescription(offer);\r\n\r\n    const offerString = JSON.stringify(offer);\r\n    const offerBase64 = Buffer.from(offerString).toString('base64');\r\n\r\n    return offerBase64;\r\n  }\r\n\r\n  async handleIncomingCall(offerBase64: string): Promise<void> {\r\n    const offerString = Buffer.from(offerBase64, 'base64').toString('utf-8');\r\n    const offer = JSON.parse(offerString);\r\n    await this.peerConnection!.setRemoteDescription(new RTCSessionDescription(offer));\r\n  }\r\n\r\n  async createAnswer(): Promise<string> {\r\n    if (!this.peerConnection) {\r\n      throw new Error('Peer connection not initialized');\r\n    }\r\n    const answer = await this.peerConnection.createAnswer();\r\n    await this.peerConnection.setLocalDescription(answer);\r\n    const answerString = JSON.stringify(answer);\r\n    return Buffer.from(answerString).toString('base64');\r\n  }\r\n\r\n  async handleAnswer(answerBase64: string): Promise<void> {\r\n    if (!this.peerConnection) {\r\n      throw new Error('Peer connection not initialized');\r\n    }\r\n\r\n    const answerString = Buffer.from(answerBase64, 'base64').toString('utf-8');\r\n    const answer = JSON.parse(answerString);\r\n    await this.peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\r\n  }\r\n\r\n  async handleIceCandidate(candidateBase64: string): Promise<void> {\r\n    if (!this.peerConnection) {\r\n      throw new Error('Peer connection not initialized');\r\n    }\r\n\r\n    const candidateString = Buffer.from(candidateBase64, 'base64').toString('utf-8');\r\n    const candidate = JSON.parse(candidateString);\r\n    await this.peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\r\n  }\r\n\r\n  setOnRemoteStreamUpdate(callback: (stream: MediaStream) => void): void {\r\n    this.onRemoteStreamUpdate = callback;\r\n  }\r\n\r\n  setOnCallStateChange(callback: (state: string) => void): void {\r\n    this.onCallStateChange = callback;\r\n  }\r\n\r\n  disconnectCall(): void {\r\n    if (this.localStream) {\r\n      this.localStream.getTracks().forEach(track => {\r\n        track.stop();\r\n      });\r\n    }\r\n    if (this.remoteStream) {\r\n      this.remoteStream.getTracks().forEach(track => {\r\n        track.stop();\r\n      });\r\n    }\r\n    if (this.peerConnection) {\r\n      this.peerConnection.close();\r\n    }\r\n    this.localStream = null;\r\n    this.remoteStream = null;\r\n    this.peerConnection = null;\r\n    if (this.onCallStateChange) {\r\n      this.onCallStateChange('ended');\r\n    }\r\n  }\r\n\r\n  muteAudio(mute: boolean): void {\r\n    if (this.localStream) {\r\n      this.localStream.getAudioTracks().forEach(track => {\r\n        track.enabled = !mute;\r\n      });\r\n    }\r\n  }\r\n\r\n  hideVideo(hide: boolean): void {\r\n    if (this.localStream) {\r\n      this.localStream.getVideoTracks().forEach(track => {\r\n        track.enabled = !hide;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const userVideoCallService = new UserVideoCallService();\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { userVideoCallService } from '../../services/userVideoCallService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrophone, faMicrophoneSlash, faVideo, faVideoSlash, faPhone } from '@fortawesome/free-solid-svg-icons';\r\nimport { socketService } from '../../services/socketService';\r\nimport { useCall } from '../../contexts/CallContext';\r\n\r\ninterface UserVideoCallProps {\r\n  recipientId: string;\r\n  onEndCall: () => void;\r\n  incomingCallData?: { callerId: string, offer: string } | null;\r\n}\r\n\r\nconst UserVideoCall: React.FC<UserVideoCallProps> = ({ recipientId, onEndCall, incomingCallData }) => {\r\n  console.log(\"UserVideoCall component rendered\", { recipientId, incomingCallData });\r\n  \r\n  const { incomingCallData: contextIncomingCallData } = useCall();\r\n  const [localStream, setLocalStream] = useState<MediaStream | null>(null);\r\n  const [remoteStream, setRemoteStream] = useState<MediaStream | null>(null);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isVideoHidden, setIsVideoHidden] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const localVideoRef = useRef<HTMLVideoElement>(null);\r\n  const remoteVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  const handleEndCall = useCallback(() => {\r\n    console.log(\"Ending call\");\r\n    userVideoCallService.disconnectCall();\r\n    socketService.emit(\"userEndCall\", { recipientId });\r\n    setLocalStream(null);\r\n    setRemoteStream(null);\r\n    onEndCall();\r\n  }, [recipientId, onEndCall]);\r\n\r\n  useEffect(() => {\r\n    const startCall = async () => {\r\n      try {\r\n        console.log(\"Starting user-to-user video call\");\r\n        const stream = await userVideoCallService.startLocalStream();\r\n        console.log(\"Local stream obtained:\", stream);\r\n        setLocalStream(stream);\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n\r\n        userVideoCallService.setOnRemoteStreamUpdate((stream) => {\r\n          console.log(\"Received remote stream\");\r\n          setRemoteStream(stream);\r\n          if (remoteVideoRef.current) {\r\n            remoteVideoRef.current.srcObject = stream;\r\n          }\r\n        });\r\n\r\n        const callData = incomingCallData || contextIncomingCallData;\r\n        if (callData) {\r\n          // Handle incoming call\r\n          await userVideoCallService.handleIncomingCall(callData.offer);\r\n          const answer = await userVideoCallService.createAnswer();\r\n          socketService.emitCallAnswer(callData.callerId, answer);\r\n        } else {\r\n          // Initiate outgoing call\r\n          const offer = await userVideoCallService.makeCall(recipientId);\r\n          console.log(\"Created offer:\", offer);\r\n          socketService.emit(\"userCallOffer\", { recipientId, offer });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error starting video call:', error);\r\n        setError('Failed to start video call. Please try again.');\r\n      }\r\n    };\r\n\r\n    startCall();\r\n\r\n    const removeCallAnswerListener = socketService.on(\"userCallAnswer\", async (data: { answerBase64: string }) => {\r\n      console.log(\"Received call answer:\", data.answerBase64);\r\n      try {\r\n        await userVideoCallService.handleAnswer(data.answerBase64);\r\n      } catch (error) {\r\n        console.error('Error handling call answer:', error);\r\n        setError('Failed to establish connection. Please try again.');\r\n      }\r\n    });\r\n\r\n    const removeCallRejectedListener = socketService.onCallRejected(() => {\r\n      console.log(\"Call rejected\");\r\n      handleEndCall();\r\n    });\r\n\r\n    const removeCallEndedListener = socketService.on(\"userCallEnded\", () => {\r\n      console.log(\"Call ended by the other user\");\r\n      handleEndCall();\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"Cleaning up user video call\");\r\n      userVideoCallService.disconnectCall();\r\n      removeCallAnswerListener();\r\n      removeCallRejectedListener();\r\n      removeCallEndedListener();\r\n    };\r\n  }, [recipientId, incomingCallData, contextIncomingCallData, handleEndCall]);\r\n\r\n  const handleMuteToggle = () => {\r\n    setIsMuted(!isMuted);\r\n    userVideoCallService.muteAudio(!isMuted);\r\n  };\r\n\r\n  const handleVideoToggle = () => {\r\n    setIsVideoHidden(!isVideoHidden);\r\n    userVideoCallService.hideVideo(!isVideoHidden);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl p-6 text-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Error</h2>\r\n          <p className=\"mb-6\">{error}</p>\r\n          <button\r\n            onClick={onEndCall}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0  bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl p-4\">\r\n        <div className=\"relative aspect-w-16 aspect-h-9 mb-4\">\r\n          <div className=\"w-full h-full bg-black rounded-lg overflow-hidden\">\r\n            {remoteStream ? (\r\n              <video\r\n                ref={remoteVideoRef}\r\n                autoPlay\r\n                playsInline\r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n            ) : (\r\n              <div className=\"w-full h-full flex items-center justify-center text-white\">\r\n                {localStream ? (\r\n                  <video\r\n                    ref={localVideoRef}\r\n                    autoPlay\r\n                    playsInline\r\n                    muted\r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                ) : (\r\n                  \"Initializing call...\"\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {localStream && remoteStream && (\r\n            <div className=\"absolute bottom-4 right-4 w-1/4 h-1/4\">\r\n              <video\r\n                ref={localVideoRef}\r\n                autoPlay\r\n                playsInline\r\n                muted\r\n                className=\"w-full h-full object-cover rounded-lg border-2 border-white\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-center space-x-4\">\r\n          <button\r\n            onClick={handleMuteToggle}\r\n            className={`p-3 rounded-full ${isMuted ? 'bg-red-500' : 'bg-gray-200'}`}\r\n          >\r\n            <FontAwesomeIcon icon={isMuted ? faMicrophoneSlash : faMicrophone} className=\"text-xl\" />\r\n          </button>\r\n          <button\r\n            onClick={handleVideoToggle}\r\n            className={`p-3 rounded-full ${isVideoHidden ? 'bg-red-500' : 'bg-gray-200'}`}\r\n          >\r\n            <FontAwesomeIcon icon={isVideoHidden ? faVideoSlash : faVideo} className=\"text-xl\" />\r\n          </button>\r\n          <button\r\n            onClick={handleEndCall}\r\n            className=\"p-3 rounded-full bg-red-500 text-white\"\r\n          >\r\n            <FontAwesomeIcon icon={faPhone} className=\"text-xl transform rotate-135\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserVideoCall;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport {\n  fetchConversation,\n  markMessagesAsRead,\n  updateUnreadCount,\n} from \"../../redux/slices/userMessageSlice\";\nimport { updateTotalUnreadCount } from \"../../redux/slices/userRecruiterMessageSlice\";\nimport { Message } from \"../../types/messageType\";\nimport useSocket from \"../../hooks/useSocket\";\nimport debounce from \"lodash/debounce\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\";\nimport UserVideoCall from \"./UserVideoCall\";\nimport { useCall } from \"../../contexts/CallContext\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ninterface ConversationProps {\n  userId: string;\n}\n\nconst Conversation: React.FC<ConversationProps> = ({ userId }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const conversationId =\n    currentUser &&\n    (currentUser.id < userId\n      ? `${currentUser.id}-${userId}`\n      : `${userId}-${currentUser.id}`);\n  const messages = useSelector(\n    (state: RootState) =>\n      state.messages.conversations[conversationId || \"\"] || []\n  );\n  const connection = useSelector((state: RootState) =>\n    state.messages.connections.find((conn) => conn.user.id === userId)\n  );\n  const isTyping = useSelector(\n    (state: RootState) =>\n      state.messages.connections.find((conn) => conn.user.id === userId)\n        ?.isTyping || false\n  );\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const {\n    sendMessage: sendSocketMessage,\n    emitTyping,\n    isConnected,\n  } = useSocket(userId);\n  const [hasFetchedConversation, setHasFetchedConversation] = useState(false);\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const {\n    isIncomingCall,\n    incomingCallData,\n    isCallActive,\n    acceptCall,\n    rejectCall,\n    setupVideoCall,\n    endCall,\n  } = useCall();\n  const debouncedEmitTypingRef = useRef<(isTyping: boolean) => void>();\n\n  // Fetch conversation data\n  const fetchConversationData = useCallback(() => {\n    if (\n      currentUser &&\n      conversationId &&\n      !hasFetchedConversation &&\n      messages.length === 0\n    ) {\n      dispatch(fetchConversation({ userId1: currentUser.id, userId2: userId }))\n        .unwrap()\n        .catch((error) => {\n          // Handle error (e.g., show a notification to the user)\n        });\n      setHasFetchedConversation(true);\n    }\n  }, [\n    currentUser,\n    conversationId,\n    dispatch,\n    userId,\n    hasFetchedConversation,\n    messages.length,\n  ]);\n\n  useEffect(() => {\n    fetchConversationData();\n  }, [fetchConversationData]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Mark messages as read and update unread count\n  useEffect(() => {\n    const unreadMessages = messages.filter(\n      (message: Message) =>\n        message.sender.id === userId &&\n        !message.isRead &&\n        message.status !== \"read\"\n    );\n    if (unreadMessages.length > 0) {\n      dispatch(\n        markMessagesAsRead({\n          messageIds: unreadMessages.map((m: Message) => m.id),\n        })\n      );\n      dispatch(\n        updateUnreadCount(messages.filter((m: Message) => !m.isRead).length)\n      );\n      dispatch(updateTotalUnreadCount());\n    }\n  }, [dispatch, messages, userId]);\n\n  // Handle sending a message\n  const handleSendMessage = useCallback(\n    (e: React.FormEvent) => {\n      e.preventDefault();\n      if (newMessage.trim() && currentUser && isConnected) {\n        const messageData = {\n          senderId: currentUser.id,\n          recipientId: userId,\n          content: newMessage,\n        };\n        try {\n          sendSocketMessage(messageData);\n          setNewMessage(\"\");\n        } catch (error) {\n          toast.error(\"Failed to send message. Please try again.\");\n        }\n      } else if (!isConnected) {\n        toast.error(\"Not connected to the server. Please try again later.\");\n      }\n    },\n    [newMessage, currentUser, userId, sendSocketMessage, isConnected]\n  );\n\n  // Handle typing status\n  useEffect(() => {\n    debouncedEmitTypingRef.current = debounce((isTyping: boolean) => {\n      emitTyping(isTyping);\n    }, 300);\n  }, [emitTyping]);\n\n  const handleTyping = useCallback(() => {\n    if (currentUser) {\n      debouncedEmitTypingRef.current?.(true);\n\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      typingTimeoutRef.current = setTimeout(() => {\n        debouncedEmitTypingRef.current?.(false);\n      }, 3000);\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Handle video call actions\n  const handleAcceptCall = useCallback(() => {\n    acceptCall();\n  }, [acceptCall]);\n\n  const handleStartVideoCall = useCallback(() => {\n    setupVideoCall(userId);\n  }, [userId, setupVideoCall]);\n\n  const handleEndVideoCall = useCallback(() => {\n    endCall();\n  }, [endCall]);\n\n  if (!currentUser) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col h-full container mx-auto\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n      />\n      <div className=\"p-4 border-b border-gray-300 flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold text-purple-700\">\n          {connection?.user.name || \"Chat\"}\n        </h2>\n        <button\n          onClick={handleStartVideoCall}\n          className=\"bg-purple-600 text-white p-2 rounded-full hover:bg-purple-700 transition duration-300\"\n        >\n          <FontAwesomeIcon icon={faVideo} />\n        </button>\n      </div>\n      <div className=\"flex-grow overflow-y-auto p-4\">\n        {messages.map((message: Message, index: number) => (\n          <div\n            key={`${message.id}-${index}`}\n            className={`mb-4 ${\n              message.sender.id === currentUser?.id ? \"text-right\" : \"text-left\"\n            }`}\n          >\n            <div\n              className={`inline-block p-2 rounded-lg ${\n                message.sender.id === currentUser?.id\n                  ? \"bg-purple-600 text-white\"\n                  : \"bg-gray-200 text-gray-800\"\n              } break-words max-w-[70%]`}\n            >\n              {message.content}\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1\">\n              {new Date(message.createdAt).toLocaleTimeString()}\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      {isTyping && (\n        <div className=\"p-2 text-sm text-gray-500 italic\">\n          {connection?.user.name} is typing...\n        </div>\n      )}\n      {!isConnected && (\n        <div className=\"p-2 text-sm text-red-500\">\n          Not connected to the server. Messages may not be sent or received.\n        </div>\n      )}\n      <form\n        onSubmit={handleSendMessage}\n        className=\"p-4 border-t border-gray-300\"\n      >\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => {\n              setNewMessage(e.target.value);\n              handleTyping();\n            }}\n            placeholder=\"Type a message...\"\n            className=\"flex-grow p-2 border rounded-l focus:outline-none focus:ring-2 focus:ring-purple-500\"\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-purple-600 text-white p-2 rounded-r hover:bg-purple-700 transition duration-300\"\n          >\n            Send\n          </button>\n        </div>\n      </form>\n      {isIncomingCall && (\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 text-center\">\n            <h2 className=\"text-2xl font-bold mb-4\">Incoming Call</h2>\n            <p className=\"mb-6\">\n              You have an incoming call from {incomingCallData?.callerId}\n            </p>\n            <div className=\"flex justify-center space-x-4\">\n              <button\n                onClick={handleAcceptCall}\n                className=\"bg-green-500 text-white px-4 py-2 rounded-lg\"\n              >\n                Accept\n              </button>\n              <button\n                onClick={rejectCall}\n                className=\"bg-red-500 text-white px-4 py-2 rounded-lg\"\n              >\n                Reject\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCallActive && (\n        <UserVideoCall\n          recipientId={userId}\n          onEndCall={handleEndVideoCall}\n          incomingCallData={incomingCallData}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Conversation;\n","import { useEffect, useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { socketService } from \"../services/socketService\";\r\nimport { RootState } from \"../redux/store\";\r\nimport {\r\n  addMessage,\r\n  setTypingStatus,\r\n  updateUnreadCount,\r\n} from \"../redux/slices/userMessageSlice\";\r\nimport {\r\n  addUserRecruiterMessage,\r\n  updateTotalUnreadCount,\r\n} from \"../redux/slices/userRecruiterMessageSlice\";\r\nimport { createSocketListener } from \"../utils/socketUtils\";\r\n\r\nexport const useSocket = (recipientId: string) => {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state: RootState) => state.auth.user);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentUser?.id) {\r\n      console.log(\"Setting up socket connection for user:\", currentUser.id);\r\n      socketService.connect(currentUser.id);\r\n\r\n      const handleConnect = () => {\r\n        console.log(\"Socket connected successfully\");\r\n        setIsConnected(true);\r\n      };\r\n\r\n      const handleDisconnect = (reason: string) => {\r\n        console.log(\"Socket disconnected:\", reason);\r\n        setIsConnected(false);\r\n      };\r\n\r\n      const handleNewMessage = (message: any) => {\r\n        console.log(\"Received new message:\", message);\r\n        if (message.isRecruiterMessage) {\r\n          dispatch(addUserRecruiterMessage(message));\r\n          dispatch(updateTotalUnreadCount());\r\n        } else {\r\n          dispatch(addMessage(message));\r\n          dispatch(updateUnreadCount(message.unreadCount));\r\n        }\r\n      };\r\n\r\n      const handleUserTyping = (data: {\r\n        userId: string;\r\n        isTyping: boolean;\r\n      }) => {\r\n        console.log(\"Received typing event in useSocket:\", data);\r\n        dispatch(setTypingStatus(data));\r\n      };\r\n\r\n      const removeConnectListener = createSocketListener(\r\n        \"connect\",\r\n        handleConnect\r\n      );\r\n      const removeDisconnectListener = createSocketListener(\r\n        \"disconnect\",\r\n        handleDisconnect\r\n      );\r\n      const removeNewMessageListener = createSocketListener(\r\n        \"newMessage\",\r\n        handleNewMessage\r\n      );\r\n      const removeUserTypingListener = createSocketListener(\r\n        \"userTyping\",\r\n        handleUserTyping\r\n      );\r\n\r\n      return () => {\r\n        console.log(\"Cleaning up socket connection\");\r\n        removeConnectListener();\r\n        removeDisconnectListener();\r\n        removeNewMessageListener();\r\n        removeUserTypingListener();\r\n        socketService.disconnect();\r\n      };\r\n    }\r\n  }, [currentUser?.id, dispatch]);\r\n\r\n  const sendMessage = useCallback(\r\n    (message: { senderId: string; recipientId: string; content: string }) => {\r\n      console.log(\"Attempting to send message:\", message);\r\n      if (isConnected) {\r\n        socketService.sendMessage(message);\r\n      } else {\r\n        console.error(\"Cannot send message: Socket is not connected\");\r\n        // Implement retry logic or show an error to the user\r\n      }\r\n    },\r\n    [isConnected]\r\n  );\r\n\r\n  const emitTyping = useCallback(\r\n    (isTyping: boolean) => {\r\n      if (currentUser && isConnected) {\r\n        console.log(\r\n          \"Emitting typing event:\",\r\n          currentUser.id,\r\n          recipientId,\r\n          isTyping\r\n        );\r\n        socketService.emitTyping(recipientId, isTyping);\r\n      } else if (!isConnected) {\r\n        console.error(\"Cannot emit typing: Socket is not connected\");\r\n      }\r\n    },\r\n    [currentUser, recipientId, isConnected]\r\n  );\r\n\r\n  return { sendMessage, emitTyping, isConnected };\r\n};\r\n\r\nexport default useSocket;\r\n\r\nexport {};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from '../../redux/store';\r\nimport { searchConnectionsMessage } from '../../redux/slices/connectionSlice';\r\nimport { UserConnection } from '../../types/auth';\r\n\r\ninterface MessageConnectionSearchProps {\r\n  onSelectUser: (userId: string) => void;\r\n}\r\n\r\nconst MessageConnectionSearch: React.FC<MessageConnectionSearchProps> = ({ onSelectUser }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n  const searchResults = useSelector((state: RootState) => state.connections.messageSearchResults);\r\n\r\n  const handleSearch = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (user && searchQuery.trim()) {\r\n      dispatch(searchConnectionsMessage({ userId: user.id, query: searchQuery.trim() }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <form onSubmit={handleSearch} className=\"p-4 border-b\">\r\n        <div className=\"flex\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            placeholder=\"Search connections...\"\r\n            className=\"flex-grow p-2 border rounded-l focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-purple-500 text-white p-2 rounded-r hover:bg-purple-600 transition duration-300\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"flex-grow overflow-y-auto\">\r\n        {searchResults.map((connection: UserConnection) => (\r\n          <div\r\n            key={connection._id}\r\n            className=\"p-4 border-b cursor-pointer hover:bg-purple-100 transition duration-300\"\r\n            onClick={() => onSelectUser(connection._id)}\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <div className=\"w-12 h-12 rounded-full bg-purple-300 mr-3 flex-shrink-0\">\r\n                {connection.profileImage && (\r\n                  <img\r\n                    src={connection.profileImage}\r\n                    alt={connection.name}\r\n                    className=\"w-full h-full rounded-full object-cover\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <div className=\"font-semibold text-purple-800\">{connection.name}</div>\r\n                <div className=\"text-sm text-purple-600\">{connection.email}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageConnectionSearch;","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../../redux/store\";\r\nimport {\r\n  fetchMessageConnections,\r\n  setCurrentUserId,\r\n} from \"../../redux/slices/userMessageSlice\";\r\nimport ConversationList from \"./ConversationList\";\r\nimport Conversation from \"./Conversation\";\r\nimport MessageConnectionSearch from \"./MessageConnectionSearch\";\r\nimport Header from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserTie } from \"react-icons/fa\";\r\n\r\nconst Messages: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const recruiterUnreadCount = useSelector((state: RootState) => {\r\n    const conversations = state.userRecruiterMessages.conversations;\r\n    const messages = state.userRecruiterMessages.messages;\r\n    return conversations.reduce((sum, conv) => {\r\n      const conversationMessages = messages[conv.id] || [];\r\n      const unreadCount = conversationMessages.filter(\r\n        msg => !msg.isRead && !msg.locallyRead && msg.senderId !== user?.id\r\n      ).length;\r\n      return sum + unreadCount;\r\n    }, 0);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      dispatch(fetchMessageConnections(user.id));\r\n      dispatch(setCurrentUserId(user.id));\r\n    }\r\n  }, [dispatch, user?.id]);\r\n\r\n  const handleSelectUser = (userId: string) => {\r\n    setSelectedUserId(userId);\r\n    setShowSearch(false);\r\n  };\r\n\r\n  const handleBackToConversations = () => {\r\n    setSelectedUserId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <Header />\r\n      <div className=\"flex flex-grow overflow-hidden\">\r\n        <div className={`w-full ${selectedUserId ? 'hidden md:w-1/3' : 'md:w-1/3'} flex flex-col bg-white border-r border-gray-300`}>\r\n          <div className=\"p-4 border-b border-gray-300\">\r\n            <h2 className=\"text-2xl font-semibold text-purple-700\">Messages</h2>\r\n            <div className=\"flex justify-between items-center mt-2\">\r\n              <button\r\n                onClick={() => setShowSearch(!showSearch)}\r\n                className=\"w-full md:w-3/4 bg-purple-600 text-white py-2 px-4 rounded hover:bg-purple-700 transition duration-300\"\r\n              >\r\n                {showSearch ? \"Back to Conversations\" : \"New Message\"}\r\n              </button>\r\n              <Link to=\"/user/messages\" className=\"text-purple-600 hover:text-purple-800 relative\">\r\n                <FaUserTie size={24} title=\"Recruiter Messages\" />\r\n                {recruiterUnreadCount > 0 && (\r\n                  <span className=\"absolute -top-2 -right-2 bg-purple-500 text-white rounded-full px-2 py-1 text-xs\">\r\n                    {recruiterUnreadCount}\r\n                  </span>\r\n                )}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-grow overflow-y-auto\">\r\n            {showSearch ? (\r\n              <MessageConnectionSearch onSelectUser={handleSelectUser} />\r\n            ) : (\r\n              <ConversationList\r\n                onSelectConversation={handleSelectUser}\r\n                currentUserId={user?.id || \"\"}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={`w-full ${selectedUserId ? 'flex' : 'hidden md:flex'} flex-col`}>\r\n          {selectedUserId ? (\r\n            <>\r\n              <button\r\n                onClick={handleBackToConversations}\r\n                className=\"p-2 text-purple-600 hover:text-purple-800 md:hidden\"\r\n              >\r\n                Back to Conversations\r\n              </button>\r\n              <Conversation userId={selectedUserId} />\r\n            </>\r\n          ) : (\r\n            <div className=\"flex-grow flex items-center justify-center text-gray-500\">\r\n              Select a conversation or start a new one\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { io, Socket } from \"socket.io-client\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport store from \"../redux/store\";\nimport {\n  addUserRecruiterMessage,\n  setUserRecruiterTypingStatus,\n  markUserRecruiterMessageAsRead,\n  setUserOnlineStatus,\n  updateConversation,\n  addNewConversation,\n} from \"../redux/slices/userRecruiterMessageSlice\";\nimport {\n  addRecruiterMessage,\n  setRecruiterTypingStatus,\n  markRecruiterMessageAsRead,\n  setRecruiterOnlineStatus,\n  updateRecruiterConversation,\n  addNewRecruiterConversation,\n} from \"../redux/slices/recruiterMessageSlice\";\nimport { URMessage } from \"../types/userRecruiterMessage\";\nimport { Message } from \"../types/recruiterMessageType\";\n\nclass UserRecruiterSocketService {\n  private socket: Socket | null = null;\n  private userId: string | null = null;\n  private userType: \"user\" | \"recruiter\" | null = null;\n  private connected: boolean = false;\n  private onIncomingCallCallback:\n    | ((callerId: string, offer: string) => void)\n    | null = null;\n  private onCallEndedCallback: (() => void) | null = null;\n  private onlineStatusInterval: NodeJS.Timeout | null = null;\n\n  connect(userId: string, userType: \"user\" | \"recruiter\") {\n    this.userId = userId;\n    this.userType = userType;\n\n    if (this.socket && this.socket.connected) {\n      this.socket.disconnect();\n    }\n\n    this.socket = io(\n      process.env.REACT_APP_SOCKET_URL ,\n      {\n        transports: [\"websocket\"],\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        auth: { userId, userType },\n      }\n    );\n\n    this.setupEventListeners();\n    this.startOnlineStatusUpdates();\n  }\n\n  private setupEventListeners() {\n    if (!this.socket) return;\n\n    this.socket.on(\"connect\", () => {\n      this.connected = true;\n    });\n\n    this.socket.on(\"disconnect\", (reason) => {\n      this.connected = false;\n    });\n\n    this.socket.on(\"newUserRecruiterMessage\", (message: URMessage | Message) => {\n      if (this.userType === \"user\" && 'conversationId' in message) {\n        store.dispatch(addUserRecruiterMessage(message as URMessage));\n        store.dispatch(\n          updateConversation({\n            id: message.conversationId,\n            lastMessage: message.content,\n            lastMessageTimestamp: message.timestamp,\n            lastMessageRead: false,\n          })\n        );\n      } else if (this.userType === \"recruiter\" && 'conversationId' in message) {\n        store.dispatch(addRecruiterMessage(message as Message));\n        store.dispatch(\n          updateRecruiterConversation({\n            id: message.conversationId,\n            lastMessage: message.content,\n            lastMessageTimestamp: message.timestamp,\n            lastMessageRead: false,\n          })\n        );\n      }\n    });\n\n    this.socket.on(\n      \"userRecruiterTyping\",\n      ({\n        senderId,\n        conversationId,\n      }: {\n        senderId: string;\n        conversationId: string;\n      }) => {\n        if (this.userType === \"user\") {\n          store.dispatch(\n            setUserRecruiterTypingStatus({\n              userId: senderId,\n              conversationId,\n              isTyping: true,\n            })\n          );\n        } else {\n          store.dispatch(\n            setRecruiterTypingStatus({ userId: senderId, conversationId, isTyping: true })\n          );\n        }\n      }\n    );\n\n    this.socket.on(\n      \"userRecruiterStoppedTyping\",\n      ({\n        senderId,\n        conversationId,\n      }: {\n        senderId: string;\n        conversationId: string;\n      }) => {\n        if (this.userType === \"user\") {\n          store.dispatch(\n            setUserRecruiterTypingStatus({\n              userId: senderId,\n              conversationId,\n              isTyping: false,\n            })\n          );\n        } else {\n          store.dispatch(\n            setRecruiterTypingStatus({\n              userId: senderId,\n              conversationId,\n              isTyping: false,\n            })\n          );\n        }\n      }\n    );\n\n    this.socket.on(\n      \"userRecruiterMessageMarkedAsRead\",\n      ({\n        messageId,\n        conversationId,\n      }: {\n        messageId: string;\n        conversationId: string;\n      }) => {\n        if (this.userType === \"user\") {\n          store.dispatch(\n            markUserRecruiterMessageAsRead({ messageId, conversationId })\n          );\n          store.dispatch(\n            updateConversation({\n              id: conversationId,\n              lastMessageRead: true,\n            })\n          );\n        } else {\n          store.dispatch(\n            markRecruiterMessageAsRead({ messageId, conversationId })\n          );\n          store.dispatch(\n            updateRecruiterConversation({\n              id: conversationId,\n              lastMessageRead: true,\n            })\n          );\n        }\n      }\n    );\n\n    this.socket.on(\n      \"userOnlineStatus\",\n      ({ userId, online }: { userId: string; online: boolean }) => {\n        if (this.userType === \"user\") {\n          store.dispatch(setUserOnlineStatus({ userId, online }));\n        } else {\n          store.dispatch(setRecruiterOnlineStatus({ userId, online }));\n        }\n      }\n    );\n\n    this.socket.on(\"newRecruiterConversation\", (conversation: any) => {\n      if (this.userType === \"user\") {\n        store.dispatch(addNewConversation(conversation));\n      } else {\n        store.dispatch(addNewRecruiterConversation(conversation));\n      }\n    });\n\n    this.socket.on(\"initialOnlineStatus\", (onlineUsers: string[]) => {\n      if (this.userType === \"user\") {\n        onlineUsers.forEach((userId) => {\n          store.dispatch(setUserOnlineStatus({ userId, online: true }));\n        });\n      } else {\n        onlineUsers.forEach((userId) => {\n          store.dispatch(setRecruiterOnlineStatus({ userId, online: true }));\n        });\n      }\n    });\n\n    this.socket.on(\n      \"incomingCall\",\n      (data: { callerId: string; offer: string }) => {\n        if (this.onIncomingCallCallback) {\n          this.onIncomingCallCallback(data.callerId, data.offer);\n        }\n      }\n    );\n\n    this.socket.on(\"callEnded\", () => {\n      if (this.onCallEndedCallback) {\n        this.onCallEndedCallback();\n      }\n    });\n\n    this.socket?.on(\"onlineStatusUpdate\", (onlineUsers: string[]) => {\n      if (this.userType === \"user\") {\n        store.dispatch(setUserOnlineStatus({ userId: this.userId!, online: true }));\n        onlineUsers.forEach((userId) => {\n          store.dispatch(setUserOnlineStatus({ userId, online: true }));\n        });\n      } else {\n        store.dispatch(setRecruiterOnlineStatus({ userId: this.userId!, online: true }));\n        onlineUsers.forEach((userId) => {\n          store.dispatch(setRecruiterOnlineStatus({ userId, online: true }));\n        });\n      }\n    });\n  }\n\n  private startOnlineStatusUpdates() {\n    if (this.onlineStatusInterval) {\n      clearInterval(this.onlineStatusInterval);\n    }\n\n    this.onlineStatusInterval = setInterval(() => {\n      if (this.socket && this.connected) {\n        this.socket.emit(\"requestOnlineStatus\");\n      }\n    }, 30000);\n  }\n\n  joinConversation(conversationId: string) {\n    if (this.socket && this.connected) {\n      this.socket.emit(\"joinUserRecruiterConversation\", conversationId);\n    }\n  }\n\n  leaveConversation(conversationId: string) {\n    if (this.socket && this.connected) {\n      this.socket.emit(\"leaveUserRecruiterConversation\", conversationId);\n    }\n  }\n\n  sendMessage(conversationId: string, content: string, senderId: string) {\n    if (this.socket && this.connected) {\n      const now = new Date().toISOString();\n      const message = {\n        id: uuidv4(),\n        conversationId,\n        content,\n        senderId,\n        timestamp: now,\n        isRead: false,\n        senderType: this.userType,\n      };\n\n      this.socket.emit(\"sendUserRecruiterMessage\", message);\n\n    }\n  }\n\n  emitTyping(conversationId: string, recipientId: string) {\n    if (this.socket && this.connected) {\n      this.socket.emit(\"userRecruiterTyping\", {\n        conversationId,\n        senderId: this.userId,\n        recipientId,\n      });\n    }\n  }\n\n  emitStoppedTyping(conversationId: string, recipientId: string) {\n    if (this.socket && this.connected) {\n      this.socket.emit(\"userRecruiterStoppedTyping\", {\n        conversationId,\n        senderId: this.userId,\n        recipientId,\n      });\n    }\n  }\n\n  markMessageAsRead(messageId: string, conversationId: string) {\n    if (this.socket && this.connected) {\n      this.socket.emit(\"markUserRecruiterMessageAsRead\", {\n        messageId,\n        conversationId,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n    this.connected = false;\n    if (this.onlineStatusInterval) {\n      clearInterval(this.onlineStatusInterval);\n    }\n  }\n\n  onIncomingCall(callback: (callerId: string, offer: string) => void) {\n    this.onIncomingCallCallback = callback;\n  }\n\n  offIncomingCall(callback: (callerId: string, offer: string) => void) {\n    this.socket?.off(\"incomingCall\", callback);\n  }\n\n  emitCallOffer(recipientId: string, offerBase64: string) {\n    this.socket?.emit(\"callOffer\", { recipientId, offer: offerBase64 });\n  }\n\n  emitCallAnswer(callerId: string, answerBase64: string) {\n    this.socket?.emit(\"callAnswer\", { callerId, answer: answerBase64 });\n  }\n\n  emitCallRejected(callerId: string) {\n    this.socket?.emit(\"callRejected\", { callerId });\n  }\n\n  onCallAnswer(callback: (answerBase64: string) => void) {\n    this.socket?.on(\"callAnswer\", callback);\n  }\n\n  onCallRejected(callback: () => void) {\n    this.socket?.on(\"callRejected\", callback);\n  }\n\n  emitEndCall(recipientId: string) {\n    this.socket?.emit(\"endCall\", { recipientId });\n  }\n\n  onCallEnded(callback: () => void) {\n    this.onCallEndedCallback = callback;\n  }\n}\n\nexport const userRecruiterSocketService = new UserRecruiterSocketService();\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchConversations } from \"../../redux/slices/recruiterMessageSlice\";\r\nimport { RootState, AppDispatch } from \"../../redux/store\";\r\nimport { Conversation } from \"../../types/recruiterMessageType\";\r\nimport { userRecruiterSocketService } from \"../../services/userRecruiterSocketService\";\r\n\r\ninterface MessageListProps {\r\n  onSelectConversation: (conversationId: string) => void;\r\n  selectedConversationId: string | null;\r\n}\r\n\r\nconst MessageList: React.FC<MessageListProps> = ({\r\n  onSelectConversation,\r\n  selectedConversationId,\r\n}) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const conversations = useSelector(\r\n    (state: RootState) => state.recruiterMessages.RecruiterConversations\r\n  );\r\n  const messages = useSelector(\r\n    (state: RootState) => state.recruiterMessages.RecruiterMessages\r\n  );\r\n  const recruiterId = useSelector(\r\n    (state: RootState) => state.recruiter.recruiter?.id\r\n  );\r\n  const onlineStatus = useSelector(\r\n    (state: RootState) => state.recruiterMessages.onlineStatus\r\n  );\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchRecruiterConversations = async () => {\r\n      if (recruiterId) {\r\n        setIsLoading(true);\r\n        await dispatch(fetchConversations(recruiterId));\r\n        userRecruiterSocketService.connect(recruiterId, \"recruiter\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRecruiterConversations();\r\n  }, [dispatch, recruiterId]);\r\n\r\n  const getUnreadCount = (conversationId: string) => {\r\n    const conversationMessages = messages[conversationId] || [];\r\n    return conversationMessages.filter(\r\n      (msg) => !msg.isRead && !msg.locallyRead && msg.senderId !== recruiterId\r\n    ).length;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading conversations...</div>;\r\n  }\r\n\r\n  if (conversations.length === 0) {\r\n    return <div>No conversations found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-1/3 border-r\">\r\n      <h2 className=\"text-xl font-semibold p-4 border-b\">Conversations</h2>\r\n      <ul>\r\n        {conversations.map((conversation: Conversation) => {\r\n          const unreadCount = getUnreadCount(conversation.id);\r\n          return (\r\n            <li\r\n              key={conversation.id}\r\n              className={`p-4 border-b hover:bg-gray-100 cursor-pointer flex items-center ${\r\n                conversation.id === selectedConversationId ? \"bg-gray-100\" : \"\"\r\n              }`}\r\n              onClick={() => onSelectConversation(conversation.id)}\r\n            >\r\n              <div className=\"relative mr-4\">\r\n                <div className=\"w-12 h-12 rounded-full overflow-hidden flex-shrink-0 bg-gray-200 flex items-center justify-center\">\r\n                  {conversation.participant.profileImage ? (\r\n                    <img\r\n                      src={conversation.participant.profileImage}\r\n                      alt={`${conversation.participant.name}'s avatar`}\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"w-full h-full bg-gray-300 flex items-center justify-center text-gray-600 font-bold text-xl\">\r\n                      {conversation.participant.name.charAt(0)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {onlineStatus[conversation.participant.id] && (\r\n                  <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white transform translate-x-1 translate-y-1\"></div>\r\n                )}\r\n              </div>\r\n              <div className=\"flex-grow min-w-0\">\r\n                <h3 className=\"font-semibold truncate\">\r\n                  {conversation.participant.name}\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600 truncate\">\r\n                  {conversation.lastMessage}\r\n                </p>\r\n              </div>\r\n              {unreadCount > 0 && (\r\n                <div className=\"bg-purple-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs ml-2 absolute right-0\">\r\n                  {unreadCount}\r\n                </div>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","import React from 'react';\n\ninterface ConversationHeaderProps {\n  participantName: string;\n  isOnline: boolean;\n  children?: React.ReactNode;\n}\n\nconst ConversationHeader: React.FC<ConversationHeaderProps> = ({ participantName, isOnline, children }) => {\n  return (\n    <div className=\"bg-white border-b p-4 flex items-center justify-between\">\n      <div className=\"flex items-center\">\n        <div className=\"font-semibold\">{participantName}</div>\n        <div className={`ml-2 w-3 h-3 rounded-full ${isOnline ? 'bg-green-500' : 'bg-gray-400'}`}></div>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default ConversationHeader;\n","import { Buffer } from 'buffer';\r\n\r\nclass VideoCallService {\r\n  private peerConnection: RTCPeerConnection | null = null;\r\n  private localStream: MediaStream | null = null;\r\n  private remoteStream: MediaStream | null = null;\r\n  private onRemoteStreamUpdate: ((stream: MediaStream) => void) | null = null;\r\n  private onCallStateChange: ((state: string) => void) | null = null;\r\n\r\n  constructor() {\r\n    this.initializePeerConnection();\r\n  }\r\n\r\n  private initializePeerConnection() {\r\n    this.peerConnection = new RTCPeerConnection({\r\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n    });\r\n\r\n    this.peerConnection.ontrack = (event) => {\r\n      this.remoteStream = event.streams[0];\r\n      if (this.onRemoteStreamUpdate) {\r\n        this.onRemoteStreamUpdate(this.remoteStream);\r\n      }\r\n    };\r\n\r\n    this.peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        // Send the ICE candidate to the other peer\r\n        // This should be implemented using your signaling mechanism (e.g., WebSocket)\r\n      }\r\n    };\r\n  }\r\n\r\n  private resetPeerConnection() {\r\n    if (this.peerConnection) {\r\n      this.peerConnection.close();\r\n    }\r\n    this.initializePeerConnection();\r\n  }\r\n\r\n  async startLocalStream(): Promise<MediaStream> {\r\n    this.localStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n    return this.localStream;\r\n  }\r\n\r\n  async makeCall(recipientId: string): Promise<string> {\r\n    this.resetPeerConnection();\r\n\r\n    if (!this.localStream) {\r\n      await this.startLocalStream();\r\n    }\r\n\r\n    this.localStream!.getTracks().forEach(track => {\r\n      if (this.peerConnection) {\r\n        this.peerConnection.addTrack(track, this.localStream!);\r\n      }\r\n    });\r\n\r\n    const offer = await this.peerConnection!.createOffer();\r\n    await this.peerConnection!.setLocalDescription(offer);\r\n\r\n    // Convert the offer to a Base64 string\r\n    const offerString = JSON.stringify(offer);\r\n    const offerBase64 = Buffer.from(offerString).toString('base64');\r\n\r\n    return offerBase64;\r\n  }\r\n\r\n  async handleIncomingCall(offerBase64: string): Promise<string> {\r\n    this.resetPeerConnection();\r\n\r\n    if (!this.localStream) {\r\n      await this.startLocalStream();\r\n    }\r\n\r\n    this.localStream!.getTracks().forEach(track => {\r\n      if (this.peerConnection) {\r\n        this.peerConnection.addTrack(track, this.localStream!);\r\n      }\r\n    });\r\n\r\n    // Convert the Base64 offer back to an RTCSessionDescriptionInit object\r\n    const offerString = Buffer.from(offerBase64, 'base64').toString('utf-8');\r\n    const offer = JSON.parse(offerString);\r\n\r\n    await this.peerConnection!.setRemoteDescription(new RTCSessionDescription(offer));\r\n    const answer = await this.peerConnection!.createAnswer();\r\n    await this.peerConnection!.setLocalDescription(answer);\r\n\r\n    // Convert the answer to a Base64 string\r\n    const answerString = JSON.stringify(answer);\r\n    const answerBase64 = Buffer.from(answerString).toString('base64');\r\n\r\n    return answerBase64;\r\n  }\r\n\r\n  async handleAnswer(answerBase64: string): Promise<void> {\r\n    if (!this.peerConnection) {\r\n      throw new Error('Peer connection not initialized');\r\n    }\r\n\r\n    const answerString = Buffer.from(answerBase64, 'base64').toString('utf-8');\r\n    const answer = JSON.parse(answerString);\r\n    await this.peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\r\n  }\r\n\r\n  async handleIceCandidate(candidateBase64: string): Promise<void> {\r\n    if (!this.peerConnection) {\r\n      throw new Error('Peer connection not initialized');\r\n    }\r\n\r\n    const candidateString = Buffer.from(candidateBase64, 'base64').toString('utf-8');\r\n    const candidate = JSON.parse(candidateString);\r\n    await this.peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\r\n  }\r\n\r\n  setOnRemoteStreamUpdate(callback: (stream: MediaStream) => void): void {\r\n    this.onRemoteStreamUpdate = callback;\r\n  }\r\n\r\n  setOnCallStateChange(callback: (state: string) => void): void {\r\n    this.onCallStateChange = callback;\r\n  }\r\n\r\n  disconnectCall(): void {\r\n    if (this.localStream) {\r\n      this.localStream.getTracks().forEach(track => {\r\n        track.stop(); \r\n      });\r\n    }\r\n    if (this.peerConnection) {\r\n      this.peerConnection.close();\r\n    }\r\n    this.localStream = null;\r\n    this.remoteStream = null;\r\n    this.peerConnection = null;\r\n    if (this.onCallStateChange) {\r\n      this.onCallStateChange('ended');\r\n    }\r\n  }\r\n\r\n  endCall(): void {\r\n    this.disconnectCall();\r\n    // Remove the initializePeerConnection call here\r\n    // We'll initialize it when needed for the next call\r\n  }\r\n\r\n  muteAudio(mute: boolean): void {\r\n    if (this.localStream) {\r\n      this.localStream.getAudioTracks().forEach(track => {\r\n        track.enabled = !mute;\r\n      });\r\n    }\r\n  }\r\n\r\n  hideVideo(hide: boolean): void {\r\n    if (this.localStream) {\r\n      this.localStream.getVideoTracks().forEach(track => {\r\n        track.enabled = !hide;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const videoCallService = new VideoCallService();\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { videoCallService } from \"../../services/RecruiterUservideoCallService\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faMicrophone,\r\n  faMicrophoneSlash,\r\n  faVideo,\r\n  faVideoSlash,\r\n  faPhone,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { userRecruiterSocketService } from \"../../services/userRecruiterSocketService\";\r\n\r\ninterface VideoCallProps {\r\n  isRecruiter: boolean;\r\n  recipientId: string;\r\n  onEndCall: () => void;\r\n}\r\n\r\nconst VideoCall: React.FC<VideoCallProps> = ({\r\n  isRecruiter,\r\n  recipientId,\r\n  onEndCall,\r\n}) => {\r\n  const [localStream, setLocalStream] = useState<MediaStream | null>(null);\r\n  const [remoteStream, setRemoteStream] = useState<MediaStream | null>(null);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isVideoHidden, setIsVideoHidden] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const localVideoRef = useRef<HTMLVideoElement>(null);\r\n  const remoteVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  const handleEndCall = useCallback(() => {\r\n    videoCallService.disconnectCall();\r\n    userRecruiterSocketService.emitEndCall(recipientId);\r\n    setLocalStream(null);\r\n    setRemoteStream(null);\r\n    onEndCall();\r\n  }, [recipientId, onEndCall]);\r\n\r\n  useEffect(() => {\r\n    const startCall = async () => {\r\n      try {\r\n        const stream = await videoCallService.startLocalStream();\r\n        setLocalStream(stream);\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n\r\n        videoCallService.setOnRemoteStreamUpdate((stream) => {\r\n          setRemoteStream(stream);\r\n          if (remoteVideoRef.current) {\r\n            remoteVideoRef.current.srcObject = stream;\r\n          }\r\n        });\r\n\r\n        if (isRecruiter) {\r\n          const offer = await videoCallService.makeCall(recipientId);\r\n          userRecruiterSocketService.emitCallOffer(recipientId, offer);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error starting video call:\", error);\r\n        setError(\"Failed to start video call. Please try again.\");\r\n      }\r\n    };\r\n\r\n    startCall();\r\n\r\n    userRecruiterSocketService.onCallAnswer(async (answerBase64) => {\r\n      try {\r\n        await videoCallService.handleAnswer(answerBase64);\r\n      } catch (error) {\r\n        console.error(\"Error handling call answer:\", error);\r\n        setError(\"Failed to establish connection. Please try again.\");\r\n      }\r\n    });\r\n\r\n    userRecruiterSocketService.onCallRejected(() => {\r\n      handleEndCall();\r\n    });\r\n\r\n    return () => {\r\n      videoCallService.disconnectCall();\r\n    };\r\n  }, [isRecruiter, recipientId, handleEndCall]);\r\n\r\n  useEffect(() => {\r\n    if (localVideoRef.current && localStream) {\r\n      localVideoRef.current.srcObject = localStream;\r\n    }\r\n  }, [localStream]);\r\n\r\n  useEffect(() => {\r\n    if (remoteVideoRef.current && remoteStream) {\r\n      remoteVideoRef.current.srcObject = remoteStream;\r\n    }\r\n  }, [remoteStream]);\r\n\r\n  const handleMuteToggle = () => {\r\n    setIsMuted(!isMuted);\r\n    videoCallService.muteAudio(!isMuted);\r\n  };\r\n\r\n  const handleVideoToggle = () => {\r\n    setIsVideoHidden(!isVideoHidden);\r\n    videoCallService.hideVideo(!isVideoHidden);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg shadow-xl p-6 text-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Error</h2>\r\n          <p className=\"mb-6\">{error}</p>\r\n          <button\r\n            onClick={onEndCall}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl p-4\">\r\n        <div className=\"relative aspect-w-16 aspect-h-9 mb-4\">\r\n          <div className=\"w-full h-full bg-black rounded-lg overflow-hidden\">\r\n            {remoteStream ? (\r\n              <video\r\n                ref={remoteVideoRef}\r\n                autoPlay\r\n                playsInline\r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n            ) : (\r\n              <div className=\"w-full h-full flex items-center justify-center text-white\">\r\n                {localStream ? (\r\n                  <video\r\n                    ref={localVideoRef}\r\n                    autoPlay\r\n                    playsInline\r\n                    muted\r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                ) : (\r\n                  \"Initializing call...\"\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {localStream && remoteStream && (\r\n            <div className=\"absolute bottom-4 right-4 w-1/4 h-1/4\">\r\n              <video\r\n                ref={localVideoRef}\r\n                autoPlay\r\n                playsInline\r\n                muted\r\n                className=\"w-full h-full object-cover rounded-lg border-2 border-white\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-center space-x-4\">\r\n          <button\r\n            onClick={handleMuteToggle}\r\n            className={`p-3 rounded-full ${\r\n              isMuted ? \"bg-red-500\" : \"bg-gray-200\"\r\n            }`}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={isMuted ? faMicrophoneSlash : faMicrophone}\r\n              className=\"text-xl\"\r\n            />\r\n          </button>\r\n          <button\r\n            onClick={handleVideoToggle}\r\n            className={`p-3 rounded-full ${\r\n              isVideoHidden ? \"bg-red-500\" : \"bg-gray-200\"\r\n            }`}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={isVideoHidden ? faVideoSlash : faVideo}\r\n              className=\"text-xl\"\r\n            />\r\n          </button>\r\n          <button\r\n            onClick={handleEndCall}\r\n            className=\"p-3 rounded-full bg-red-500 text-white\"\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faPhone}\r\n              className=\"text-xl transform rotate-135\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport {\n  fetchMessages,\n  markAllMessagesAsLocallyRead,\n  setMessageSending\n} from \"../../redux/slices/recruiterMessageSlice\";\nimport { Message } from \"../../types/recruiterMessageType\";\nimport { userRecruiterSocketService } from \"../../services/userRecruiterSocketService\";\nimport { format, isValid } from \"date-fns\";\nimport ConversationHeader from \"../shared/ConversationHeader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\";\nimport VideoCall from \"../shared/VideoCall\";\nimport { toast } from \"react-toastify\";\n\ninterface ConversationProps {\n  conversationId: string;\n}\n\nconst RecruiterConversation: React.FC<ConversationProps> = ({\n  conversationId,\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const messages = useSelector(\n    (state: RootState) =>\n      state.recruiterMessages.RecruiterMessages[conversationId] || []\n  );\n  const currentRecruiter = useSelector(\n    (state: RootState) => state.recruiter.recruiter\n  );\n  const typingStatus = useSelector(\n    (state: RootState) =>\n      state.recruiterMessages.typingStatus[conversationId] || {}\n  );\n  const conversation = useSelector((state: RootState) =>\n    state.recruiterMessages.RecruiterConversations.find(\n      (conv) => conv.id === conversationId\n    )\n  );\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messageListRef = useRef<HTMLDivElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const onlineStatus = useSelector(\n    (state: RootState) => state.recruiterMessages.onlineStatus\n  );\n  const [isVideoCallActive, setIsVideoCallActive] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Scroll to bottom of message list\n  const scrollToBottom = useCallback(() => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchMessagesAndJoinConversation = async () => {\n      try {\n        await dispatch(fetchMessages(conversationId)).unwrap();\n        dispatch(markAllMessagesAsLocallyRead(conversationId));\n        userRecruiterSocketService.joinConversation(conversationId);\n      } catch (error) {\n        setError(\"Failed to load messages. Please try again.\");\n        toast.error(\"Failed to load messages. Please try again.\");\n      }\n    };\n\n    fetchMessagesAndJoinConversation();\n\n    return () => {\n      userRecruiterSocketService.leaveConversation(conversationId);\n    };\n  }, [dispatch, conversationId]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  // Handle sending a new message\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (newMessage.trim() && currentRecruiter) {\n      try {\n        dispatch(setMessageSending(true));\n        await userRecruiterSocketService.sendMessage(\n          conversationId,\n          newMessage,\n          currentRecruiter.id\n        );\n        setNewMessage(\"\");\n      } catch (error) {\n        setError(\"Failed to send message. Please try again.\");\n        toast.error(\"Failed to send message. Please try again.\");\n      } finally {\n        dispatch(setMessageSending(false));\n      }\n    }\n  };\n\n  // Handle typing status\n  const handleTyping = () => {\n    if (!isTyping) {\n      setIsTyping(true);\n      userRecruiterSocketService.emitTyping(conversationId, conversation?.participant.id || \"\");\n    }\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n      userRecruiterSocketService.emitStoppedTyping(conversationId, conversation?.participant.id || \"\");\n    }, 3000);\n  };\n\n  const handleMessageRead = (messageId: string) => {\n    if (currentRecruiter) {\n      userRecruiterSocketService.markMessageAsRead(messageId, conversationId);\n    }\n  };\n\n  const formatMessageTime = (dateString: string) => {\n    const date = new Date(dateString);\n    return isValid(date) ? format(date, \"HH:mm\") : \"Invalid Date\";\n  };\n\n  const isParticipantTyping = Object.values(typingStatus).some(\n    (status) => status\n  );\n\n  const handleStartVideoCall = () => {\n    setIsVideoCallActive(true);\n  };\n\n  const handleEndVideoCall = () => {\n    setIsVideoCallActive(false);\n    userRecruiterSocketService.emitEndCall(conversation?.participant.id || \"\");\n  };\n\n  useEffect(() => {\n    userRecruiterSocketService.onCallEnded(() => {\n      setIsVideoCallActive(false);\n    });\n\n    return () => {\n      // Clean up any listeners if necessary\n    };\n  }, []);\n\n  return (\n    <div className=\"flex-1 flex flex-col h-full\">\n      <ConversationHeader\n        participantName={conversation?.participant.name || \"Unknown\"}\n        isOnline={onlineStatus[conversation?.participant.id || \"\"] || false}\n      >\n        <button\n          onClick={handleStartVideoCall}\n          className=\"ml-2 p-2 rounded-full bg-purple-500 text-white hover:bg-purple-600 transition-colors\"\n        >\n          <FontAwesomeIcon icon={faVideo} />\n        </button>\n      </ConversationHeader>\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n          <span className=\"block sm:inline\">{error}</span>\n        </div>\n      )}\n      <div ref={messageListRef} className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message: Message) => (\n          <div\n            key={`${message.id}-${message.timestamp}`}\n            className={`flex ${\n              message.senderId === currentRecruiter?.id\n                ? \"justify-end\"\n                : \"justify-start\"\n            }`}\n          >\n            <div\n              className={`max-w-[70%] p-2 rounded-lg ${\n                message.senderId === currentRecruiter?.id\n                  ? \"bg-purple-500 text-white rounded-br-none\"\n                  : \"bg-gray-200 text-gray-800 rounded-bl-none\"\n              }`}\n              onMouseEnter={() => {\n                if (\n                  message.senderId !== currentRecruiter?.id &&\n                  !message.isRead\n                ) {\n                  handleMessageRead(message.id);\n                }\n              }}\n            >\n              <div className=\"break-words\">{message.content}</div>\n              <div className=\"text-xs mt-1 flex justify-between items-center\">\n                <span className=\"text-gray-500\">\n                  {formatMessageTime(message.timestamp)}\n                </span>\n                {message.senderId === currentRecruiter?.id && (\n                  <span className=\"ml-2\">\n                    {message.isRead ? (\n                      <span className=\"text-blue-400\">✓✓</span>\n                    ) : (\n                      <span className=\"text-gray-400\">✓</span>\n                    )}\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"border-t p-4\">\n        {isParticipantTyping && (\n          <div className=\"text-sm text-gray-500 italic mb-2\">\n            {conversation?.participant.name} is typing...\n          </div>\n        )}\n        <form onSubmit={handleSendMessage} className=\"flex\">\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => {\n              setNewMessage(e.target.value);\n              handleTyping();\n            }}\n            className=\"flex-1 border rounded-l-lg p-2 w-full\"\n            placeholder=\"Type a message...\"\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-purple-500 text-white rounded-r-lg px-4 py-2 whitespace-nowrap\"\n          >\n            Send\n          </button>\n        </form>\n      </div>\n      {isVideoCallActive && (\n        <VideoCall\n          isRecruiter={true}\n          recipientId={conversation?.participant.id || \"\"}\n          onEndCall={handleEndVideoCall}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RecruiterConversation;\n","import React, { useState } from \"react\";\r\nimport MessageList from \"./RecruiterMessageList\";\r\nimport Conversation from \"./RecruiterConversation\";\r\nimport RecruiterHeader from \"./RecruiterHeader\";\r\n\r\nconst RecruiterMessaging: React.FC = () => {\r\n  const [selectedConversation, setSelectedConversation] = useState<\r\n    string | null\r\n  >(null);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <RecruiterHeader />\r\n     \r\n        <div className=\"flex flex-1 overflow-hidden\">\r\n          <MessageList\r\n            onSelectConversation={setSelectedConversation}\r\n            selectedConversationId={selectedConversation}\r\n          />\r\n          {selectedConversation ? (\r\n            <Conversation conversationId={selectedConversation} />\r\n          ) : (\r\n            <div className=\"flex-1 flex items-center justify-center text-gray-500\">\r\n              Select a conversation to start messaging\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default RecruiterMessaging;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../../redux/store\";\r\nimport { fetchUserRecruiterConversations } from \"../../redux/slices/userRecruiterMessageSlice\";\r\nimport { URConversation } from \"../../types/userRecruiterMessage\";\r\nimport { userRecruiterSocketService } from \"../../services/userRecruiterSocketService\";\r\n\r\ninterface ConversationListProps {\r\n  onSelectConversation: (conversationId: string) => void;\r\n  selectedConversationId: string | null;\r\n}\r\n\r\nconst UserConversationList: React.FC<ConversationListProps> = ({\r\n  onSelectConversation,\r\n  selectedConversationId,\r\n}) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const conversations = useSelector(\r\n    (state: RootState) => state.userRecruiterMessages.conversations\r\n  );\r\n  const messages = useSelector(\r\n    (state: RootState) => state.userRecruiterMessages.messages\r\n  );\r\n  const currentUser = useSelector((state: RootState) => state.auth.user);\r\n  const onlineStatus = useSelector(\r\n    (state: RootState) => state.userRecruiterMessages.onlineStatus\r\n  );\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      if (currentUser?.id) {\r\n        setIsLoading(true);\r\n        await dispatch(fetchUserRecruiterConversations(currentUser.id));\r\n        userRecruiterSocketService.connect(currentUser.id, \"user\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n  }, [dispatch, currentUser]);\r\n\r\n  const getUnreadCount = (conversationId: string) => {\r\n    const conversationMessages = messages[conversationId] || [];\r\n    return conversationMessages.filter(\r\n      (msg) => !msg.isRead && !msg.locallyRead && msg.senderId !== currentUser?.id\r\n    ).length;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading conversations...</div>;\r\n  }\r\n\r\n  if (conversations.length === 0) {\r\n    return <div>No conversations found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-1/3 border-r\">\r\n      <h2 className=\"text-xl font-semibold p-4 border-b\">Conversations</h2>\r\n      <ul>\r\n        {conversations.map((conversation: URConversation) => {\r\n          const unreadCount = getUnreadCount(conversation.id);\r\n          return (\r\n            <li\r\n              key={conversation.id}\r\n              className={`p-4 border-b hover:bg-gray-100 cursor-pointer flex items-center ${\r\n                conversation.id === selectedConversationId ? \"bg-gray-100\" : \"\"\r\n              }`}\r\n              onClick={() => onSelectConversation(conversation.id)}\r\n            >\r\n              <div className=\"relative mr-4\">\r\n                <div className=\"w-12 h-12 rounded-full overflow-hidden flex-shrink-0 bg-gray-200 flex items-center justify-center\">\r\n                  {conversation.participant.profileImage ? (\r\n                    <img\r\n                      src={conversation.participant.profileImage}\r\n                      alt={conversation.participant.name}\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"text-2xl font-bold text-gray-600\">\r\n                      {conversation.participant.name.charAt(0)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {onlineStatus[conversation.participant.id] && (\r\n                  <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white transform translate-x-1 translate-y-1\"></div>\r\n                )}\r\n              </div>\r\n              <div className=\"flex-grow min-w-0\">\r\n                <h3 className=\"font-semibold truncate\">\r\n                  {conversation.participant.name}\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600 truncate\">\r\n                  {conversation.lastMessage}\r\n                </p>\r\n              </div>\r\n              {unreadCount > 0 && (\r\n                <div className=\"bg-purple-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs ml-2\">\r\n                  {unreadCount}\r\n                </div>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserConversationList;","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { \n  fetchUserRecruiterMessages,\n  setMessageSending\n} from \"../../redux/slices/userRecruiterMessageSlice\";\nimport { URMessage } from \"../../types/userRecruiterMessage\";\nimport { userRecruiterSocketService } from \"../../services/userRecruiterSocketService\";\nimport { format, isValid, parseISO } from \"date-fns\";\nimport ConversationHeader from \"../shared/ConversationHeader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVideo, faPhone } from \"@fortawesome/free-solid-svg-icons\";\nimport VideoCall from \"../shared/VideoCall\";\nimport { videoCallService } from \"../../services/RecruiterUservideoCallService\";\n\ninterface ConversationProps {\n  conversationId: string;\n}\n\nconst UserConversation: React.FC<ConversationProps> = ({ conversationId }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const messages = useSelector(\n    (state: RootState) =>\n      state.userRecruiterMessages.messages[conversationId] || []\n  );\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const typingStatus = useSelector(\n    (state: RootState) =>\n      state.userRecruiterMessages.typingStatus[conversationId] || {}\n  );\n  const conversation = useSelector((state: RootState) =>\n    state.userRecruiterMessages.conversations.find(\n      (conv) => conv.id === conversationId\n    )\n  );\n  const onlineStatus = useSelector(\n    (state: RootState) => state.userRecruiterMessages.onlineStatus\n  );\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messageListRef = useRef<HTMLDivElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [isVideoCallActive, setIsVideoCallActive] = useState(false);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [incomingCallOffer, setIncomingCallOffer] = useState<string | null>(\n    null\n  );\n  const messageSending = useSelector((state: RootState) => state.userRecruiterMessages.messageSending);\n\n  const scrollToBottom = useCallback(() => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchUserRecruiterMessages(conversationId));\n    userRecruiterSocketService.joinConversation(conversationId);\n    return () => {\n      userRecruiterSocketService.leaveConversation(conversationId);\n    };\n  }, [dispatch, conversationId]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (newMessage.trim() && currentUser) {\n      dispatch(setMessageSending(true));\n      userRecruiterSocketService.sendMessage(\n        conversationId,\n        newMessage,\n        currentUser.id\n      );\n      setNewMessage(\"\");\n      // You might want to add a setTimeout to set messageSending back to false\n      // in case the socket doesn't respond quickly enough\n      setTimeout(() => dispatch(setMessageSending(false)), 2000);\n    }\n  };\n  console.log(\"conversation\",conversation)\n\n  const handleTyping = () => {\n    if (!isTyping) {\n      setIsTyping(true);\n      userRecruiterSocketService.emitTyping(conversationId, conversation?.participant.id || \"\");\n    }\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n      userRecruiterSocketService.emitStoppedTyping(conversationId, conversation?.participant.id || \"\");\n    }, 3000);\n  };\n\n  const handleMessageRead = (messageId: string) => {\n    userRecruiterSocketService.markMessageAsRead(messageId, conversationId);\n  };\n\n  const formatMessageTime = (dateString: string | undefined) => {\n    if (!dateString) {\n      console.error(\"Invalid date: undefined\");\n      return \"Invalid Date\";\n    }\n\n    let date: Date | null = null;\n\n    // Try parsing as ISO string\n    date = parseISO(dateString);\n\n    // If parsing as ISO failed, try creating a new Date object\n    if (!isValid(date)) {\n      date = new Date(dateString);\n    }\n\n    // If both methods failed, return a default string\n    if (!isValid(date)) {\n      console.error(`Invalid date: ${dateString}`);\n      return \"Invalid Date\";\n    }\n\n    return format(date, \"HH:mm\");\n  };\n\n  const isParticipantTyping = Object.values(typingStatus).some(\n    (status) => status\n  );\n\n  useEffect(() => {\n    const handleIncomingCall = (callerId: string, offerBase64: string) => {\n      console.log(\"Handling incoming call:\", { callerId, offerBase64 });\n      setIncomingCall(true);\n      setIncomingCallOffer(offerBase64);\n      // You can play a ringtone here\n    };\n\n    userRecruiterSocketService.onIncomingCall(handleIncomingCall);\n\n    return () => {\n      userRecruiterSocketService.offIncomingCall(handleIncomingCall);\n    };\n  }, []);\n\n  const handleAcceptCall = async () => {\n    if (incomingCallOffer) {\n      setIncomingCall(false);\n      setIsVideoCallActive(true);\n      const answer = await videoCallService.handleIncomingCall(\n        incomingCallOffer\n      );\n      userRecruiterSocketService.emitCallAnswer(\n        conversation?.participant.id || \"\",\n        answer\n      );\n      setIncomingCallOffer(null);\n    }\n  };\n\n  const handleRejectCall = () => {\n    setIncomingCall(false);\n    userRecruiterSocketService.emitCallRejected(\n      conversation?.participant.id || \"\"\n    );\n  };\n\n  const handleEndVideoCall = () => {\n    setIsVideoCallActive(false);\n    userRecruiterSocketService.emitEndCall(conversation?.participant.id || \"\");\n  };\n\n  // Add this before the return statement\n  console.log(\"UserConversation render state:\", {\n    incomingCall,\n    isVideoCallActive,\n    incomingCallOffer,\n  });\n\n  useEffect(() => {\n    userRecruiterSocketService.onCallEnded(() => {\n      setIsVideoCallActive(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"flex-1 flex flex-col\">\n      <ConversationHeader\n        participantName={conversation?.participant.name || \"Unknown\"}\n        isOnline={onlineStatus[conversation?.participant.id || \"\"] || false}\n      />\n      <div\n        ref={messageListRef}\n        className=\"flex-grow overflow-y-auto p-4\"\n        style={{ maxHeight: \"calc(100vh - 200px)\" }}\n      >\n        {messages.map((message: URMessage) => (\n          <div\n            key={`${message.id}-${message.timestamp}`}\n            className={`mb-4 flex ${\n              message.senderId === currentUser?.id\n                ? \"justify-end\"\n                : \"justify-start\"\n            }`}\n          >\n            <div\n              className={`max-w-[70%] p-2 rounded-lg ${\n                message.senderId === currentUser?.id\n                  ? \"bg-purple-500 text-white rounded-br-none\"\n                  : \"bg-gray-200 text-gray-800 rounded-bl-none\"\n              }`}\n              onMouseEnter={() => {\n                if (message.senderId !== currentUser?.id && !message.isRead) {\n                  handleMessageRead(message.id);\n                }\n              }}\n            >\n              <div>{message.content}</div>\n              <div className=\"text-xs mt-1 flex justify-between items-center\">\n                <span className=\"text-gray-500\">\n                  {formatMessageTime(message.timestamp)}\n                </span>\n                {message.senderId === currentUser?.id && (\n                  <span className=\"ml-2\">\n                    {message.isRead ? (\n                      <span className=\"text-blue-400\">✓✓</span>\n                    ) : (\n                      <span className=\"text-gray-400\">✓</span>\n                    )}\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"border-t p-4 bg-white\">\n        {isParticipantTyping && (\n          <div className=\"text-sm text-gray-500 italic mb-2\">\n            {conversation?.participant.name} is typing...\n          </div>\n        )}\n        <form onSubmit={handleSendMessage} className=\"flex\">\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => {\n              setNewMessage(e.target.value);\n              handleTyping();\n            }}\n            className=\"flex-1 border rounded-l-lg p-2\"\n            placeholder=\"Type a message...\"\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-purple-500 text-white rounded-r-lg px-4 py-2\"\n            disabled={messageSending}\n          >\n            {messageSending ? 'Sending...' : 'Send'}\n          </button>\n        </form>\n      </div>\n      {incomingCall && (\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 text-center\">\n            <h2 className=\"text-2xl font-bold mb-4\">Incoming Video Call</h2>\n            <p className=\"mb-6\">from {conversation?.participant.name}</p>\n            <div className=\"flex justify-center space-x-4\">\n              <button\n                onClick={handleAcceptCall}\n                className=\"p-3 rounded-full bg-green-500 text-white\"\n              >\n                <FontAwesomeIcon icon={faVideo} className=\"text-xl\" />\n              </button>\n              <button\n                onClick={handleRejectCall}\n                className=\"p-3 rounded-full bg-red-500 text-white\"\n              >\n                <FontAwesomeIcon\n                  icon={faPhone}\n                  className=\"text-xl transform rotate-135\"\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      {isVideoCallActive && (\n        <VideoCall\n          isRecruiter={false}\n          recipientId={conversation?.participant.id || \"\"}\n          onEndCall={handleEndVideoCall}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserConversation;\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport UserHeader from './Header';\r\nimport UserConversationList from './UserConversationList';\r\nimport UserConversation from './UserConversation';\r\n\r\nconst UserMessaging: React.FC = () => {\r\n  const [selectedConversationId, setSelectedConversationId] = useState<string | null>(null);\r\n  const conversations = useSelector((state: RootState) => state.userRecruiterMessages.conversations);\r\n  const [newMessageNotification, setNewMessageNotification] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const latestConversation = conversations[0];\r\n    if (latestConversation && latestConversation.id !== selectedConversationId && latestConversation.unreadCount > 0) {\r\n      setNewMessageNotification(`New message from ${latestConversation.participant.name}`);\r\n      setTimeout(() => setNewMessageNotification(null),0); \r\n    }\r\n  }, [conversations, selectedConversationId]);\r\n\r\n  const handleSelectConversation = (conversationId: string) => {\r\n    setSelectedConversationId(conversationId);\r\n    setNewMessageNotification(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      <UserHeader />\r\n      <div className=\"flex flex-1 overflow-hidden\">\r\n        <UserConversationList onSelectConversation={handleSelectConversation} selectedConversationId={selectedConversationId} />\r\n        <div className=\"flex-1 flex flex-col\">\r\n          {newMessageNotification && (\r\n            <div className=\"bg-purple-500 text-white p-2 text-center\">\r\n              {newMessageNotification}\r\n            </div>\r\n          )}\r\n          {selectedConversationId ? (\r\n            <UserConversation conversationId={selectedConversationId} />\r\n          ) : (\r\n            <div className=\"flex-1 flex items-center justify-center text-gray-500\">\r\n              Select a conversation to start messaging\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessaging;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport {\r\n  fetchSubscriptions,\r\n  cancelSubscription,\r\n} from \"../../redux/slices/adminSubscriptionSlice\";\r\nimport Sidebar from \"./AdminSidebar\";\r\nimport Header from \"./AdminHeader\";\r\nimport { Subscription } from \"../../types/subscription\";\r\nimport ConfirmationModal from \"../common/ConfirmationModal\";\r\nimport { FaChevronLeft, FaChevronRight, FaBan, FaSearch, FaTimes } from \"react-icons/fa\";\r\n\r\nconst ITEMS_PER_PAGE = 15;\r\n\r\nconst AdminSubscriptionManagement: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { subscriptions, loading, error, totalPages, currentPage } =\r\n    useSelector((state: RootState) => state.subscriptions);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedSubscription, setSelectedSubscription] =\r\n    useState<Subscription | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSubscriptions({ page: currentPage, limit: ITEMS_PER_PAGE }));\r\n  }, [dispatch, currentPage]);\r\n\r\n  const handleCancelSubscription = (subscription: Subscription) => {\r\n    setSelectedSubscription(subscription);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const confirmCancelSubscription = () => {\r\n    if (selectedSubscription) {\r\n      dispatch(cancelSubscription(selectedSubscription.id));\r\n      setIsModalOpen(false);\r\n      setSelectedSubscription(null);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      dispatch(fetchSubscriptions({ page: newPage, limit: ITEMS_PER_PAGE }));\r\n    }\r\n  };\r\n\r\n  const filteredSubscriptions = subscriptions.filter((subscription: Subscription) =>\r\n    subscription.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    subscription.companyName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleClearSearch = () => {\r\n    setSearchTerm('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row min-h-screen bg-gray-100\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <Header />\r\n        <main className=\"p-6 flex-grow overflow-auto\">\r\n          {error && (\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n              <strong className=\"font-bold\">Error:</strong>\r\n              <span className=\"block sm:inline\"> {error}</span>\r\n            </div>\r\n          )}\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n            <h1 className=\"text-2xl font-semibold text-purple-800 mb-6\">\r\n              Subscription Management\r\n            </h1>\r\n            {loading ? (\r\n              <div className=\"flex justify-center items-center h-64\">\r\n                <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500\"></div>\r\n              </div>\r\n            ) : !subscriptions || subscriptions.length === 0 ? (\r\n              <div className=\"text-center py-4 text-purple-600\">No subscriptions found.</div>\r\n            ) : (\r\n              <>\r\n                <div className=\"mb-4 flex\">\r\n                  <div className=\"relative flex-grow\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Search subscriptions...\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => setSearchTerm(e.target.value)}\r\n                      className=\"w-full px-4 py-2 border rounded-lg text-gray-700 focus:outline-none focus:border-purple-500\"\r\n                    />\r\n                    {searchTerm && (\r\n                      <button\r\n                        onClick={handleClearSearch}\r\n                        className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-600 hover:text-gray-800\"\r\n                      >\r\n                        <FaTimes />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  <button className=\"ml-2 bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600\">\r\n                    <FaSearch />\r\n                  </button>\r\n                </div>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full bg-white\">\r\n                    <thead className=\"bg-purple-100\">\r\n                      <tr>\r\n                        <th className=\"py-3 px-6 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">Recruiter</th>\r\n                        <th className=\"py-3 px-6 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">Company</th>\r\n                        <th className=\"py-3 px-6 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">Plan</th>\r\n                        <th className=\"py-3 px-6 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">Amount</th>\r\n                        <th className=\"py-3 px-6 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">Start Date</th>\r\n                        <th className=\"py-3 px-6 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">End Date</th>\r\n                        <th className=\"py-3 px-6 text-left text-xs font-medium text-purple-800 uppercase tracking-wider\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-purple-200\">\r\n                      {filteredSubscriptions.map((subscription: Subscription) => (\r\n                        <tr key={subscription.id} className=\"hover:bg-purple-50\">\r\n                          <td className=\"py-4 px-6 text-sm\">{subscription.name}</td>\r\n                          <td className=\"py-4 px-6 text-sm\">{subscription.companyName}</td>\r\n                          <td className=\"py-4 px-6 text-sm\">{subscription.planDuration}</td>\r\n                          <td className=\"py-4 px-6 text-sm\">₹{subscription.subscriptionAmount}</td>\r\n                          <td className=\"py-4 px-6 text-sm\">{new Date(subscription.subscriptionStartDate).toLocaleDateString()}</td>\r\n                          <td className=\"py-4 px-6 text-sm\">{new Date(subscription.expiryDate).toLocaleDateString()}</td>\r\n                          <td className=\"py-4 px-6 text-sm\">\r\n                            <button\r\n                              onClick={() => handleCancelSubscription(subscription)}\r\n                              className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded inline-flex items-center\"\r\n                            >\r\n                              <FaBan className=\"mr-2\" /> Cancel subscription\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"mt-6 flex flex-col sm:flex-row justify-between items-center\">\r\n                  <div className=\"mb-4 sm:mb-0\">\r\n                    <span className=\"text-sm text-purple-600\">\r\n                      Page {currentPage} of {totalPages}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      onClick={() => handlePageChange(currentPage - 1)}\r\n                      disabled={currentPage === 1}\r\n                      className=\"px-4 py-2 bg-purple-500 text-white rounded disabled:bg-purple-300 hover:bg-purple-600 transition-colors duration-200 flex items-center\"\r\n                    >\r\n                      <FaChevronLeft className=\"mr-2\" /> Previous\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handlePageChange(currentPage + 1)}\r\n                      disabled={currentPage === totalPages}\r\n                      className=\"px-4 py-2 bg-purple-500 text-white rounded disabled:bg-purple-300 hover:bg-purple-600 transition-colors duration-200 flex items-center\"\r\n                    >\r\n                      Next <FaChevronRight className=\"ml-2\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n      <ConfirmationModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onConfirm={confirmCancelSubscription}\r\n        title=\"Cancel Subscription\"\r\n        message={`Are you sure you want to cancel the subscription for ${selectedSubscription?.name}?`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSubscriptionManagement;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport {\r\n  fetchUserPosts,\r\n  blockUserPost,\r\n} from \"../../redux/slices/adminUserPostSlice\";\r\nimport Sidebar from \"./AdminSidebar\";\r\nimport Header from \"./AdminHeader\";\r\nimport ConfirmationModal from \"../common/ConfirmationModal\";\r\nimport { FaEye, FaBan, FaUnlock, FaImage, FaVideo, FaChevronLeft, FaChevronRight, FaSearch, FaTimes } from 'react-icons/fa';\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\ninterface UserPost {\r\n  id: string;\r\n  userName: string;\r\n  userEmail: string;\r\n  content: string;\r\n  imageUrl?: string;\r\n  videoUrl?: string;\r\n  isBlocked: boolean;\r\n}\r\n\r\nconst AdminUserPostManagement: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { userPosts, loading, error, totalPages, currentPage } = useSelector(\r\n    (state: RootState) => state.userPosts\r\n  );\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedPost, setSelectedPost] = useState<UserPost | null>(null);\r\n  const [showContent, setShowContent] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserPosts({ page: currentPage, limit: ITEMS_PER_PAGE }));\r\n  }, [dispatch, currentPage]);\r\n\r\n  const handleBlockPost = (post: UserPost) => {\r\n    setSelectedPost(post);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const confirmBlockPost = () => {\r\n    if (selectedPost) {\r\n      dispatch(blockUserPost(selectedPost.id));\r\n      setIsModalOpen(false);\r\n      setSelectedPost(null);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      dispatch(fetchUserPosts({ page: newPage, limit: ITEMS_PER_PAGE }));\r\n    }\r\n  };\r\n\r\n  const toggleContent = (postId: string) => {\r\n    if (showContent === postId) {\r\n      setShowContent(null);\r\n    } else {\r\n      setShowContent(postId);\r\n    }\r\n  };\r\n\r\n  const filteredPosts = userPosts.filter((post: UserPost) =>\r\n    post.userName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    post.userEmail.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    post.content.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleClearSearch = () => {\r\n    setSearchTerm('');\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n  if (!userPosts || userPosts.length === 0) return <div>No user posts found.</div>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row min-h-screen bg-gray-100\">\r\n      <Sidebar />\r\n      <div className=\"flex-1\">\r\n        <Header />\r\n        <main className=\"p-2 sm:p-4 md:p-6\">\r\n          <h1 className=\"text-xl sm:text-2xl font-semibold text-purple-800 mb-4 sm:mb-6\">\r\n            User Post Management\r\n          </h1>\r\n          <div className=\"mb-4 flex flex-col sm:flex-row\">\r\n            <div className=\"relative flex-grow mb-2 sm:mb-0 sm:mr-2\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search posts...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full px-3 sm:px-4 py-2 text-sm sm:text-base border rounded-lg text-gray-700 focus:outline-none focus:border-purple-500\"\r\n              />\r\n              {searchTerm && (\r\n                <button\r\n                  onClick={handleClearSearch}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-600 hover:text-gray-800\"\r\n                >\r\n                  <FaTimes className=\"text-sm sm:text-base\" />\r\n                </button>\r\n              )}\r\n            </div>\r\n            <button className=\"bg-purple-500 text-white px-3 sm:px-4 py-2 rounded-lg hover:bg-purple-600 text-sm sm:text-base\">\r\n              <FaSearch className=\"inline mr-1\" /> Search\r\n            </button>\r\n          </div>\r\n          <div className=\"overflow-x-auto bg-white shadow-md rounded-lg\">\r\n            <table className=\"min-w-full leading-normal text-sm sm:text-base\">\r\n              <thead>\r\n                <tr className=\"bg-purple-100\">\r\n                  <th className=\"px-3 sm:px-5 py-2 sm:py-3 border-b-2 border-purple-200 text-left text-xs sm:text-sm font-semibold text-purple-700 uppercase tracking-wider\">\r\n                    User\r\n                  </th>\r\n                  <th className=\"px-3 sm:px-5 py-2 sm:py-3 border-b-2 border-purple-200 text-left text-xs sm:text-sm font-semibold text-purple-700 uppercase tracking-wider\">\r\n                    Content\r\n                  </th>\r\n                  <th className=\"px-3 sm:px-5 py-2 sm:py-3 border-b-2 border-purple-200 text-left text-xs sm:text-sm font-semibold text-purple-700 uppercase tracking-wider\">\r\n                    Media\r\n                  </th>\r\n                  <th className=\"px-3 sm:px-5 py-2 sm:py-3 border-b-2 border-purple-200 text-left text-xs sm:text-sm font-semibold text-purple-700 uppercase tracking-wider\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredPosts.map((post: UserPost) => (\r\n                  <tr key={post.id} className=\"hover:bg-purple-50\">\r\n                    <td className=\"px-3 sm:px-5 py-3 sm:py-5 border-b border-purple-200\">\r\n                      <div className=\"flex items-center\">\r\n                        <div>\r\n                          <p className=\"text-purple-900 whitespace-no-wrap font-semibold\">\r\n                            {post.userName}\r\n                          </p>\r\n                          <p className=\"text-purple-600 whitespace-no-wrap text-xs sm:text-sm\">\r\n                            {post.userEmail}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-3 sm:px-5 py-3 sm:py-5 border-b border-purple-200\">\r\n                      <button\r\n                        onClick={() => toggleContent(post.id)}\r\n                        className=\"text-purple-600 hover:text-purple-900 text-xs sm:text-sm\"\r\n                      >\r\n                        <FaEye className=\"inline mr-1 sm:mr-2\" />\r\n                        {showContent === post.id ? \"Hide Content\" : \"Show Content\"}\r\n                      </button>\r\n                      {showContent === post.id && (\r\n                        <div className=\"mt-2 text-purple-800 text-xs sm:text-sm\">{post.content}</div>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-3 sm:px-5 py-3 sm:py-5 border-b border-purple-200\">\r\n                      {post.imageUrl && (\r\n                        <button\r\n                          onClick={() => window.open(post.imageUrl, \"_blank\")}\r\n                          className=\"text-purple-600 hover:text-purple-900 mr-2 text-xs sm:text-sm\"\r\n                        >\r\n                          <FaImage className=\"inline mr-1\" /> View Image\r\n                        </button>\r\n                      )}\r\n                      {post.videoUrl && (\r\n                        <button\r\n                          onClick={() => window.open(post.videoUrl, \"_blank\")}\r\n                          className=\"text-purple-600 hover:text-purple-900 text-xs sm:text-sm\"\r\n                        >\r\n                          <FaVideo className=\"inline mr-1\" /> View Video\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-3 sm:px-5 py-3 sm:py-5 border-b border-purple-200\">\r\n                      <button\r\n                        onClick={() => handleBlockPost(post)}\r\n                        className={`${\r\n                          post.isBlocked\r\n                            ? \"bg-green-500 hover:bg-green-600\"\r\n                            : \"bg-red-500 hover:bg-red-600\"\r\n                        } text-white font-bold py-1 sm:py-2 px-2 sm:px-4 rounded focus:outline-none focus:shadow-outline text-xs sm:text-sm`}\r\n                      >\r\n                        {post.isBlocked ? <FaUnlock className=\"inline mr-1 sm:mr-2\" /> : <FaBan className=\"inline mr-1 sm:mr-2\" />}\r\n                        {post.isBlocked ? \"Unblock\" : \"Block\"}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"mt-4 flex flex-col sm:flex-row justify-between items-center\">\r\n            <div className=\"mb-2 sm:mb-0\">\r\n              <span className=\"text-purple-700 text-xs sm:text-sm\">\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <button\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n                className=\"px-3 sm:px-4 py-1 sm:py-2 mr-2 bg-purple-500 text-white rounded disabled:bg-purple-300 text-xs sm:text-sm\"\r\n              >\r\n                <FaChevronLeft className=\"inline mr-1\" /> Previous\r\n              </button>\r\n              <button\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n                className=\"px-3 sm:px-4 py-1 sm:py-2 bg-purple-500 text-white rounded disabled:bg-purple-300 text-xs sm:text-sm\"\r\n              >\r\n                Next <FaChevronRight className=\"inline ml-1\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n      <ConfirmationModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onConfirm={confirmBlockPost}\r\n        title={`${selectedPost?.isBlocked ? \"Unblock\" : \"Block\"} User Post`}\r\n        message={`Are you sure you want to ${\r\n          selectedPost?.isBlocked ? \"unblock\" : \"block\"\r\n        } this post by ${selectedPost?.userName}?`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUserPostManagement;\r\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\nimport { sendConnectionRequest } from \"../../redux/slices/connectionSlice\";\nimport { applyForJobAsync, fetchJobPost } from \"../../redux/slices/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { User } from \"../../types/auth\";\nimport { BasicJobPost } from \"../../types/jobPostTypes\";\nimport Header from \"./Header\";\nimport { UserCircle, Briefcase } from \"lucide-react\";\nimport { toast } from \"react-toastify\";\n\nconst SearchResults: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const { users, jobPosts, loading, error } = useSelector(\n    (state: RootState) => state.userSearch\n  );\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const [appliedJobs, setAppliedJobs] = useState<string[]>([]);\n  const [sentRequests, setSentRequests] = useState<string[]>([]);\n\n  const handleSendRequest = async (recipientId: string) => {\n    if (currentUser) {\n      try {\n        await dispatch(\n          sendConnectionRequest({ senderId: currentUser.id, recipientId })\n        ).unwrap();\n        setSentRequests((prev) => [...prev, recipientId]);\n        toast.success(\"Connection request sent successfully!\");\n      } catch (error) {\n        console.error(\"Error sending connection request:\", error);\n        toast.error(\"Failed to send connection request. Please try again.\");\n      }\n    }\n  };\n\n  const handleViewProfile = (userId: string) => {\n    navigate(`/connection/profile/${userId}`);\n  };\n\n  const handleApplyJob = async (jobId: string) => {\n    if (!jobId) {\n      console.error(\"Invalid job ID\");\n      toast.error(\"Error: Invalid job ID\");\n      return;\n    }\n\n    if (currentUser) {\n      try {\n        console.log(\"Applying for job with ID:\", jobId);\n        await dispatch(\n          applyForJobAsync({ userId: currentUser.id, jobId })\n        ).unwrap();\n        setAppliedJobs((prev) => [...prev, jobId]);\n        toast.success(\"Successfully applied for the job!\");\n      } catch (error) {\n        console.error(\"Error applying for job:\", error);\n        toast.error(\n          \"Error occurred while applying for the job. Please try again.\"\n        );\n      }\n    }\n  };\n\n  const handleViewJob = async (jobId: string) => {\n    if (!jobId) {\n      console.error(\"Invalid job ID\");\n      toast.error(\"Error: Invalid job ID\");\n      return;\n    }\n\n    try {\n      console.log(\"Fetching job details for ID:\", jobId);\n      await dispatch(fetchJobPost(jobId)).unwrap();\n      navigate(`/jobs/${jobId}`);\n    } catch (error) {\n      console.error(\"Error fetching job details:\", error);\n      toast.error(\"Error occurred while fetching job details. Please try again.\");\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"text-red-500 text-center mt-4\">{error}</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <Header />\n      <div className=\"container mx-auto px-4 py-8\">\n        <h2 className=\"text-2xl font-bold mb-4 text-purple-700\">\n          Search Results\n        </h2>\n\n        {users.length === 0 && jobPosts.length === 0 && (\n          <p className=\"text-gray-500 text-center\">No results found</p>\n        )}\n\n        {users.length > 0 && (\n          <div className=\"mb-8\">\n            <h3 className=\"text-xl font-semibold mb-4 text-purple-600\">\n              Users\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {users.map((user: User) => (\n                <div\n                  key={user.id}\n                  className=\"bg-white rounded-lg shadow-md p-4\"\n                >\n                  <div className=\"flex items-center mb-4\">\n                    {user.profileImage ? (\n                      <img\n                        src={user.profileImage}\n                        alt={user.name}\n                        className=\"w-12 h-12 rounded-full mr-4\"\n                      />\n                    ) : (\n                      <UserCircle className=\"w-12 h-12 text-gray-400 mr-4\" />\n                    )}\n                    <div>\n                      <h4 className=\"font-semibold\">{user.name}</h4>\n                      <p className=\"text-sm text-gray-500\">{user.email}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    {user.isConnected === false &&\n                      !sentRequests.includes(user.id) && (\n                        <button\n                          onClick={() => handleSendRequest(user.id)}\n                          className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700 transition duration-300\"\n                        >\n                          Connect\n                        </button>\n                      )}\n                    {sentRequests.includes(user.id) && (\n                      <button\n                        className=\"bg-gray-400 text-white px-3 py-1 rounded text-sm cursor-not-allowed\"\n                        disabled\n                      >\n                        Request Sent\n                      </button>\n                    )}\n                    <button\n                      onClick={() => handleViewProfile(user.id)}\n                      className=\"bg-gray-200 text-gray-700 px-3 py-1 rounded text-sm hover:bg-gray-300 transition duration-300\"\n                    >\n                      View Profile\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {jobPosts.length > 0 && (\n          <div>\n            <h3 className=\"text-xl font-semibold mb-4 text-purple-600\">\n              Job Posts\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {jobPosts.map((job: BasicJobPost) => (\n                <div\n                  key={job._id}\n                  className=\"bg-white rounded-lg shadow-md p-4\"\n                >\n                  <div className=\"flex items-center mb-4\">\n                    <Briefcase className=\"w-8 h-8 text-purple-600 mr-4\" />\n                    <div>\n                      <h4 className=\"font-semibold\">{job.title}</h4>\n                      <p className=\"text-sm text-gray-500\">\n                        {job.company?.name}\n                      </p>\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-4\">\n                    {job.description.substring(0, 100)}...\n                  </p>\n                  <div className=\"flex space-x-2\">\n                    {job.isApplied || appliedJobs.includes(job._id) ? (\n                      <button\n                        className=\"bg-gray-400 text-white px-3 py-1 rounded text-sm cursor-not-allowed\"\n                        disabled\n                      >\n                        Applied\n                      </button>\n                    ) : (\n                      <button\n                        onClick={() => handleApplyJob(job._id)}\n                        className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700 transition duration-300\"\n                      >\n                        Apply\n                      </button>\n                    )}\n                    <button\n                      onClick={() => handleViewJob(job._id)}\n                      className=\"bg-gray-200 text-gray-700 px-3 py-1 rounded text-sm hover:bg-gray-300 transition duration-300\"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","export const validateInput = (input: string): string => {\r\n  // Remove any potentially harmful characters\r\n  return input.replace(/[<>&'\"]/g, '');\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { setResumeData, generateResumeStart, generateResumeSuccess, generateResumeFailure } from '../../redux/slices/resumeSlice';\r\nimport { generateResumeApi } from '../../api/authapi';\r\nimport { ResumeData, Project, Experience, Education } from '../../types/resumeTypes';\r\nimport UserHeader from './Header';\r\nimport { validateInput } from '../../utils/inputValidation';\r\n\r\nconst ResumeBuilder: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, generatedResumeLink, error } = useSelector((state: RootState) => state.resume);\r\n  const userId = useSelector((state: RootState) => state.auth.user?.id);\r\n\r\n  const [formData, setFormData] = useState<ResumeData>({\r\n    userId: userId || '',\r\n    fullName: '',\r\n    email: '',\r\n    phone: '',\r\n    profileSummary: '',\r\n    skills: [],\r\n    projects: [],\r\n    experience: [],\r\n    education: [],\r\n  });\r\n\r\n  const [formErrors, setFormErrors] = useState<Partial<ResumeData>>({});\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    const sanitizedValue = validateInput(value);\r\n    setFormData({ ...formData, [name]: sanitizedValue });\r\n    validateField(name, sanitizedValue);\r\n  };\r\n\r\n  const validateField = (name: string, value: string) => {\r\n    let error = '';\r\n    switch (name) {\r\n      case 'fullName':\r\n        if (value.length < 2) error = 'Name must be at least 2 characters long';\r\n        break;\r\n      case 'email':\r\n        if (!/\\S+@\\S+\\.\\S+/.test(value)) error = 'Invalid email address';\r\n        break;\r\n      case 'phone':\r\n        if (!/^\\+?[\\d\\s-]{10,14}$/.test(value)) error = 'Invalid phone number';\r\n        break;\r\n      // Add more validations for other fields\r\n    }\r\n    setFormErrors(prev => ({ ...prev, [name]: error }));\r\n  };\r\n\r\n  const handleSkillsChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const skills = e.target.value.split(',').map(skill => validateInput(skill.trim()));\r\n    setFormData({ ...formData, skills });\r\n  };\r\n\r\n  const handleProjectChange = (index: number, field: keyof Project, value: string) => {\r\n    const updatedProjects = [...formData.projects];\r\n    if (field === 'technologies') {\r\n      updatedProjects[index] = { \r\n        ...updatedProjects[index], \r\n        [field]: value.split(',').map(tech => tech.trim()) \r\n      };\r\n    } else {\r\n      updatedProjects[index] = { ...updatedProjects[index], [field]: value };\r\n    }\r\n    setFormData({ ...formData, projects: updatedProjects });\r\n  };\r\n\r\n  const handleExperienceChange = (index: number, field: keyof Experience, value: string) => {\r\n    const updatedExperience = [...formData.experience];\r\n    updatedExperience[index] = { ...updatedExperience[index], [field]: value };\r\n    setFormData({ ...formData, experience: updatedExperience });\r\n  };\r\n\r\n  const handleEducationChange = (index: number, field: keyof Education, value: string) => {\r\n    const updatedEducation = [...formData.education];\r\n    updatedEducation[index] = { ...updatedEducation[index], [field]: value };\r\n    setFormData({ ...formData, education: updatedEducation });\r\n  };\r\n\r\n  const addProject = () => {\r\n    setFormData({\r\n      ...formData,\r\n      projects: [...formData.projects, { name: '', description: '', technologies: [], link: '' }],\r\n    });\r\n  };\r\n\r\n  const addExperience = () => {\r\n    setFormData({\r\n      ...formData,\r\n      experience: [...formData.experience, { company: '', position: '', startDate: '', endDate: '', description: '' }],\r\n    });\r\n  };\r\n\r\n  const addEducation = () => {\r\n    setFormData({\r\n      ...formData,\r\n      education: [...formData.education, { institution: '', degree: '', field: '', graduationDate: '' }],\r\n    });\r\n  };\r\n\r\n  const removeProject = (index: number) => {\r\n    const updatedProjects = formData.projects.filter((_, i) => i !== index);\r\n    setFormData({ ...formData, projects: updatedProjects });\r\n  };\r\n\r\n  const removeExperience = (index: number) => {\r\n    const updatedExperience = formData.experience.filter((_, i) => i !== index);\r\n    setFormData({ ...formData, experience: updatedExperience });\r\n  };\r\n\r\n  const removeEducation = (index: number) => {\r\n    const updatedEducation = formData.education.filter((_, i) => i !== index);\r\n    setFormData({ ...formData, education: updatedEducation });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      dispatch(generateResumeFailure('User ID is missing. Please log in again.'));\r\n      return;\r\n    }\r\n    if (Object.values(formErrors).some(error => error !== '')) {\r\n      dispatch(generateResumeFailure('Please correct the errors in the form.'));\r\n      return;\r\n    }\r\n    dispatch(setResumeData(formData));\r\n    dispatch(generateResumeStart());\r\n    try {\r\n      const resumeURL = await generateResumeApi({ ...formData, userId });\r\n      dispatch(generateResumeSuccess(resumeURL));\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        dispatch(generateResumeFailure(error.message));\r\n      } else {\r\n        dispatch(generateResumeFailure('An unknown error occurred'));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserHeader />\r\n      <div className=\"max-w-4xl m-3 mx-auto p-4 sm:p-6 bg-white rounded-lg shadow-md\">\r\n        <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-purple-700 mb-6\">Resume Builder</h1>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-6\">\r\n          {/* Basic Information */}\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-purple-700\">Full Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"fullName\"\r\n                name=\"fullName\"\r\n                value={formData.fullName}\r\n                onChange={handleInputChange}\r\n                className={`mt-1 block w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\r\n                  ${formErrors.fullName ? 'border-red-500' : 'border-gray-300'}`}\r\n                required\r\n              />\r\n              {formErrors.fullName && <p className=\"mt-1 text-sm text-red-500\">{formErrors.fullName}</p>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-purple-700\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                className={`mt-1 block w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\r\n                  ${formErrors.email ? 'border-red-500' : 'border-gray-300'}`}\r\n                required\r\n              />\r\n              {formErrors.email && <p className=\"mt-1 text-sm text-red-500\">{formErrors.email}</p>}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-purple-700\">Phone</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleInputChange}\r\n              className=\"mt-1 block w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n              required\r\n            />\r\n            {formErrors.phone && <p className=\"mt-1 text-sm text-red-500\">{formErrors.phone}</p>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"profileSummary\" className=\"block text-sm font-medium text-purple-700\">Profile Summary</label>\r\n            <textarea\r\n              id=\"profileSummary\"\r\n              name=\"profileSummary\"\r\n              value={formData.profileSummary}\r\n              onChange={handleInputChange}\r\n              rows={4}\r\n              className=\"mt-1 block w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n              required\r\n            ></textarea>\r\n            {formErrors.profileSummary && <p className=\"mt-1 text-sm text-red-500\">{formErrors.profileSummary}</p>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"skills\" className=\"block text-sm font-medium text-purple-700\">Skills (comma-separated)</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"skills\"\r\n              name=\"skills\"\r\n              value={formData.skills.join(', ')}\r\n              onChange={handleSkillsChange}\r\n              className=\"mt-1 block w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n              required\r\n            />\r\n            {formErrors.skills && <p className=\"mt-1 text-sm text-red-500\">{formErrors.skills}</p>}\r\n          </div>\r\n\r\n          {/* Projects */}\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold text-purple-700 mb-2\">Projects</h2>\r\n            {formData.projects.map((project, index) => (\r\n              <div key={index} className=\"mb-4 p-4 border border-purple-200 rounded-md relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Project Name\"\r\n                  value={project.name}\r\n                  onChange={(e) => handleProjectChange(index, 'name', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <textarea\r\n                  placeholder=\"Project Description\"\r\n                  value={project.description}\r\n                  onChange={(e) => handleProjectChange(index, 'description', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Technologies (comma-separated)\"\r\n                  value={project.technologies.join(', ')}\r\n                  onChange={(e) => handleProjectChange(index, 'technologies', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Project Link (optional)\"\r\n                  value={project.link}\r\n                  onChange={(e) => handleProjectChange(index, 'link', e.target.value)}\r\n                  className=\"w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeProject(index)}\r\n                  className=\"absolute top-2 right-2 text-red-500 hover:text-red-700\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button type=\"button\" onClick={addProject} className=\"mt-2 px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 text-sm sm:text-base md:text-lg lg:text-xl\">\r\n              Add Project\r\n            </button>\r\n          </div>\r\n\r\n          {/* Experience */}\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold text-purple-700 mb-2\">Experience</h2>\r\n            {formData.experience.map((exp, index) => (\r\n              <div key={index} className=\"mb-4 p-4 border border-purple-200 rounded-md relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Company\"\r\n                  value={exp.company}\r\n                  onChange={(e) => handleExperienceChange(index, 'company', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Position\"\r\n                  value={exp.position}\r\n                  onChange={(e) => handleExperienceChange(index, 'position', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Start Date\"\r\n                  value={exp.startDate}\r\n                  onChange={(e) => handleExperienceChange(index, 'startDate', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"End Date\"\r\n                  value={exp.endDate}\r\n                  onChange={(e) => handleExperienceChange(index, 'endDate', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <textarea\r\n                  placeholder=\"Description\"\r\n                  value={exp.description}\r\n                  onChange={(e) => handleExperienceChange(index, 'description', e.target.value)}\r\n                  className=\"w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeExperience(index)}\r\n                  className=\"absolute top-2 right-2 text-red-500 hover:text-red-700\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button type=\"button\" onClick={addExperience} className=\"mt-2 px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 text-sm sm:text-base md:text-lg lg:text-xl\">\r\n              Add Experience\r\n            </button>\r\n          </div>\r\n\r\n          {/* Education */}\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold text-purple-700 mb-2\">Education</h2>\r\n            {formData.education.map((edu, index) => (\r\n              <div key={index} className=\"mb-4 p-4 border border-purple-200 rounded-md relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Institution\"\r\n                  value={edu.institution}\r\n                  onChange={(e) => handleEducationChange(index, 'institution', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Degree\"\r\n                  value={edu.degree}\r\n                  onChange={(e) => handleEducationChange(index, 'degree', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Field of Study\"\r\n                  value={edu.field}\r\n                  onChange={(e) => handleEducationChange(index, 'field', e.target.value)}\r\n                  className=\"mb-2 w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Graduation Date\"\r\n                  value={edu.graduationDate}\r\n                  onChange={(e) => handleEducationChange(index, 'graduationDate', e.target.value)}\r\n                  className=\"w-full rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeEducation(index)}\r\n                  className=\"absolute top-2 right-2 text-red-500 hover:text-red-700\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button type=\"button\" onClick={addEducation} className=\"mt-2 px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 text-sm sm:text-base md:text-lg lg:text-xl\">\r\n              Add Education\r\n            </button>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-purple-600 text-white py-2 px-4 rounded-full hover:bg-purple-700 transition duration-300 disabled:opacity-50 text-sm sm:text-base md:text-lg lg:text-xl\"\r\n            disabled={loading || Object.values(formErrors).some(error => error !== '')}\r\n          >\r\n            {loading ? 'Generating...' : 'Generate Resume'}\r\n          </button>\r\n        </form>\r\n        {error && <p className=\"mt-4 text-red-600\">{error}</p>}\r\n        {generatedResumeLink && (\r\n          <div className=\"mt-6\">\r\n            <h2 className=\"text-xl font-semibold text-purple-700 mb-2\">Generated Resume</h2>\r\n            <div className=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4\">\r\n              <a\r\n                href={generatedResumeLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"text-purple-600 hover:text-purple-800 underline\"\r\n              >\r\n                View Your Resume\r\n              </a>\r\n              <a\r\n                href={generatedResumeLink}\r\n                download=\"resume.pdf\"\r\n                className=\"text-purple-600 hover:text-purple-800 underline\"\r\n              >\r\n                Download Your Resume\r\n              </a>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <iframe\r\n                src={generatedResumeLink}\r\n                title=\"Generated Resume\"\r\n                width=\"100%\"\r\n                height=\"600px\"\r\n                style={{ border: 'none' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResumeBuilder;\r\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { BasicJobPost } from '../../types/jobPostTypes';\nimport RecruiterHeader from './RecruiterHeader';\nimport { ArrowLeft, Briefcase, MapPin, IndianRupee, Users, Calendar, Clock, Globe, FileCheck } from 'lucide-react';\n\nconst RecruiterJobDetails: React.FC = () => {\n  const { jobId } = useParams<{ jobId: string }>();\n  const navigate = useNavigate();\n  const { posts } = useSelector((state: RootState) => state.jobPosts);\n  const [jobPost, setJobPost] = useState<BasicJobPost | null>(null);\n\n  useEffect(() => {\n    const post = posts.find(p => p._id === jobId);\n    if (post) {\n      setJobPost(post);\n    } else {\n      navigate('/recruiter/jobs');\n    }\n  }, [jobId, posts, navigate]);\n\n  if (!jobPost) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <RecruiterHeader />\n      <div className=\"container mx-auto px-4 py-8\">\n        <button\n          onClick={() => navigate('/recruiter/jobs')}\n          className=\"mb-4 flex items-center text-purple-600 hover:text-purple-800\"\n        >\n          <ArrowLeft size={20} className=\"mr-2\" />\n          Back to Job Posts\n        </button>\n        <div className=\"bg-white shadow-md rounded-lg p-6\">\n          <h2 className=\"text-3xl font-bold mb-4 text-purple-800\">{jobPost.title}</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n            <div className=\"flex items-center\">\n              <Briefcase className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Company:</span>\n              <span className=\"ml-2\">{jobPost.company?.name}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Globe className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Website:</span>\n              <a href={jobPost.company?.website} target=\"_blank\" rel=\"noopener noreferrer\" className=\"ml-2 text-blue-600 hover:underline\">\n                {jobPost.company?.website}\n              </a>\n            </div>\n            <div className=\"flex items-center\">\n              <MapPin className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Location:</span>\n              <span className=\"ml-2\">{jobPost.location}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <IndianRupee className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Salary Range:</span>\n              <span className=\"ml-2\">₹{jobPost.salaryRange.min.toLocaleString()} - ₹{jobPost.salaryRange.max.toLocaleString()}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Users className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Way of Work:</span>\n              <span className=\"ml-2\">{jobPost.wayOfWork}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Calendar className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Posted On:</span>\n              <span className=\"ml-2\">{new Date(jobPost.createdAt).toLocaleDateString()}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Clock className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Status:</span>\n              <span className={`ml-2 ${jobPost.status === 'Open' ? 'text-green-600' : 'text-red-600'}`}>\n                {jobPost.status}\n              </span>\n            </div>\n            <div className=\"flex items-center\">\n              <Users className=\"text-purple-600 mr-2\" />\n              <span className=\"font-semibold\">Applicants:</span>\n              <span className=\"ml-2\">{jobPost.applicants?.length || 0}</span>\n            </div>\n          </div>\n          <div className=\"mb-6\">\n            <h3 className=\"text-xl font-semibold mb-2 text-purple-700\">Description</h3>\n            <p className=\"text-gray-700 whitespace-pre-wrap\">{jobPost.description}</p>\n          </div>\n          <div className=\"mb-6\">\n            <h3 className=\"text-xl font-semibold mb-2 text-purple-700\">Qualifications</h3>\n            <ul className=\"list-disc list-inside text-gray-700\">\n              {jobPost.qualifications?.filter(q => q).map((qualification, index) => (\n                <li key={index}>{qualification}</li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"mb-6\">\n            <h3 className=\"text-xl font-semibold mb-2 text-purple-700\">Skills Required</h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {jobPost.skillsRequired?.filter(s => s).map((skill, index) => (\n                <span key={index} className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded-full text-sm\">\n                  {skill}\n                </span>\n              ))}\n            </div>\n          </div>\n          {jobPost.reports && jobPost.reports.length > 0 && (\n            <div className=\"mb-6\">\n              <h3 className=\"text-xl font-semibold mb-2 text-red-700\">Reports</h3>\n              {jobPost.reports.map((report, index) => (\n                <div key={index} className=\"bg-red-50 border border-red-200 rounded p-3 mb-2\">\n                  <p><strong>Reason:</strong> {report.reason}</p>\n                  <p><strong>Reported on:</strong> {new Date(report.createdAt).toLocaleString()}</p>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecruiterJobDetails;\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AppDispatch, RootState } from '../../redux/store';\r\nimport { sendForgotPasswordOtp, verifyForgotPasswordOtp, resetPassword } from '../../redux/slices/authSlice';\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [step, setStep] = useState(1);\r\n  const [timer, setTimer] = useState(30);\r\n  const [canResend, setCanResend] = useState(false);\r\n  const [errors, setErrors] = useState<{ email?: string; newPassword?: string; confirmPassword?: string }>({});\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const navigate = useNavigate();\r\n  const { loading, error } = useSelector((state: RootState) => state.auth);\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (step === 2 && timer > 0) {\r\n      interval = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n    } else if (timer === 0) {\r\n      setCanResend(true);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [step, timer]);\r\n\r\n  // Reset error message after each change or re-render\r\n  useEffect(() => {\r\n    dispatch({ type: 'auth/clearError' });\r\n  }, [email, otp, newPassword, confirmPassword, dispatch]);\r\n\r\n  const validateEmail = (email: string) => {\r\n    return /^[a-zA-Z0-9._-]+@[a-z]+\\.[a-z]{2,}$/.test(email);\r\n  };\r\n\r\n  const validatePassword = (password: string) => {\r\n    return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\r\n  };\r\n\r\n  const handleSendOtp = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n\r\n    if (!validateEmail(email)) {\r\n      setErrors({ email: 'Please enter a valid email address.' });\r\n      return;\r\n    }\r\n\r\n    const result = await dispatch(sendForgotPasswordOtp(email));\r\n    if (sendForgotPasswordOtp.fulfilled.match(result)) {\r\n      setStep(2);\r\n      setTimer(30);\r\n      setCanResend(false);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const result = await dispatch(verifyForgotPasswordOtp({ email, otp }));\r\n    if (verifyForgotPasswordOtp.fulfilled.match(result)) {\r\n      setStep(3);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n\r\n    if (!validatePassword(newPassword)) {\r\n      setErrors({ newPassword: 'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.' });\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setErrors({ confirmPassword: 'Passwords do not match.' });\r\n      return;\r\n    }\r\n\r\n    const result = await dispatch(resetPassword({ email, newPassword, otp }));\r\n    if (resetPassword.fulfilled.match(result)) {\r\n      navigate('/login');\r\n    }\r\n  };\r\n\r\n  const handleResendOtp = () => {\r\n    dispatch(sendForgotPasswordOtp(email));\r\n    setTimer(30);\r\n    setCanResend(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100 p-4\">\r\n      <div className=\"w-full max-w-md rounded-lg bg-white p-8 shadow-md\">\r\n        <h2 className=\"mb-6 text-2xl font-bold text-center text-purple-600\">Forgot Password</h2>\r\n        {step === 1 && (\r\n          <form onSubmit={handleSendOtp}>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"email\" className=\"block mb-2 text-sm font-medium text-gray-700\">\r\n                Email Address\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n              {errors.email && <p className=\"mt-2 text-sm text-red-500\">{errors.email}</p>}\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-purple-600 text-white py-2 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Sending...' : 'Send OTP'}\r\n            </button>\r\n          </form>\r\n        )}\r\n        {step === 2 && (\r\n          <form onSubmit={handleVerifyOtp}>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"otp\" className=\"block mb-2 text-sm font-medium text-gray-700\">\r\n                Enter OTP\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"otp\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-purple-600 text-white py-2 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 mb-4\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Verifying...' : 'Verify OTP'}\r\n            </button>\r\n            {timer > 0 && (\r\n              <p className=\"text-center text-sm text-gray-600\">\r\n                Resend OTP in {timer} seconds\r\n              </p>\r\n            )}\r\n            {canResend && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleResendOtp}\r\n                className=\"w-full mt-2 bg-gray-200 text-gray-700 py-2 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2\"\r\n              >\r\n                Resend OTP\r\n              </button>\r\n            )}\r\n          </form>\r\n        )}\r\n        {step === 3 && (\r\n          <form onSubmit={handleResetPassword}>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"newPassword\" className=\"block mb-2 text-sm font-medium text-gray-700\">\r\n                New Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                required\r\n              />\r\n              {errors.newPassword && <p className=\"mt-2 text-sm text-red-500\">{errors.newPassword}</p>}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"confirmPassword\" className=\"block mb-2 text-sm font-medium text-gray-700\">\r\n                Confirm New Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n              {errors.confirmPassword && <p className=\"mt-2 text-sm text-red-500\">{errors.confirmPassword}</p>}\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-purple-600 text-white py-2 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Resetting...' : 'Reset Password'}\r\n            </button>\r\n          </form>\r\n        )}\r\n        {error && <p className=\"mt-4 text-center text-sm text-red-600\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store, { persistor} from './redux/store';\r\nimport {  useSelector } from 'react-redux';\r\nimport { CallProvider, useCall } from './contexts/CallContext';\r\nimport { socketService } from './services/socketService';\r\nimport { RootState } from './redux/store';\r\n\r\n// Import components\r\nimport Login from './components/user/Login';\r\nimport Signup from './components/user/Signup';\r\nimport Dashboard from './components/user/Dashboard';\r\nimport PrivateRoute from './components/user/PrivateRoute';\r\nimport AdminLogin from './components/admin/AdminLogin';\r\nimport AdminDashboard from './components/admin/AdminDashboard';\r\nimport AdminPrivateRoute from './components/admin/AdminPrivateRoute';\r\nimport RecruiterLogin from './components/recruiter/RecruiterLogin';\r\nimport RecruiterSignup from './components/recruiter/RecruiterRegister';\r\nimport RecruiterDashboard from './components/recruiter/RecruiterHome';\r\nimport RecruiterPrivateRoute from './components/recruiter/RecruiterPrivateRoute';\r\nimport VerifyOtp from './components/recruiter/RecruiterVerifyOtp';\r\nimport AdminRecruiterList from './components/admin/AdminRecruiterList';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport UserProfile from './components/user/UserProfile';\r\nimport UpdateProfile from './components/user/UpdateProfile';\r\nimport AdminProfile from './components/admin/AdminProfile';\r\nimport RecruiterProfile from './components/recruiter/RecruiterProfile';\r\nimport RecruiterProfileUpdate from './components/recruiter/RecruiterProfileUpdate';\r\nimport JobPostWrapper from './components/recruiter/jobPost/JobPostWrapper';\r\nimport CreateJobPost from './components/recruiter/jobPost/CreateJobPost';\r\nimport EditJobPost from './components/recruiter/jobPost/EditJobPost';\r\nimport JobList from './components/user/JobList';\r\nimport JobDetail from './components/user/JobDetail';\r\nimport JobContestantsList from './components/recruiter/jobPost/JobContestantsList';\r\nimport ContestantDetails from './components/recruiter/jobPost/ContestantDetails';\r\nimport UserList from './components/admin/AdminUserList';\r\nimport PostList from './components/user/posts/PostList';\r\nimport CreatePost from './components/user/posts/CreatePost';\r\nimport PostsList from './components/user/posts/PostList'\r\nimport EditPost from './components/user/posts/EditPost'\r\nimport AdminJobPost from './components/admin/AdminJobPost'\r\nimport ConnectionProfile from './components/user/ConnectionProfile';\r\nimport Connections from './components/user/Connections';\r\nimport Messages from './components/user/Messages';\r\nimport RecruiterMessage from './components/recruiter/RecruiterMessaging';\r\nimport UserMessaging from './components/user/UserMessaging';\r\nimport AdminSubscriptionManagement from './components/admin/AdminSubscriptionManagement';\r\nimport AdminUserPostManagement from './components/admin/AdminUserPostManagement';\r\nimport SearchResults from './components/user/SearchResults';\r\nimport UserVideoCall from './components/user/UserVideoCall';\r\nimport ResumeBuilder from './components/user/ResumeBuilder';\r\nimport RecruiterJobDetails from './components/recruiter/RecruiterJobDetails';\r\nimport ForgotPassword from './components/user/ForgotPassword';\r\n\r\nconst AppContent: React.FC = () => {\r\n  const { handleIncomingCall, isCallActive, incomingCallData, endCall } = useCall();\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      socketService.connect(user.id);\r\n      const removeIncomingCallListener = socketService.onIncomingCall(handleIncomingCall);\r\n\r\n      return () => {\r\n        removeIncomingCallListener();\r\n        socketService.disconnect();\r\n      };\r\n    }\r\n  }, [user, handleIncomingCall]);\r\n\r\n  const handleEndCall = useCallback(() => {\r\n    endCall();\r\n  }, [endCall]);\r\n\r\n  return (\r\n    <>\r\n      <Routes>\r\n        {/* User Routes */}\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n        <Route path=\"/dashboard/*\" element={<PrivateRoute><Dashboard /></PrivateRoute>} />\r\n        <Route path=\"/profile/:userId\" element={<PrivateRoute><UserProfile /></PrivateRoute>} />\r\n        <Route path=\"/profile/update/:userId\" element={<PrivateRoute><UpdateProfile /></PrivateRoute>} />\r\n        <Route path=\"/jobs\" element={<PrivateRoute><JobList /></PrivateRoute>} />\r\n        <Route path=\"/jobs/:jobId\" element={<PrivateRoute><JobDetail /></PrivateRoute>} />\r\n        <Route path=\"/posts/:userId\" element={<PrivateRoute><PostList /></PrivateRoute>} />\r\n        <Route path=\"/posts/create\" element={<PrivateRoute><CreatePost /></PrivateRoute>}/>\r\n        <Route path=\"/posts/user/:userId\" element={<PrivateRoute><PostsList /></PrivateRoute>}/>\r\n        <Route path=\"/edit-post/:postId\" element={<PrivateRoute><EditPost /></PrivateRoute>}/>\r\n        <Route path=\"/connection/profile/:userId\" element={<PrivateRoute><ConnectionProfile /></PrivateRoute>} />\r\n        <Route path=\"/connections\" element={<PrivateRoute><Connections /></PrivateRoute>} />\r\n        <Route path=\"/messages\" element={<PrivateRoute><Messages /></PrivateRoute>} />\r\n        <Route path=\"/user/messages\" element={<PrivateRoute><UserMessaging /></PrivateRoute>} />\r\n        <Route path=\"/search-results\" element={<PrivateRoute><SearchResults /></PrivateRoute>} />\r\n        <Route path=\"/resume-builder\" element={<PrivateRoute><ResumeBuilder /></PrivateRoute>} />\r\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\r\n        \r\n        {/* Admin Routes */}\r\n        <Route path=\"/admin\" element={<AdminLogin />} />\r\n        <Route path=\"/admin/login\" element={<AdminLogin />} />\r\n        <Route path=\"/admin/dashboard\" element={<AdminPrivateRoute><AdminDashboard /></AdminPrivateRoute>} />\r\n        <Route path=\"/admin/recruiters\" element={<AdminPrivateRoute><AdminRecruiterList /></AdminPrivateRoute>} />\r\n        <Route path=\"/admin/profile\" element={<AdminPrivateRoute><AdminProfile /></AdminPrivateRoute>} />\r\n        <Route path=\"/admin/user\" element={<AdminPrivateRoute><UserList /></AdminPrivateRoute>} />\r\n        <Route path=\"/admin/jobpost\" element={<AdminPrivateRoute><AdminJobPost /></AdminPrivateRoute>} />\r\n        <Route path=\"/admin/subscription\" element={<AdminPrivateRoute><AdminSubscriptionManagement /></AdminPrivateRoute>} />\r\n        <Route path=\"/admin/userposts\" element={<AdminPrivateRoute><AdminUserPostManagement /></AdminPrivateRoute>} />\r\n\r\n        {/* Recruiter Routes */}\r\n        <Route path=\"/recruiter\" element={<RecruiterLogin />} />\r\n        <Route path=\"/recruiter/login\" element={<RecruiterLogin />} />\r\n        <Route path=\"/recruiter/signup\" element={<RecruiterSignup />} />\r\n        <Route path=\"/recruiter/verify-otp\" element={<VerifyOtp />} />\r\n        <Route path=\"/recruiter/dashboard/*\" element={<RecruiterPrivateRoute><RecruiterDashboard /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/profile\" element={<RecruiterPrivateRoute><RecruiterProfile /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/update-profile\" element={<RecruiterPrivateRoute><RecruiterProfileUpdate /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/jobs\" element={<RecruiterPrivateRoute><JobPostWrapper /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/jobs/create\" element={<RecruiterPrivateRoute><CreateJobPost /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/jobs/edit/:id\" element={<RecruiterPrivateRoute><EditJobPost /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/job-applicants/:jobId\" element={<RecruiterPrivateRoute><JobContestantsList /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/contestant/:contestantId\" element={<RecruiterPrivateRoute><ContestantDetails /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/messages\" element={<RecruiterPrivateRoute><RecruiterMessage /></RecruiterPrivateRoute>} />\r\n        <Route path=\"/recruiter/jobPost/:jobId\" element={<RecruiterPrivateRoute><RecruiterJobDetails /></RecruiterPrivateRoute>} />\r\n       \r\n      </Routes>\r\n      <IncomingCallDialog />\r\n      {isCallActive && incomingCallData && (\r\n        <UserVideoCall\r\n          recipientId={incomingCallData.callerId}\r\n          onEndCall={handleEndCall}\r\n          incomingCallData={incomingCallData}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst IncomingCallDialog: React.FC = () => {\r\n  const { isIncomingCall, incomingCallData, acceptCall, rejectCall } = useCall();\r\n\r\n  if (!isIncomingCall) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl p-6 text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Incoming Call</h2>\r\n        <p className=\"mb-6\">You have an incoming call from {incomingCallData?.callerId}</p>\r\n        <div className=\"flex justify-center space-x-4\">\r\n          <button\r\n            onClick={acceptCall}\r\n            className=\"bg-green-500 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Accept\r\n          </button>\r\n          <button\r\n            onClick={rejectCall}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Reject\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <CallProvider>\r\n      <AppContent />\r\n    </CallProvider>\r\n  );\r\n};\r\n\r\nconst RootApp: React.FC = () => (\r\n  <Provider store={store}>\r\n    <PersistGate loading={<LoadingSpinner />} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\n\r\nexport default RootApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst rootElement = document.getElementById('root')!;\r\nconst root = ReactDOM.createRoot(rootElement);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n      <ToastContainer />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"63f9bd0b\" + \".chunk.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_4jobs_frontend\"] = self[\"webpackChunk_4jobs_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [411], () => (__webpack_require__(5060)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","API_BASE_URL","process","console","log","apiRequest","async","method","endpoint","data","arguments","length","undefined","headers","token","localStorage","getItem","defaultHeaders","Authorization","mergedHeaders","axios","url","error","isAxiosError","response","status","store","dispatch","logout","Error","request","apiUploadRequest","formData","initialState","user","isAuthenticated","loading","otpStep","jobPosts","posts","totalPages","totalCount","currentPage","updatedAt","Date","toISOString","selectedPost","fetchUserProfile","createAsyncThunk","userId","thunkAPI","rejectWithValue","fetchUserProfileApi","message","login","credentials","userData","loginUserApi","googleLogin","googleToken","googleLoginApi","signup","signupUserApi","verifyOtp","otpCredentials","verifyOtpApi","updateUserProfile","_ref","updatedUserData","updateUserProfileApi","updateUserProjects","_ref2","projects","updatedProjects","updateUserProjectsApi","updateUserCertificates","_ref3","certificates","updatedCertificatesData","FormData","append","JSON","stringify","map","cert","details","forEach","index","file","name","updateUserCertificatesApi","updateUserExperiences","_ref4","experiences","updatedExperiences","updateUserExperiencesApi","updateUserResume","_ref5","resume","updatedResumeData","updateUserResumeApi","fetchJobPostsAsync","params","page","limit","sortBy","sortOrder","filter","queryParams","URLSearchParams","toString","fetchJobPostsuser","applyForJobAsync","_ref6","_ref7","jobId","applyForJob","fetchJobPost","_ref8","fetchJobPostApi","reportJobAsync","_ref9","_ref10","reason","reportJobApi","sendForgotPasswordOtp","email","sendForgotPasswordOtpApi","verifyForgotPasswordOtp","_ref11","otp","verifyForgotPasswordOtpApi","resetPassword","_ref12","newPassword","resetPasswordApi","refreshToken","_","_ref13","post","refreshTokenApi","authSlice","createSlice","reducers","state","removeItem","setOtpStep","action","payload","clearError","extraReducers","builder","addCase","pending","fulfilled","id","role","profileImage","appliedJobs","bio","setItem","rejected","actions","setLogoutAdmin","isAuthenticatedAdmin","dashboardData","recruiters","users","loginAdmin","password","adminLoginApi","err","logoutAdmin","fetchRecruiters","fetchRecruitersApi","approveRecruiter","recruiterId","approveRecruiterApi","fetchUsers","fetchUsersApi","blockUser","blockUserApi","unblockUser","unblockUserApi","fetchDashboardData","fetchDashboardDataApi","refreshAdminToken","refreshAdminTokenApi","adminSlice","find","isBlocked","sendOtpApi","recruiter","isAuthenticatedRecruiter","isApproved","profile","subscribed","planDuration","expiryDate","register","recruiterData","registerRecruiterApi","loginData","loginRecruiterApi","otpData","sendOtp","fetchProfile","fetchRecruiterProfileApi","updateProfile","profileData","updateRecruiterProfileApi","updateSubscription","subscriptionData","refreshRecruiterToken","refreshRecruiterTokenApi","recruiterSlice","Object","assign","REHYDRATE","key","selectRecruiter","fetchJobPosts","jobPostApi","createJobPost","postData","updateJobPost","deleteJobPost","fetchJobDetails","fetchAllJobPosts","push","findIndex","_id","fetchContestantsForJob","fetchJobApplicants","fetchContestantDetailsAsync","fetchUserDetails","fetchFilteredContestantsForJob","fetchFilteredApplicants","filteredResponse","applicants","Array","isArray","applicant","matchPercentage","contestantSlice","contestants","filteredContestants","selectedContestant","clearSelectedContestant","clearContestants","_action$payload","_action$payload2","fetchPosts","getState","fetchPostsAPI","fetchPostsByUserId","fetchPostsByUserIdAPI","createPost","content","image","File","video","createPostAPI","likePost","likeData","postId","likePostAPI","commentOnPost","commentData","userName","userProfileImage","commentOnPostAPI","deletePost","deletePostAPI","editPost","editPostAPI","dislikePost","dislikeData","dislikePostAPI","deleteComment","commentId","deleteCommentAPI","postsSlice","list","userPosts","hasMore","resetPosts","updatedPost","userIndex","fetchJobPostsApi","blockJobPost","blockJobPostApi","unblockJobPost","unblockJobPostApi","fetchConnectionProfile","fetchConnectionProfileApi","fetchRecommendations","fetchRecommendationsApi","sendConnectionRequest","senderId","recipientId","sendConnectionRequestApi","connection","fetchConnectionRequests","fetchConnectionRequestsApi","acceptConnectionRequest","requestId","acceptConnectionRequestApi","rejectConnectionRequest","rejectConnectionRequestApi","fetchConnections","fetchConnectionsApi","searchConnections","query","searchConnectionsApi","searchConnectionsMessage","searchConnectionsMessageApi","removeConnection","_ref14","connectionId","removeConnectionApi","connectionSlice","recommendations","connectionProfile","profilesConnection","connectionRequests","connections","lastFetchedAt","messageConnections","messageSearchResults","clearConnectionProfile","clearAllConnectionProfiles","updatedConnection","connectionStatus","now","_state$connections","fetchNotifications","fetchNotificationsApi","notificationSlice","items","unreadCount","seenNotifications","addNotification","unshift","markAsRead","notification","item","isRead","Math","max","markAsSeen","includes","markAllAsRead","newNotifications","fetchMessageConnections","fetchConnectionsMessageApi","fetchConversation","userId1","userId2","getConversationApi","conversationId","messages","markMessagesAsRead","messageIds","Promise","all","messageId","markMessageAsReadApi","getUnreadMessageCount","getUnreadMessageCountApi","userMessageSlice","conversations","currentUserId","resetUnreadCount","updateMessageStatus","values","conversation","m","addMessage","sender","recipient","some","msg","connectionIndex","conn","lastMessage","splice","setTypingStatus","_action$payload$isTyp","isTyping","setCurrentUserId","updateUnreadCount","fetchConversations","fetchConversationsApi","_error$response","fetchMessages","fetchMessagesApi","_error$response2","recruiterSendMessage","sendMessageApi","RecruitermessageSlice","RecruiterConversations","RecruiterMessages","typingStatus","onlineStatus","recruiterLoading","recruiterError","currentRecruiterId","messageSending","addRecruiterMessage","c","setRecruiterTypingStatus","markRecruiterMessageAsRead","_state$RecruiterMessa","lastMessageRead","locallyRead","setRecruiterOnlineStatus","online","updateRecruiterConversation","addNewRecruiterConversation","markAllMessagesAsLocallyRead","setCurrentRecruiterId","setMessageSending","conversationIndex","conv","lastMessageTimestamp","timestamp","fetchUserRecruiterConversations","fetchUserConversationsApi","fetchUserRecruiterMessages","fetchUserMessagesApi","sendUserRecruiterMessage","sendUserMessageApi","userRecruiterMessageSlice","totalUnreadCount","addUserRecruiterMessage","setUserRecruiterTypingStatus","markUserRecruiterMessageAsRead","_state$messages$conve","setUserOnlineStatus","updateConversation","addNewConversation","incrementUnreadCount","updateTotalUnreadCount","reduce","sum","fetchSubscriptions","subscriptions","fetchSubscriptionsApi","cancelSubscription","subscriptionId","cancelSubscriptionApi","subscription","fetchUserPosts","fetchUserPostsApi","blockUserPost","blockUserPostApi","searchUsersAndJobs","encodeURIComponent","searchUsersAndJobsApi","userSearchSlice","clearSearch","searchUsers","recruiterSearchSlice","resumeSlice","resumeData","generatedResumeLink","setResumeData","generateResumeStart","generateResumeSuccess","generateResumeFailure","clearResumeData","ENCRYPTION_KEY","REACT_APP_ENCRYPTION_KEY","encryptTransform","createTransform","inboundState","encryptedState","CryptoJS","encrypt","outboundState","decryptedState","decrypt","Utf8","parse","authPersistConfig","storage","whitelist","transforms","adminPersistConfig","recruiterPersistConfig","jobPostPersistConfig","contestantPersistConfig","postPersistConfig","adminJobPostPersistConfig","connectionPersistConfig","notificationPersistConfig","messagePersistConfig","recruiterMessagePersistConfig","persistedAuthReducer","persistReducer","authReducer","persistedAdminReducer","adminReducer","persistedRecruiterReducer","recruiterReducer","persistedJobPostReducer","jobPostReducer","persistedContestantReducer","contestantReducer","persistedPostReducer","postReducer","persistedAdminJobPostReducer","adminJobPostReducer","persistedConnectionReducer","connectionReducer","persistedNotificationReducer","notificationReducer","persistedUserMessageReducer","userMessageReducer","persistedRecruiterMessageReducer","recruiterMessageReducer","rootReducer","combineReducers","auth","admin","adminJobPost","notifications","recruiterMessages","userRecruiterMessages","userRecruiterMessageReducer","subscriptionReducer","userPostReducer","userSearch","userSearchReducer","recruiterSearch","recruiterSearchReducer","resumeReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","selectMemoizedConnections","createSelector","socketService","constructor","socket","connected","connect","this","disconnect","io","path","transports","reconnection","reconnectionAttempts","reconnectionDelay","userType","setupEventListeners","on","sendMessage","emit","warn","emitTyping","event","callback","_this$socket","off","getConnectionStatus","markNotificationAsRead","notificationId","emitUserCallOffer","offer","emitUserCallAnswer","callerId","answer","emitUserEndCall","onIncomingCall","_this$socket2","emitCallAnswer","onCallRejected","_this$socket3","CallContext","createContext","CallProvider","children","isIncomingCall","setIsIncomingCall","useState","incomingCallData","setIncomingCallData","isCallActive","setIsCallActive","handleIncomingCall","useCallback","acceptCall","rejectCall","setupVideoCall","endCall","_jsx","Provider","value","useCall","context","useContext","Login","setEmail","setPassword","errors","setErrors","useDispatch","useSelector","navigate","useNavigate","useEffect","GoogleOAuthProvider","clientId","className","_jsxs","onSubmit","e","preventDefault","validateForm","formErrors","test","keys","type","placeholder","onChange","target","required","disabled","Link","to","GoogleLogin","onSuccess","credential","onError","handleGoogleError","theme","size","onSignupSuccess","setName","confirmPassword","setConfirmPassword","signupError","setSignupError","validateField","fieldName","prev","every","unwrap","htmlFor","setOtp","timer","setTimer","isTimerActive","setIsTimerActive","countdown","setTimeout","prevTimer","clearTimeout","onClick","Signup","isOtpStep","setIsOtpStep","OtpVerification","SignupForm","signupEmail","createSocketListener","removeListener","UserHeader","showNotifications","setShowNotifications","showSearch","setShowSearch","searchQuery","setSearchQuery","pendingConnectionRequests","useMemo","totalNotificationCount","navigateTo","navigateToMessages","controller","AbortController","abort","removeNewNotificationListener","handleLogout","goToJobs","toggleNotifications","unreadNotifications","openConnectionRequests","toggleSearch","setShowMobileMenu","handleSearch","handleClearSearch","renderNavItem","icon","text","badge","FontAwesomeIcon","navItems","faHome","faBriefcase","faComments","faUsers","faBell","faUser","faSignOutAlt","showMobileMenu","toggleMobileMenu","src","alt","faSearch","faTimes","faBars","onKeyPress","faUserPlus","createdAt","toLocaleString","isOpen","UserCircle","CreatePostButton","PencilIcon","xmlns","fill","viewBox","stroke","formatDate","dateString","year","month","day","hour","minute","imageUrl","videoUrl","likes","comments","currentUser","newComment","setNewComment","showComments","setShowComments","localComments","setLocalComments","isLiked","controls","handleLike","FaThumbsUp","handleDislike","FaThumbsDown","FaComment","comment","handleComment","trim","newCommentData","localNewComment","prevComments","MainFeed","observer","useRef","lastPostElementRef","node","current","IntersectionObserver","entries","isIntersecting","observe","ref","Post","onViewProfile","handleSendRequest","getConnectionButton","handleViewProfile","RecommendationCard","Dashboard","isSidebarOpen","setIsSidebarOpen","isRecommendationsOpen","setIsRecommendationsOpen","toggleSidebar","toggleRecommendations","Header","ChevronLeft","Sidebar","RecommendationsPanel","ChevronRight","verifyToken","_Fragment","Navigate","replace","AdminLogin","setFormErrors","setIsOpen","FaTimes","FaBars","FaTachometerAlt","FaUserAlt","FaUsers","FaClipboard","FaBriefcase","FaNewspaper","dropdownOpen","setDropdownOpen","toggleDropdown","FaUserCircle","goToProfile","FaSignOutAlt","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","DashboardCard","title","AdminDashboard","userCount","recruiterCount","companyCount","totalRevenue","jobPostCount","userPostCount","revenueData","chartData","labels","datasets","label","amount","borderColor","backgroundColor","toFixed","Line","options","responsive","plugins","legend","position","display","Register","setFormData","companyName","phone","governmentId","handleChange","fileSizeLimit","formDataWithFile","files","results","onSelectUser","charAt","toUpperCase","RecruiterHeader","menuOpen","setMenuOpen","showSearchResults","setShowSearchResults","_state$recruiter","searchResults","isLoading","searchRef","debouncedSearch","debounce","cancel","handleClickOutside","contains","document","addEventListener","removeEventListener","handleAddJobs","handleMessagesClick","handleLogoClick","SearchResults","contestantId","User","Briefcase","MapPin","location","CreditCard","Calendar","jobs","job","_job$company","company","wayOfWork","IndianRupee","salaryRange","min","Clock","toLocaleDateString","description","skillsRequired","slice","skill","MainContent","JobList","VerifyOtp","_location$state","useLocation","AdminRecruiterList","fetchedRecruiters","setCurrentPage","searchTerm","setSearchTerm","ceil","filteredRecruiters","toLowerCase","FaSearch","handleApprove","FaCheck","handleDownloadGovernmentId","recruiterName","anchor","createElement","fullurl","href","setAttribute","body","appendChild","click","removeChild","FaDownload","FaChevronLeft","FaChevronRight","LoadingSpinner","LongProfileDetail","ProfileDetail","Section","CertificateCard","certificate","issuingOrganization","dateOfIssue","ProjectCard","project","link","rel","ExternalLink","ExperienceCard","experience","startDate","endDate","_user$skills","_user$certificates","_user$projects","_user$experiences","useParams","handleUpdateProfile","handleViewPosts","Info","about","dateOfBirth","gender","Award","skills","join","FileText","Code","exp","Profile","_user$phone","_user$dateOfBirth","split","isValid","newErrors","dataToSubmit","toast","success","rows","accept","Resume","setResume","Upload","selectedFile","Projects","setProjects","field","i","validateProjects","projectErrors","_errors$index","_errors$index2","_errors$index3","_errors$index4","_errors$index5","_errors$index6","prevErrors","removeProject","X","addProject","Plus","Certificates","initialCertificates","setCertificates","currentCertificate","setCurrentCertificate","editingIndex","setEditingIndex","addNewCertificate","removeCertificate","editCertificate","Edit2","validateCertificate","updatedCertificates","certificatesWithFiles","Experiences","setExperiences","currentExperience","setCurrentExperience","currentlyWorking","ToastContainer","_user$id2","removeExperience","handleEdit","dateRegex","validateExperience","_user$id","checked","UpdateProfile","AdminProfile","adminDetails","readOnly","RecruiterProfile","employeeIdImage","RecruiterProfileUpdate","emailRegex","phoneRegex","nameRegex","locationRegex","prevData","valid","fileName","updatedData","then","onDelete","onEdit","onToggleStatus","onViewContestants","_post$company","isBlock","AlertTriangle","substring","Users","ToggleRight","ToggleLeft","Edit","Trash2","Eye","handleViewDetails","onClose","onConfirm","handleConfirm","JobPostWrapper","isModalOpen","setIsModalOpen","postToDelete","setPostToDelete","handleDelete","confirmDelete","handleCreate","handleToggleStatus","handleViewContestants","Loader","AlertCircle","JobPost","ConfirmationModal","_formData$company","_formData$company2","initialData","isEditing","website","logo","qualifications","parent","child","handleArrayChange","companyWebsite","validateJobPostForm","Book","Building","Globe","Laptop","CheckSquare","plans","price","duration","onSelectPlan","plan","onFailure","isScriptLoaded","setIsScriptLoaded","script","onload","handlePayment","window","Razorpay","currency","handler","setMonth","getMonth","setFullYear","getFullYear","calculateExpiryDate","subscriptionAmount","updateSubscriptionApi","prefill","color","open","CreateJobPost","showSubscriptionPlans","setShowSubscriptionPlans","selectedPlan","setSelectedPlan","checkSubscriptionStatus","isSubscribed","isExpired","SubscriptionPlans","RazorpayPayment","handlePaymentSuccess","PlusCircle","JobPostForm","jobPostData","bgColor","Icon","CheckCircle","EditJobPost","jobPost","setJobPost","p","Toast","setPage","setLimit","setSortBy","setSortOrder","setFilter","reportDialog","setReportDialog","reportReason","setReportReason","selectedJobId","setSelectedJobId","isSmallScreen","useMediaQuery","Box","justifyContent","alignItems","minHeight","CircularProgress","Typography","align","sx","bgcolor","Container","maxWidth","py","variant","component","gutterBottom","Grid","container","spacing","mb","xs","sm","md","FormControl","fullWidth","minWidth","InputLabel","Select","labelId","MenuItem","Button","handleFilterChange","height","lg","boxShadow","border","borderRadius","Business","LocationOn","CalendarToday","CardActions","resultAction","match","handleApply","IconButton","handleReportClick","Flag","mt","Pagination","count","handlePageChange","newPage","Dialog","DialogTitle","DialogContent","TextField","autoFocus","margin","DialogActions","JobDetail","_user$appliedJobs","_jobPost$company","applying","setApplying","hasApplied","hasResume","BookOpen","qualification","autoClose","hideProgressBar","onPageChange","pageNumbers","number","width","cx","cy","r","strokeWidth","d","JobContestantsList","isFiltered","setIsFiltered","isFiltering","setIsFiltering","ErrorMessage","displayedContestants","contestantsToRender","handleResetFilter","Filter","contestant","Mail","download","handleViewContestant","ContestantDetails","_state$recruiter$recr","Phone","ArrowLeft","applicantId","startConversationApi","UserList","usersPerPage","filteredUsers","indexOfLastUser","indexOfFirstUser","currentUsers","handleUnblock","FaUnlock","handleBlock","FaBan","Modal","PostCard","paginate","UserPostsList","isDeleteModalOpen","setIsDeleteModalOpen","setToast","handleDeleteClick","postsPerPage","pageNumber","formatFileSize","bytes","parseInt","floor","round","pow","MAX_IMAGE_SIZE","MAX_VIDEO_SIZE","TARGET_VIDEO_SIZE","CompressionLoader","ProfessionalIcon","delay","style","animationDelay","left","random","top","fillRule","clipRule","FullScreenLoader","setLikes","shares","setShares","setComments","level","setLevel","isViral","setIsViral","interval","setInterval","clearInterval","handleShare","ALLOWED_IMAGE_TYPES","ALLOWED_VIDEO_TYPES","ConfirmModal","onCancel","CreatePost","setContent","setImage","setVideo","previewImage","setPreviewImage","previewVideo","setPreviewVideo","showConfirmModal","setShowConfirmModal","contentError","setContentError","fileError","setFileError","isCompressing","setIsCompressing","isUploading","setIsUploading","compressedVideo","setCompressedVideo","isProcessing","setIsProcessing","isConfirmed","setIsConfirmed","isSubmitting","setIsSubmitting","validateContent","validateFile","isImage","maxSize","allowedTypes","createPostInBackend","resetForm","compressVideo","ffmpeg","FFmpeg","load","inputFileName","outputFileName","writeFile","fetchFile","inputFile","getDuration","targetBitrate","exec","readFile","compressedBlob","Blob","compressedFile","resolve","preload","onloadedmetadata","URL","revokeObjectURL","createObjectURL","ImageIcon","VideoIcon","info","compressed","removeImage","XIcon","removeVideo","EditPost","_state$auth$user","commentToDelete","setCommentToDelete","pendingUpdate","setPendingUpdate","updatePostInBackend","compressedData","updatedPostData","newContent","handleDeleteComment","TrashIcon","AdminJobPost","_selectedPost$company","_selectedPost$salaryR","_selectedPost$salaryR2","_selectedPost$recruit","_selectedPost$recruit2","_selectedPost$applica","_selectedPost$reports","_selectedPost$skillsR","_selectedPost$qualifi","setSelectedPost","confirmAction","setConfirmAction","localJobPosts","setLocalJobPosts","sortCriteria","setSortCriteria","showApplicants","setShowApplicants","sortedPosts","sort","a","b","_a$reports","_b$reports","aReportCount","reports","bReportCount","getTime","filteredPosts","paginatedPosts","_post$company2","_post$company3","FaBuilding","FaMapMarkerAlt","FaCalendarAlt","FaExclamationTriangle","FaEye","handleUnblockPost","handleBlockPost","jobPriority","FaUserFriends","report","_report$user","confirmBlockUnblock","prevPosts","ConnectionProfile","handleClose","faArrowLeft","faEnvelope","faPhone","faBirthdayCake","faVenusMars","Connections","localLoading","setLocalLoading","fetchData","catch","truncateBio","wordLimit","words","requester","handleAccept","faUserCheck","handleReject","faUserTimes","faCalendarAlt","handleRemove","onSelectConversation","filteredConnections","_connection$lastMessa","isOnline","toLocaleTimeString","userVideoCallService","peerConnection","localStream","remoteStream","onRemoteStreamUpdate","onCallStateChange","initializePeerConnection","RTCPeerConnection","iceServers","urls","ontrack","streams","onicecandidate","candidate","resetPeerConnection","close","startLocalStream","navigator","mediaDevices","getUserMedia","audio","makeCall","getTracks","track","addTrack","createOffer","setLocalDescription","offerString","Buffer","from","offerBase64","setRemoteDescription","RTCSessionDescription","createAnswer","answerString","handleAnswer","answerBase64","handleIceCandidate","candidateBase64","candidateString","addIceCandidate","RTCIceCandidate","setOnRemoteStreamUpdate","setOnCallStateChange","disconnectCall","stop","muteAudio","mute","getAudioTracks","enabled","hideVideo","hide","getVideoTracks","onEndCall","contextIncomingCallData","setLocalStream","setRemoteStream","isMuted","setIsMuted","isVideoHidden","setIsVideoHidden","setError","localVideoRef","remoteVideoRef","handleEndCall","stream","srcObject","callData","startCall","removeCallAnswerListener","removeCallRejectedListener","removeCallEndedListener","autoPlay","playsInline","muted","handleMuteToggle","faMicrophoneSlash","faMicrophone","handleVideoToggle","faVideoSlash","faVideo","_state$messages$conne","newMessage","setNewMessage","messagesEndRef","sendSocketMessage","isConnected","setIsConnected","handleDisconnect","handleNewMessage","isRecruiterMessage","handleUserTyping","removeConnectListener","handleConnect","removeDisconnectListener","removeNewMessageListener","removeUserTypingListener","useSocket","hasFetchedConversation","setHasFetchedConversation","typingTimeoutRef","debouncedEmitTypingRef","fetchConversationData","_messagesEndRef$curre","scrollIntoView","behavior","unreadMessages","handleSendMessage","messageData","handleTyping","_debouncedEmitTypingR","call","_debouncedEmitTypingR2","handleAcceptCall","handleStartVideoCall","handleEndVideoCall","UserVideoCall","strokeLinecap","strokeLinejoin","Messages","selectedUserId","setSelectedUserId","recruiterUnreadCount","handleSelectUser","FaUserTie","MessageConnectionSearch","ConversationList","handleBackToConversations","Conversation","userRecruiterSocketService","onIncomingCallCallback","onCallEndedCallback","onlineStatusInterval","startOnlineStatusUpdates","onlineUsers","joinConversation","leaveConversation","uuidv4","senderType","emitStoppedTyping","markMessageAsRead","offIncomingCall","emitCallOffer","_this$socket4","emitCallRejected","_this$socket5","onCallAnswer","_this$socket6","_this$socket7","emitEndCall","_this$socket8","onCallEnded","selectedConversationId","setIsLoading","fetchRecruiterConversations","participant","participantName","videoCallService","isRecruiter","currentRecruiter","setIsTyping","messageListRef","isVideoCallActive","setIsVideoCallActive","scrollToBottom","scrollTop","scrollHeight","fetchMessagesAndJoinConversation","formatMessageTime","date","format","isParticipantTyping","ConversationHeader","onMouseEnter","VideoCall","RecruiterMessaging","selectedConversation","setSelectedConversation","MessageList","incomingCall","setIncomingCall","incomingCallOffer","setIncomingCallOffer","parseISO","maxHeight","handleRejectCall","UserMessaging","setSelectedConversationId","newMessageNotification","setNewMessageNotification","latestConversation","UserConversationList","UserConversation","AdminSubscriptionManagement","selectedSubscription","setSelectedSubscription","filteredSubscriptions","subscriptionStartDate","handleCancelSubscription","confirmCancelSubscription","AdminUserPostManagement","showContent","setShowContent","userEmail","toggleContent","FaImage","FaVideo","confirmBlockPost","setAppliedJobs","sentRequests","setSentRequests","isApplied","handleApplyJob","handleViewJob","validateInput","input","ResumeBuilder","fullName","profileSummary","education","handleInputChange","sanitizedValue","handleProjectChange","tech","handleExperienceChange","updatedExperience","handleEducationChange","updatedEducation","resumeURL","pdfData","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","blob","generateResumeApi","technologies","addExperience","edu","institution","degree","graduationDate","removeEducation","addEducation","RecruiterJobDetails","_jobPost$company2","_jobPost$company3","_jobPost$applicants","_jobPost$qualificatio","_jobPost$skillsRequir","q","s","ForgotPassword","setNewPassword","step","setStep","canResend","setCanResend","validateEmail","result","handleResendOtp","AppContent","removeIncomingCallListener","Routes","Route","element","PrivateRoute","UserProfile","PostList","PostsList","AdminPrivateRoute","RecruiterLogin","RecruiterSignup","RecruiterPrivateRoute","RecruiterDashboard","RecruiterMessage","IncomingCallDialog","App","RootApp","PersistGate","rootElement","getElementById","ReactDOM","render","React","BrowserRouter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","O","chunkIds","fn","priority","notFulfilled","Infinity","j","n","getter","__esModule","getPrototypeOf","obj","t","mode","ns","create","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","u","chunkId","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","baseURI","self","installedChunks","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}